#pragma warning disable 219
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ludiq.Generated.Aot
{
	
	
	// AndroidDebug.op_Equality
	// AndroidDebug.op_Implicit
	// AndroidDebug.op_Inequality
	// AnimationEventManager.op_Equality
	// AnimationEventManager.op_Implicit
	// AnimationEventManager.op_Inequality
	// AppDeeplinkUI.op_Equality
	// AppDeeplinkUI.op_Implicit
	// AppDeeplinkUI.op_Inequality
	// AreaLightController.op_Equality
	// AreaLightController.op_Implicit
	// AreaLightController.op_Inequality
	// ArmCopyController.op_Equality
	// ArmCopyController.op_Implicit
	// ArmCopyController.op_Inequality
	// AudioManager.CurrentSnapshot
	// AudioManager.op_Equality
	// AudioManager.op_Implicit
	// AudioManager.op_Inequality
	// AudioSync.op_Equality
	// AudioSync.op_Implicit
	// AudioSync.op_Inequality
	// BeautifyEffect.Beautify.enabled
	// BeautifyEffect.Beautify.op_Equality
	// BeautifyEffect.Beautify.op_Implicit
	// BeautifyEffect.Beautify.op_Inequality
	// BeautifyEffect.Beautify.profile
	// BeautifyEffect.BeautifyProfile.op_Equality
	// BeautifyEffect.BeautifyProfile.op_Implicit
	// BeautifyEffect.BeautifyProfile.op_Inequality
	// BlendshapesController.op_Equality
	// BlendshapesController.op_Implicit
	// BlendshapesController.op_Inequality
	// Bolt.AnimatorMessageListener.op_Equality
	// Bolt.AnimatorMessageListener.op_Implicit
	// Bolt.AnimatorMessageListener.op_Inequality
	// Bolt.FlowMachine.enabled
	// Bolt.FlowMachine.op_Equality
	// Bolt.FlowMachine.op_Implicit
	// Bolt.FlowMachine.op_Inequality
	// Bolt.FlowMacro.op_Equality
	// Bolt.FlowMacro.op_Implicit
	// Bolt.FlowMacro.op_Inequality
	// Bolt.StateMachine.op_Equality
	// Bolt.StateMachine.op_Implicit
	// Bolt.StateMachine.op_Inequality
	// Bolt.StateMacro.op_Equality
	// Bolt.StateMacro.op_Implicit
	// Bolt.StateMacro.op_Inequality
	// Bolt.Variables.op_Equality
	// Bolt.Variables.op_Implicit
	// Bolt.Variables.op_Inequality
	// BoundaryTest.op_Equality
	// BoundaryTest.op_Implicit
	// BoundaryTest.op_Inequality
	// BoundsLockedObject.op_Equality
	// BoundsLockedObject.op_Implicit
	// BoundsLockedObject.op_Inequality
	// ButtonDownListener.op_Equality
	// ButtonDownListener.op_Implicit
	// ButtonDownListener.op_Inequality
	// ButtonEnabler.op_Equality
	// ButtonEnabler.op_Implicit
	// ButtonEnabler.op_Inequality
	// CameraBehavior.op_Equality
	// CameraBehavior.op_Implicit
	// CameraBehavior.op_Inequality
	// CameraManager.op_Equality
	// CameraManager.op_Implicit
	// CameraManager.op_Inequality
	// ChangeMaterialsEventHandler.op_Equality
	// ChangeMaterialsEventHandler.op_Implicit
	// ChangeMaterialsEventHandler.op_Inequality
	// ChangeMaterialsEventHandlerSkinnedMesh.op_Equality
	// ChangeMaterialsEventHandlerSkinnedMesh.op_Implicit
	// ChangeMaterialsEventHandlerSkinnedMesh.op_Inequality
	// CharacterCameraConstraint.op_Equality
	// CharacterCameraConstraint.op_Implicit
	// CharacterCameraConstraint.op_Inequality
	// CharacterCapsule.op_Equality
	// CharacterCapsule.op_Implicit
	// CharacterCapsule.op_Inequality
	// ChatController.op_Equality
	// ChatController.op_Implicit
	// ChatController.op_Inequality
	// CheckConfidenceLevel.op_Equality
	// CheckConfidenceLevel.op_Implicit
	// CheckConfidenceLevel.op_Inequality
	// ClockCollisionDetection.op_Equality
	// ClockCollisionDetection.op_Implicit
	// ClockCollisionDetection.op_Inequality
	// ClockManager.op_Equality
	// ClockManager.op_Implicit
	// ClockManager.op_Inequality
	// CloudsManager.op_Equality
	// CloudsManager.op_Implicit
	// CloudsManager.op_Inequality
	// CloudsManagerForOsaka.op_Equality
	// CloudsManagerForOsaka.op_Implicit
	// CloudsManagerForOsaka.op_Inequality
	// CommandMenuButton.op_Equality
	// CommandMenuButton.op_Implicit
	// CommandMenuButton.op_Inequality
	// CubeBehavior.op_Equality
	// CubeBehavior.op_Implicit
	// CubeBehavior.op_Inequality
	// CurtainController.op_Equality
	// CurtainController.op_Implicit
	// CurtainController.op_Inequality
	// CustomBoundsControl.op_Equality
	// CustomBoundsControl.op_Implicit
	// CustomBoundsControl.op_Inequality
	// CustomBoundsControlMeshSequence.op_Equality
	// CustomBoundsControlMeshSequence.op_Implicit
	// CustomBoundsControlMeshSequence.op_Inequality
	// CustomBoxDisplay.op_Equality
	// CustomBoxDisplay.op_Implicit
	// CustomBoxDisplay.op_Inequality
	// CustomDebugUI.op_Equality
	// CustomDebugUI.op_Implicit
	// CustomDebugUI.op_Inequality
	// CustomLightManager.op_Equality
	// CustomLightManager.op_Implicit
	// CustomLightManager.op_Inequality
	// CustomLightManagerForOsaka.op_Equality
	// CustomLightManagerForOsaka.op_Implicit
	// CustomLightManagerForOsaka.op_Inequality
	// CustomLightManagerForOsaka.TimeOfDay
	// CustomPlatformableSet.op_Equality
	// CustomPlatformableSet.op_Implicit
	// CustomPlatformableSet.op_Inequality
	// CylinderBehavior.op_Equality
	// CylinderBehavior.op_Implicit
	// CylinderBehavior.op_Inequality
	// DebugUIBuilder.op_Equality
	// DebugUIBuilder.op_Implicit
	// DebugUIBuilder.op_Inequality
	// DebugUISample.op_Equality
	// DebugUISample.op_Implicit
	// DebugUISample.op_Inequality
	// DigitalClockManager..ctor
	// DigitalClockManager.AutoIncrease
	// DigitalClockManager.op_Equality
	// DigitalClockManager.op_Implicit
	// DigitalClockManager.op_Inequality
	// DigitalClockManager.SetLongDecreasePressFalse
	// DigitalClockManager.SetLongDecreasePressTrue
	// DigitalClockManager.SetLongIncreasePressFalse
	// DigitalClockManager.SetLongIncreasePressTrue
	// DigitalClockManager.StartAutoIncrease
	// DigitalClockManager.StopAutoIncrease
	// DigitalClockManagerForOsaka.op_Equality
	// DigitalClockManagerForOsaka.op_Implicit
	// DigitalClockManagerForOsaka.op_Inequality
	// DigitalClockMotion.op_Equality
	// DigitalClockMotion.op_Implicit
	// DigitalClockMotion.op_Inequality
	// DoorSensor.op_Equality
	// DoorSensor.op_Implicit
	// DoorSensor.op_Inequality
	// DoorSync.op_Equality
	// DoorSync.op_Implicit
	// DoorSync.op_Inequality
	// DropdownSample.op_Equality
	// DropdownSample.op_Implicit
	// DropdownSample.op_Inequality
	// EnableSwitch.op_Equality
	// EnableSwitch.op_Implicit
	// EnableSwitch.op_Inequality
	// EnvMapAnimator.op_Equality
	// EnvMapAnimator.op_Implicit
	// EnvMapAnimator.op_Inequality
	// EscalatorPro.EscalatorPro.op_Equality
	// EscalatorPro.EscalatorPro.op_Implicit
	// EscalatorPro.EscalatorPro.op_Inequality
	// EscalatorPro.EscalatorPro.stopped
	// EscalatorPro.Stair.op_Equality
	// EscalatorPro.Stair.op_Implicit
	// EscalatorPro.Stair.op_Inequality
	// FadeUtils.op_Equality
	// FadeUtils.op_Implicit
	// FadeUtils.op_Inequality
	// float.op_Equality
	// float.op_GreaterThan
	// float.op_GreaterThanOrEqual
	// float.op_Inequality
	// float.op_LessThan
	// float.op_LessThanOrEqual
	// float.Parse
	// FogManager.op_Equality
	// FogManager.op_Implicit
	// FogManager.op_Inequality
	// FogManagerForOsaka.op_Equality
	// FogManagerForOsaka.op_Implicit
	// FogManagerForOsaka.op_Inequality
	// ForceRequestOwnershipNormcore.CheckIfHasNoOwner
	// ForceRequestOwnershipNormcore.CheckIfSameLocalOwner
	// ForceRequestOwnershipNormcore.ClearGrabOwnership
	// ForceRequestOwnershipNormcore.op_Equality
	// ForceRequestOwnershipNormcore.op_Implicit
	// ForceRequestOwnershipNormcore.op_Inequality
	// ForceRequestOwnershipNormcore.RequestFingersOwnership
	// ForceRequestOwnershipNormcore.RequestGrabOwnershipNoOwnerCheck
	// ForceRequestOwnershipNormcore.RequestTrackingSpaceOwnership
	// FreezeGeometries.op_Equality
	// FreezeGeometries.op_Implicit
	// FreezeGeometries.op_Inequality
	// GameManager.op_Equality
	// GameManager.op_Implicit
	// GameManager.op_Inequality
	// GameManagerOsaka.op_Equality
	// GameManagerOsaka.op_Implicit
	// GameManagerOsaka.op_Inequality
	// GazeTarget.op_Equality
	// GazeTarget.op_Implicit
	// GazeTarget.op_Inequality
	// GazeTargetSpawner.op_Equality
	// GazeTargetSpawner.op_Implicit
	// GazeTargetSpawner.op_Inequality
	// GeometryBehavior.op_Equality
	// GeometryBehavior.op_Implicit
	// GeometryBehavior.op_Inequality
	// GeometryInteraction.op_Equality
	// GeometryInteraction.op_Implicit
	// GeometryInteraction.op_Inequality
	// GeometryMeshSequenceSetModule.op_Equality
	// GeometryMeshSequenceSetModule.op_Implicit
	// GeometryMeshSequenceSetModule.op_Inequality
	// GeometrySetModule.op_Equality
	// GeometrySetModule.op_Implicit
	// GeometrySetModule.op_Inequality
	// GeometryStatusSaver.op_Equality
	// GeometryStatusSaver.op_Implicit
	// GeometryStatusSaver.op_Inequality
	// GeometryStatusSaver.SaveMiniSceneScale
	// GHLoader.op_Equality
	// GHLoader.op_Implicit
	// GHLoader.op_Inequality
	// GravityControllerReset.op_Equality
	// GravityControllerReset.op_Implicit
	// GravityControllerReset.op_Inequality
	// GuardianBoundaryDisplay.op_Equality
	// GuardianBoundaryDisplay.op_Implicit
	// GuardianBoundaryDisplay.op_Inequality
	// GuardianBoundaryEnforcer.op_Equality
	// GuardianBoundaryEnforcer.op_Implicit
	// GuardianBoundaryEnforcer.op_Inequality
	// HandedInputSelector.op_Equality
	// HandedInputSelector.op_Implicit
	// HandedInputSelector.op_Inequality
	// HandGrabber.op_Equality
	// HandGrabber.op_Implicit
	// HandGrabber.op_Inequality
	// HandInteraction.op_Equality
	// HandInteraction.op_Implicit
	// HandInteraction.op_Inequality
	// HandsActiveChecker.op_Equality
	// HandsActiveChecker.op_Implicit
	// HandsActiveChecker.op_Inequality
	// HandTrackingLostDetector.op_Equality
	// HandTrackingLostDetector.op_Implicit
	// HandTrackingLostDetector.op_Inequality
	// IndoorAudioTrigger.op_Equality
	// IndoorAudioTrigger.op_Implicit
	// IndoorAudioTrigger.op_Inequality
	// IndoorPerimetricTrigger.op_Equality
	// IndoorPerimetricTrigger.op_Implicit
	// IndoorPerimetricTrigger.op_Inequality
	// IndoorStairsAudioTrigger.op_Equality
	// IndoorStairsAudioTrigger.op_Implicit
	// IndoorStairsAudioTrigger.op_Inequality
	// int.ToString
	// InteractEvents.op_Equality
	// InteractEvents.op_Implicit
	// InteractEvents.op_Inequality
	// KoganeUnityLib.Example.Example.op_Equality
	// KoganeUnityLib.Example.Example.op_Implicit
	// KoganeUnityLib.Example.Example.op_Inequality
	// KoganeUnityLib.TMP_Typewriter.op_Equality
	// KoganeUnityLib.TMP_Typewriter.op_Implicit
	// KoganeUnityLib.TMP_Typewriter.op_Inequality
	// KoganeUnityLib.TMP_Typewriter.Play
	// LaserPointer.op_Equality
	// LaserPointer.op_Implicit
	// LaserPointer.op_Inequality
	// LevelSelector.op_Equality
	// LevelSelector.op_Implicit
	// LevelSelector.op_Inequality
	// LevelSelectorManager.op_Equality
	// LevelSelectorManager.op_Implicit
	// LevelSelectorManager.op_Inequality
	// LightSync.op_Equality
	// LightSync.op_Implicit
	// LightSync.op_Inequality
	// LinearDrive.op_Equality
	// LinearDrive.op_Implicit
	// LinearDrive.op_Inequality
	// LineRendererTextureAnimation.op_Equality
	// LineRendererTextureAnimation.op_Implicit
	// LineRendererTextureAnimation.op_Inequality
	// LipSyncDemo_Control.op_Equality
	// LipSyncDemo_Control.op_Implicit
	// LipSyncDemo_Control.op_Inequality
	// LipSyncDemo_SetCurrentTarget.op_Equality
	// LipSyncDemo_SetCurrentTarget.op_Implicit
	// LipSyncDemo_SetCurrentTarget.op_Inequality
	// LoadingButton.op_Equality
	// LoadingButton.op_Implicit
	// LoadingButton.op_Inequality
	// LoadingButtonMeshSequenceController.op_Equality
	// LoadingButtonMeshSequenceController.op_Implicit
	// LoadingButtonMeshSequenceController.op_Inequality
	// LocomotionController.op_Equality
	// LocomotionController.op_Implicit
	// LocomotionController.op_Inequality
	// LocomotionSampleSupport.op_Equality
	// LocomotionSampleSupport.op_Implicit
	// LocomotionSampleSupport.op_Inequality
	// LocomotionTeleport.op_Equality
	// LocomotionTeleport.op_Implicit
	// LocomotionTeleport.op_Inequality
	// Ludiq.AotDictionary.Add
	// Ludiq.AotDictionary.Clear
	// Ludiq.AotList..ctor
	// Ludiq.AotList.Add
	// Ludiq.AotList.Clear
	// Ludiq.AotList.Contains
	// Ludiq.AotList.Count
	// Ludiq.AotList.IndexOf
	// Ludiq.AotList.Remove
	// MASelectable.currentState
	// MASelectable.OnManipulationEnded
	// MASelectable.OnManipulationStarted
	// MASelectable.op_Equality
	// MASelectable.op_Implicit
	// MASelectable.op_Inequality
	// MATKPointer.InvokeSelectionEvent
	// MATKPointer.op_Equality
	// MATKPointer.op_Implicit
	// MATKPointer.op_Inequality
	// MATKPointerManager.CurrentObjectOnFocus
	// MATKPointerManager.op_Equality
	// MATKPointerManager.op_Implicit
	// MATKPointerManager.op_Inequality
	// MediaPlayerImage.op_Equality
	// MediaPlayerImage.op_Implicit
	// MediaPlayerImage.op_Inequality
	// MeshSequence.op_Equality
	// MeshSequence.op_Implicit
	// MeshSequence.op_Inequality
	// MeshSequenceController.op_Equality
	// MeshSequenceController.op_Implicit
	// MeshSequenceController.op_Inequality
	// MeshSequenceControllerImproved.op_Equality
	// MeshSequenceControllerImproved.op_Implicit
	// MeshSequenceControllerImproved.op_Inequality
	// MeshVisualizer.op_Equality
	// MeshVisualizer.op_Implicit
	// MeshVisualizer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Audio.AudioInfluencerController.op_Equality
	// Microsoft.MixedReality.Toolkit.Audio.AudioInfluencerController.op_Implicit
	// Microsoft.MixedReality.Toolkit.Audio.AudioInfluencerController.op_Inequality
	// Microsoft.MixedReality.Toolkit.Audio.AudioLoFiEffect.op_Equality
	// Microsoft.MixedReality.Toolkit.Audio.AudioLoFiEffect.op_Implicit
	// Microsoft.MixedReality.Toolkit.Audio.AudioLoFiEffect.op_Inequality
	// Microsoft.MixedReality.Toolkit.Audio.AudioOccluder.op_Equality
	// Microsoft.MixedReality.Toolkit.Audio.AudioOccluder.op_Implicit
	// Microsoft.MixedReality.Toolkit.Audio.AudioOccluder.op_Inequality
	// Microsoft.MixedReality.Toolkit.Boundary.MixedRealityBoundaryVisualizationProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.Boundary.MixedRealityBoundaryVisualizationProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.Boundary.MixedRealityBoundaryVisualizationProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.CameraSystem.BaseCameraSettingsProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.CameraSystem.BaseCameraSettingsProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.CameraSystem.BaseCameraSettingsProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.Diagnostics.DiagnosticsSystemVoiceControls.op_Equality
	// Microsoft.MixedReality.Toolkit.Diagnostics.DiagnosticsSystemVoiceControls.op_Implicit
	// Microsoft.MixedReality.Toolkit.Diagnostics.DiagnosticsSystemVoiceControls.op_Inequality
	// Microsoft.MixedReality.Toolkit.Diagnostics.MixedRealityDiagnosticsProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.Diagnostics.MixedRealityDiagnosticsProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.Diagnostics.MixedRealityDiagnosticsProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.Diagnostics.MixedRealityToolkitVisualProfiler.op_Equality
	// Microsoft.MixedReality.Toolkit.Diagnostics.MixedRealityToolkitVisualProfiler.op_Implicit
	// Microsoft.MixedReality.Toolkit.Diagnostics.MixedRealityToolkitVisualProfiler.op_Inequality
	// Microsoft.MixedReality.Toolkit.Diagnostics.VisualProfilerControl.op_Equality
	// Microsoft.MixedReality.Toolkit.Diagnostics.VisualProfilerControl.op_Implicit
	// Microsoft.MixedReality.Toolkit.Diagnostics.VisualProfilerControl.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundaryVisualizationDemo.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundaryVisualizationDemo.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundaryVisualizationDemo.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundingBoxExampleTest.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundingBoxExampleTest.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundingBoxExampleTest.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundsControlRuntimeExample.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundsControlRuntimeExample.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundsControlRuntimeExample.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ChangeManipulation.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ChangeManipulation.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ChangeManipulation.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ClearSpatialObservations.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ClearSpatialObservations.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ClearSpatialObservations.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ColorChanger.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ColorChanger.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ColorChanger.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ColorChangerUnityUI.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ColorChangerUnityUI.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ColorChangerUnityUI.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.DebugTextOutput.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.DebugTextOutput.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.DebugTextOutput.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.DemoSpatialMeshHandler.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.DemoSpatialMeshHandler.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.DemoSpatialMeshHandler.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.DisablePointersExample.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.DisablePointersExample.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.DisablePointersExample.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.AudioFeedbackPlayer.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.AudioFeedbackPlayer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.AudioFeedbackPlayer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.BlendOut.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.BlendOut.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.BlendOut.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ChangeSize.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ChangeSize.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ChangeSize.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ColorTap.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ColorTap.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ColorTap.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DoNotRender.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DoNotRender.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DoNotRender.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DrawOnTexture.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DrawOnTexture.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DrawOnTexture.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DwellSelection.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DwellSelection.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DwellSelection.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.EyeCalibrationChecker.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.EyeCalibrationChecker.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.EyeCalibrationChecker.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FaceUser.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FaceUser.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FaceUser.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FollowEyeGaze.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FollowEyeGaze.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FollowEyeGaze.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FollowEyeGazeGazeProvider.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FollowEyeGazeGazeProvider.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FollowEyeGazeGazeProvider.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.HitBehaviorDestroyOnSelect.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.HitBehaviorDestroyOnSelect.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.HitBehaviorDestroyOnSelect.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.LoadAdditiveScene.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.LoadAdditiveScene.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.LoadAdditiveScene.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.LoadProfilesOnStartup.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.LoadProfilesOnStartup.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.LoadProfilesOnStartup.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.InputPointerVisualizer.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.InputPointerVisualizer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.InputPointerVisualizer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.LogStructure.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.LogStructure.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.LogStructure.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.LogStructureEyeGaze.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.LogStructureEyeGaze.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.LogStructureEyeGaze.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputPlayback.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputPlayback.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputPlayback.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorder.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorder.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorder.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveWithCamera.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveWithCamera.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveWithCamera.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.RotateWithConstSpeedDir.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.RotateWithConstSpeedDir.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.RotateWithConstSpeedDir.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SnapTo.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SnapTo.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SnapTo.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupIterator.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupIterator.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupIterator.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Targeting.OnLookAtShowHoverFeedback.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Targeting.OnLookAtShowHoverFeedback.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Targeting.OnLookAtShowHoverFeedback.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetMoveToCamera.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetMoveToCamera.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetMoveToCamera.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ToggleGameObject.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ToggleGameObject.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ToggleGameObject.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TransportToRespawnLocation.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TransportToRespawnLocation.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TransportToRespawnLocation.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TriggerOnStartup.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TriggerOnStartup.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TriggerOnStartup.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TriggerZonePlaceObjsWithin.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TriggerZonePlaceObjsWithin.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TriggerZonePlaceObjsWithin.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.GridObjectLayoutControl.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.GridObjectLayoutControl.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.GridObjectLayoutControl.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.HandInteractionTouch.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.HandInteractionTouch.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.HandInteractionTouch.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.HandInteractionTouchRotate.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.HandInteractionTouchRotate.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.HandInteractionTouchRotate.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.HideTapToPlaceLabel.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.HideTapToPlaceLabel.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.HideTapToPlaceLabel.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.InputDataExample.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.InputDataExample.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.InputDataExample.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.InputDataExampleGizmo.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.InputDataExampleGizmo.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.InputDataExampleGizmo.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.LaunchUri.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.LaunchUri.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.LaunchUri.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.LeapCoreAssetsDetector.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.LeapCoreAssetsDetector.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.LeapCoreAssetsDetector.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.LoFiFilterSelection.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.LoFiFilterSelection.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.LoFiFilterSelection.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.MixedRealityCapabilityDemo.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.MixedRealityCapabilityDemo.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.MixedRealityCapabilityDemo.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.PrimaryPointerHandlerExample.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.PrimaryPointerHandlerExample.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.PrimaryPointerHandlerExample.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ProgressIndicatorDemo.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ProgressIndicatorDemo.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ProgressIndicatorDemo.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ReturnToBounds.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ReturnToBounds.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ReturnToBounds.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.Rotator.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.Rotator.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.Rotator.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ScrollableListPopulator.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ScrollableListPopulator.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ScrollableListPopulator.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ScrollablePagination.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ScrollablePagination.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ScrollablePagination.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ShowSliderValue.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ShowSliderValue.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ShowSliderValue.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SliderChangeColor.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SliderChangeColor.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SliderChangeColor.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SliderLunarLander.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SliderLunarLander.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SliderLunarLander.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SolverExampleManager.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SolverExampleManager.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SolverExampleManager.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SpawnOnPointerEvent.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SpawnOnPointerEvent.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SpawnOnPointerEvent.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.StandardShader.MaterialMatrix.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.StandardShader.MaterialMatrix.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.StandardShader.MaterialMatrix.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SystemKeyboardExample.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SystemKeyboardExample.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.SystemKeyboardExample.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.TetheredPlacement.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.TetheredPlacement.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.TetheredPlacement.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ToggleGazeSource.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ToggleGazeSource.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ToggleGazeSource.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ToggleSpatialMeshVisualization.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ToggleSpatialMeshVisualization.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Demos.ToggleSpatialMeshVisualization.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Experimental.Demos.WidgetElasticDemo.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Experimental.Demos.WidgetElasticDemo.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Experimental.Demos.WidgetElasticDemo.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Experimental.DialogTest.DialogExampleController.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Experimental.DialogTest.DialogExampleController.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Experimental.DialogTest.DialogExampleController.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.Experimental.HandMenu.UpdateSliderTrackLine.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.Experimental.HandMenu.UpdateSliderTrackLine.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.Experimental.HandMenu.UpdateSliderTrackLine.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.GestureTester.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.GestureTester.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.GestureTester.op_Inequality
	// Microsoft.MixedReality.Toolkit.Examples.RotateWithPan.op_Equality
	// Microsoft.MixedReality.Toolkit.Examples.RotateWithPan.op_Implicit
	// Microsoft.MixedReality.Toolkit.Examples.RotateWithPan.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.BaseServiceManager.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.BaseServiceManager.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.BaseServiceManager.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Boundary.BoundarySystemManager.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Boundary.BoundarySystemManager.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Boundary.BoundarySystemManager.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.CameraSystem.CameraSystemManager.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.CameraSystem.CameraSystemManager.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.CameraSystem.CameraSystemManager.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.ColorPicker.ColorPicker.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.ColorPicker.ColorPicker.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.ColorPicker.ColorPicker.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Diagnostics.DiagnosticsSystemManager.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Diagnostics.DiagnosticsSystemManager.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Diagnostics.DiagnosticsSystemManager.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Dialog.DialogButton.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Dialog.DialogButton.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Dialog.DialogButton.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Dialog.DialogShell.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Dialog.DialogShell.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Dialog.DialogShell.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.CustomDwellHandler.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.CustomDwellHandler.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.CustomDwellHandler.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellHandler.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellHandler.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellHandler.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellProfileWithDecay.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellProfileWithDecay.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellProfileWithDecay.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.InstantDwellSample.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.InstantDwellSample.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.InstantDwellSample.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.ListItemDwell.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.ListItemDwell.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.ListItemDwell.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.ToggleDwellSample.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.ToggleDwellSample.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Dwell.ToggleDwellSample.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Input.InputSystemManager.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Input.InputSystemManager.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Input.InputSystemManager.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Joystick.JoystickController.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Joystick.JoystickController.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Joystick.JoystickController.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Joystick.JoystickSliders.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Joystick.JoystickSliders.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Joystick.JoystickSliders.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticConfiguration.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticConfiguration.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticConfiguration.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.RiggedHandVisualizer.RiggedHandVisualizer.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.RiggedHandVisualizer.RiggedHandVisualizer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.RiggedHandVisualizer.RiggedHandVisualizer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.SpatialAwareness.SpatialAwarenessSystemManager.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.SpatialAwareness.SpatialAwarenessSystemManager.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.SpatialAwareness.SpatialAwarenessSystemManager.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.HandPulseLogic.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.HandPulseLogic.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.HandPulseLogic.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.HideOnDevice.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.HideOnDevice.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.HideOnDevice.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.SurfacePulse.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.SurfacePulse.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.SurfacePulse.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Teleport.TeleportSystemManager.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Teleport.TeleportSystemManager.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Teleport.TeleportSystemManager.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.AxisSlider.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.AxisSlider.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.AxisSlider.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.CapsLockHighlight.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.CapsLockHighlight.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.CapsLockHighlight.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.Dock.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.Dock.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.Dock.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable.CanDock
	// Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable.OnManipulationEnded
	// Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable.OnManipulationStarted
	// Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.DockPosition.DockedObject
	// Microsoft.MixedReality.Toolkit.Experimental.UI.DockPosition.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.DockPosition.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.DockPosition.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.HandCoach.MoveToTarget.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.HandCoach.MoveToTarget.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.HandCoach.MoveToTarget.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.HandCoach.RotateAroundPoint.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.HandCoach.RotateAroundPoint.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.HandCoach.RotateAroundPoint.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.HandInteractionHint.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.HandInteractionHint.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.HandInteractionHint.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardKeyFunc.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardKeyFunc.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardKeyFunc.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardTest.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardTest.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardTest.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardValueKey.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardValueKey.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardValueKey.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.MixedRealityKeyboard.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.MixedRealityKeyboard.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.MixedRealityKeyboard.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.MixedRealityKeyboardPreview.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.MixedRealityKeyboardPreview.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.MixedRealityKeyboardPreview.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.NonNativeKeyboard.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.NonNativeKeyboard.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.NonNativeKeyboard.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.NonNativeKeyboardTouchAssistant.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.NonNativeKeyboardTouchAssistant.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.NonNativeKeyboardTouchAssistant.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.SliderInputField.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.SliderInputField.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.SliderInputField.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.SymbolDisableHighlight.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.SymbolDisableHighlight.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.SymbolDisableHighlight.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.SymbolKeyboard.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.SymbolKeyboard.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.SymbolKeyboard.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.TMP_KeyboardInputField.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.TMP_KeyboardInputField.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.TMP_KeyboardInputField.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.UI_KeyboardInputField.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.UI_KeyboardInputField.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.UI_KeyboardInputField.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.UICollection.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.UI.UICollection.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.UI.UICollection.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Utilities.DirectionalIndicator.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Utilities.DirectionalIndicator.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Utilities.DirectionalIndicator.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Utilities.Follow.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Utilities.Follow.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Utilities.Follow.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Utilities.Follow.SmoothTo
	// Microsoft.MixedReality.Toolkit.Experimental.Utilities.Follow.SmoothTo
	// Microsoft.MixedReality.Toolkit.Experimental.Utilities.StabilizationPlaneModifier.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Utilities.StabilizationPlaneModifier.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Utilities.StabilizationPlaneModifier.op_Inequality
	// Microsoft.MixedReality.Toolkit.Experimental.Utilities.WorldAnchorManager.op_Equality
	// Microsoft.MixedReality.Toolkit.Experimental.Utilities.WorldAnchorManager.op_Implicit
	// Microsoft.MixedReality.Toolkit.Experimental.Utilities.WorldAnchorManager.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.AnimatedCursor.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.AnimatedCursor.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.AnimatedCursor.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.BaseCursor.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.BaseCursor.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.BaseCursor.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.BaseHandVisualizer.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.BaseHandVisualizer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.BaseHandVisualizer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.CursorContextInfo.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.CursorContextInfo.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.CursorContextInfo.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.CursorModifier.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.CursorModifier.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.CursorModifier.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.CurvePointer.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.CurvePointer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.CurvePointer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.DictationHandler.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.DictationHandler.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.DictationHandler.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.FingerCursor.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.FingerCursor.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.FingerCursor.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.FocusHandler.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.FocusHandler.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.FocusHandler.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.GGVPointer.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.GGVPointer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.GGVPointer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.HandBounds.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.HandBounds.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.HandBounds.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.InputActionHandler.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.InputActionHandler.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.InputActionHandler.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.LinePointer.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.LinePointer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.LinePointer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.MeshCursor.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.MeshCursor.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.MeshCursor.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizationProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizationProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizationProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityEyeTrackingProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityEyeTrackingProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityEyeTrackingProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionRulesProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionRulesProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionRulesProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionsProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionsProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionsProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.MousePointer.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.MousePointer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.MousePointer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.ObjectCursor.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.ObjectCursor.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.ObjectCursor.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.PointerHandler.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.PointerHandler.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.PointerHandler.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.PokePointer.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.PokePointer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.PokePointer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.SpherePointer.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.SpherePointer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.SpherePointer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.SpriteCursor.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.SpriteCursor.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.SpriteCursor.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.TouchHandler.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.TouchHandler.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.TouchHandler.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.TouchPointer.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.TouchPointer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.TouchPointer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Input.WindowsMixedRealityControllerVisualizer.op_Equality
	// Microsoft.MixedReality.Toolkit.Input.WindowsMixedRealityControllerVisualizer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Input.WindowsMixedRealityControllerVisualizer.op_Inequality
	// Microsoft.MixedReality.Toolkit.MixedRealityCameraProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.MixedRealityCameraProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.MixedRealityCameraProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.MixedRealityRegisteredServiceProvidersProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.MixedRealityRegisteredServiceProvidersProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.MixedRealityRegisteredServiceProvidersProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.MixedRealityToolkit.op_Equality
	// Microsoft.MixedReality.Toolkit.MixedRealityToolkit.op_Implicit
	// Microsoft.MixedReality.Toolkit.MixedRealityToolkit.op_Inequality
	// Microsoft.MixedReality.Toolkit.MixedRealityToolkitConfigurationProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.MixedRealityToolkitConfigurationProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.MixedRealityToolkitConfigurationProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.PhysicalPressEventRouter.op_Equality
	// Microsoft.MixedReality.Toolkit.PhysicalPressEventRouter.op_Implicit
	// Microsoft.MixedReality.Toolkit.PhysicalPressEventRouter.op_Inequality
	// Microsoft.MixedReality.Toolkit.Physics.DistorterBulge.op_Equality
	// Microsoft.MixedReality.Toolkit.Physics.DistorterBulge.op_Implicit
	// Microsoft.MixedReality.Toolkit.Physics.DistorterBulge.op_Inequality
	// Microsoft.MixedReality.Toolkit.Physics.DistorterGravity.op_Equality
	// Microsoft.MixedReality.Toolkit.Physics.DistorterGravity.op_Implicit
	// Microsoft.MixedReality.Toolkit.Physics.DistorterGravity.op_Inequality
	// Microsoft.MixedReality.Toolkit.Physics.DistorterSimplex.op_Equality
	// Microsoft.MixedReality.Toolkit.Physics.DistorterSimplex.op_Implicit
	// Microsoft.MixedReality.Toolkit.Physics.DistorterSimplex.op_Inequality
	// Microsoft.MixedReality.Toolkit.Physics.DistorterSphere.op_Equality
	// Microsoft.MixedReality.Toolkit.Physics.DistorterSphere.op_Implicit
	// Microsoft.MixedReality.Toolkit.Physics.DistorterSphere.op_Inequality
	// Microsoft.MixedReality.Toolkit.Physics.DistorterWiggly.op_Equality
	// Microsoft.MixedReality.Toolkit.Physics.DistorterWiggly.op_Implicit
	// Microsoft.MixedReality.Toolkit.Physics.DistorterWiggly.op_Inequality
	// Microsoft.MixedReality.Toolkit.Physics.Interpolator.op_Equality
	// Microsoft.MixedReality.Toolkit.Physics.Interpolator.op_Implicit
	// Microsoft.MixedReality.Toolkit.Physics.Interpolator.op_Inequality
	// Microsoft.MixedReality.Toolkit.Rendering.DepthBufferRenderer.op_Equality
	// Microsoft.MixedReality.Toolkit.Rendering.DepthBufferRenderer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Rendering.DepthBufferRenderer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Rendering.MaterialInstance.op_Equality
	// Microsoft.MixedReality.Toolkit.Rendering.MaterialInstance.op_Implicit
	// Microsoft.MixedReality.Toolkit.Rendering.MaterialInstance.op_Inequality
	// Microsoft.MixedReality.Toolkit.SceneSystem.MixedRealitySceneSystemProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.SceneSystem.MixedRealitySceneSystemProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.SceneSystem.MixedRealitySceneSystemProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.SpatialAwareness.MixedRealitySpatialAwarenessMeshObserverProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.SpatialAwareness.MixedRealitySpatialAwarenessMeshObserverProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.SpatialAwareness.MixedRealitySpatialAwarenessMeshObserverProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.SpatialAwareness.MixedRealitySpatialAwarenessSystemProfile.op_Equality
	// Microsoft.MixedReality.Toolkit.SpatialAwareness.MixedRealitySpatialAwarenessSystemProfile.op_Implicit
	// Microsoft.MixedReality.Toolkit.SpatialAwareness.MixedRealitySpatialAwarenessSystemProfile.op_Inequality
	// Microsoft.MixedReality.Toolkit.SubmitEventRouter.op_Equality
	// Microsoft.MixedReality.Toolkit.SubmitEventRouter.op_Implicit
	// Microsoft.MixedReality.Toolkit.SubmitEventRouter.op_Inequality
	// Microsoft.MixedReality.Toolkit.Teleport.ParabolicTeleportPointer.op_Equality
	// Microsoft.MixedReality.Toolkit.Teleport.ParabolicTeleportPointer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Teleport.ParabolicTeleportPointer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Teleport.TeleportCursor.op_Equality
	// Microsoft.MixedReality.Toolkit.Teleport.TeleportCursor.op_Implicit
	// Microsoft.MixedReality.Toolkit.Teleport.TeleportCursor.op_Inequality
	// Microsoft.MixedReality.Toolkit.Teleport.TeleportHotSpot.op_Equality
	// Microsoft.MixedReality.Toolkit.Teleport.TeleportHotSpot.op_Implicit
	// Microsoft.MixedReality.Toolkit.Teleport.TeleportHotSpot.op_Inequality
	// Microsoft.MixedReality.Toolkit.Teleport.TeleportPointer.op_Equality
	// Microsoft.MixedReality.Toolkit.Teleport.TeleportPointer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Teleport.TeleportPointer.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.AppBar.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.AppBar.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.AppBar.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.AppBarButton.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.AppBarButton.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.AppBarButton.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.Billboard.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.Billboard.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.Billboard.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.BoundingBox.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.BoundingBox.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.BoundingBox.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandlesConfiguration.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandlesConfiguration.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandlesConfiguration.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandlesConfiguration.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandlesConfiguration.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandlesConfiguration.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ButtonBorder.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ButtonBorder.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ButtonBorder.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ButtonCollider.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ButtonCollider.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ButtonCollider.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ButtonConfigHelper.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ButtonConfigHelper.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ButtonConfigHelper.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ButtonIconSet.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ButtonIconSet.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ButtonIconSet.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ButtonLayout.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ButtonLayout.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ButtonLayout.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ButtonSize.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ButtonSize.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ButtonSize.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ButtonSizeOffset.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ButtonSizeOffset.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ButtonSizeOffset.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ConstraintManager.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ConstraintManager.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ConstraintManager.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.CursorContextManipulationHandler.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.CursorContextManipulationHandler.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.CursorContextManipulationHandler.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.CursorContextObjectManipulator.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.CursorContextObjectManipulator.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.CursorContextObjectManipulator.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.DestroyOnAnimationComplete.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.DestroyOnAnimationComplete.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.DestroyOnAnimationComplete.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.FaceUserConstraint.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.FaceUserConstraint.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.FaceUserConstraint.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.FixedDistanceConstraint.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.FixedDistanceConstraint.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.FixedDistanceConstraint.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.FixedRotationToUserConstraint.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.FixedRotationToUserConstraint.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.FixedRotationToUserConstraint.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.FixedRotationToWorldConstraint.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.FixedRotationToWorldConstraint.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.FixedRotationToWorldConstraint.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.FollowMeToggle.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.FollowMeToggle.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.FollowMeToggle.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.HandInteractionPanZoom.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.HandInteractionPanZoom.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.HandInteractionPanZoom.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.InputRecordingControls.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.InputRecordingControls.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.InputRecordingControls.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.Interactable.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.Interactable.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.Interactable.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.InteractableOnFocus.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.InteractableOnFocus.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.InteractableOnFocus.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.InteractablePointerSimulator.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.InteractablePointerSimulator.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.InteractablePointerSimulator.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.InteractableReceiver.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.InteractableReceiver.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.InteractableReceiver.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.InteractableReceiverList.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.InteractableReceiverList.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.InteractableReceiverList.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.InteractableToggleCollection.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.InteractableToggleCollection.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.InteractableToggleCollection.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.LoaderController.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.LoaderController.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.LoaderController.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.MaintainApparentSizeConstraint.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.MaintainApparentSizeConstraint.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.MaintainApparentSizeConstraint.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ManipulationHandler.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ManipulationHandler.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ManipulationHandler.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.PinchSlider.CurrentSliderAxis
	// Microsoft.MixedReality.Toolkit.UI.PinchSlider.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.PinchSlider.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.PinchSlider.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.PinchSlider.SliderEndPosition
	// Microsoft.MixedReality.Toolkit.UI.PinchSlider.SliderStartPosition
	// Microsoft.MixedReality.Toolkit.UI.PinchSlider.SliderValue
	// Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.PressableButton.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.PressableButton.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.PressableButton.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2..ctor
	// Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorLoadingBar.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorLoadingBar.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorLoadingBar.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorObjectDisplay.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorObjectDisplay.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorObjectDisplay.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorOrbsRotator.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorOrbsRotator.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorOrbsRotator.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ReceiverBaseMonoBehavior.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ReceiverBaseMonoBehavior.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ReceiverBaseMonoBehavior.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.RotationAxisConstraint.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.RotationAxisConstraint.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.RotationAxisConstraint.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ScrollingObjectCollection.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ScrollingObjectCollection.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ScrollingObjectCollection.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.SliderSounds.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.SliderSounds.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.SliderSounds.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.States.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.States.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.States.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.Theme.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.Theme.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.Theme.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ToggleHandVisualisation.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ToggleHandVisualisation.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ToggleHandVisualisation.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ToolTip.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ToolTip.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ToolTip.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundBlob.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundBlob.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundBlob.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundCorners.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundCorners.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundCorners.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundMesh.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundMesh.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundMesh.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ToolTipConnector.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ToolTipConnector.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ToolTipConnector.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ToolTipLineHighlight.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ToolTipLineHighlight.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ToolTipLineHighlight.op_Inequality
	// Microsoft.MixedReality.Toolkit.UI.ToolTipSpawner.op_Equality
	// Microsoft.MixedReality.Toolkit.UI.ToolTipSpawner.op_Implicit
	// Microsoft.MixedReality.Toolkit.UI.ToolTipSpawner.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.BezierDataProvider.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.BezierDataProvider.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.BezierDataProvider.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.BezierInertia.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.BezierInertia.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.BezierInertia.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.CameraEventRouter.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.CameraEventRouter.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.CameraEventRouter.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.ClippingBox.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.ClippingBox.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.ClippingBox.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.ClippingPlane.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.ClippingPlane.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.ClippingPlane.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.ClippingSphere.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.ClippingSphere.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.ClippingSphere.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.EllipseLineDataProvider.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.EllipseLineDataProvider.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.EllipseLineDataProvider.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.Facades.ServiceFacade.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.Facades.ServiceFacade.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.Facades.ServiceFacade.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.HeadPositionOffset.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.HeadPositionOffset.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.HeadPositionOffset.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.HoverLight.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.HoverLight.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.HoverLight.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.LineFollower.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.LineFollower.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.LineFollower.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.MaintainBorderLightWidth.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.MaintainBorderLightWidth.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.MaintainBorderLightWidth.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.MeshLineRenderer.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.MeshLineRenderer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.MeshLineRenderer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.MeshOutline.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.MeshOutline.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.MeshOutline.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.MeshOutlineHierarchy.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.MeshOutlineHierarchy.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.MeshOutlineHierarchy.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.MeshSmoother.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.MeshSmoother.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.MeshSmoother.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer.enabled
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.ParabolaConstrainedLineDataProvider.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.ParabolaConstrainedLineDataProvider.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.ParabolaConstrainedLineDataProvider.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.ParabolaPhysicalLineDataProvider.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.ParabolaPhysicalLineDataProvider.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.ParabolaPhysicalLineDataProvider.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.ParticleSystemLineRenderer.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.ParticleSystemLineRenderer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.ParticleSystemLineRenderer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.ProximityLight.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.ProximityLight.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.ProximityLight.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.RectangleLineDataProvider.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.RectangleLineDataProvider.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.RectangleLineDataProvider.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.RectTransformCubeScaler.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.RectTransformCubeScaler.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.RectTransformCubeScaler.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.ScatterObjectCollection.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.ScatterObjectCollection.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.ScatterObjectCollection.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.SimpleLineDataProvider.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.SimpleLineDataProvider.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.SimpleLineDataProvider.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.ConstantViewSize.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.ConstantViewSize.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.ConstantViewSize.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraint.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraint.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraint.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraintPalmUp.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraintPalmUp.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraintPalmUp.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.InBetween.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.InBetween.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.InBetween.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Momentum.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Momentum.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Momentum.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital.enabled
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital.LocalOffset
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Overlap.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Overlap.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Overlap.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView..ctor
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView.enabled
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView.MaxDistance
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView.MinDistance
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView.MoveLerpTime
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.SolverHandler.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.SolverHandler.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.SolverHandler.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.SurfaceMagnetism.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.SurfaceMagnetism.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.SurfaceMagnetism.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.TapToPlace.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.TapToPlace.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.Solvers.TapToPlace.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.SplineDataProvider.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.SplineDataProvider.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.SplineDataProvider.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.StripMeshLineRenderer.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.StripMeshLineRenderer.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.StripMeshLineRenderer.op_Inequality
	// Microsoft.MixedReality.Toolkit.Utilities.TileGridObjectCollection.op_Equality
	// Microsoft.MixedReality.Toolkit.Utilities.TileGridObjectCollection.op_Implicit
	// Microsoft.MixedReality.Toolkit.Utilities.TileGridObjectCollection.op_Inequality
	// MouseLook.op_Equality
	// MouseLook.op_Implicit
	// MouseLook.op_Inequality
	// MoviePlayerSample.op_Equality
	// MoviePlayerSample.op_Implicit
	// MoviePlayerSample.op_Inequality
	// MoviePlayerSampleControls.op_Equality
	// MoviePlayerSampleControls.op_Implicit
	// MoviePlayerSampleControls.op_Inequality
	// mParent.op_Equality
	// mParent.op_Implicit
	// mParent.op_Inequality
	// NavigationSync.op_Equality
	// NavigationSync.op_Implicit
	// NavigationSync.op_Inequality
	// NavMeshConverter.op_Equality
	// NavMeshConverter.op_Implicit
	// NavMeshConverter.op_Inequality
	// NewTriggers.op_Equality
	// NewTriggers.op_Implicit
	// NewTriggers.op_Inequality
	// Normal.Realtime.AudioOutput.op_Equality
	// Normal.Realtime.AudioOutput.op_Implicit
	// Normal.Realtime.AudioOutput.op_Inequality
	// Normal.Realtime.AudioPreprocessorPlaybackListener.op_Equality
	// Normal.Realtime.AudioPreprocessorPlaybackListener.op_Implicit
	// Normal.Realtime.AudioPreprocessorPlaybackListener.op_Inequality
	// Normal.Realtime.Examples.CubePlayer.op_Equality
	// Normal.Realtime.Examples.CubePlayer.op_Implicit
	// Normal.Realtime.Examples.CubePlayer.op_Inequality
	// Normal.Realtime.Examples.CubePlayerManager.op_Equality
	// Normal.Realtime.Examples.CubePlayerManager.op_Implicit
	// Normal.Realtime.Examples.CubePlayerManager.op_Inequality
	// Normal.Realtime.Examples.HoverbirdPlayer.op_Equality
	// Normal.Realtime.Examples.HoverbirdPlayer.op_Implicit
	// Normal.Realtime.Examples.HoverbirdPlayer.op_Inequality
	// Normal.Realtime.Examples.HoverbirdPlayerManager.op_Equality
	// Normal.Realtime.Examples.HoverbirdPlayerManager.op_Implicit
	// Normal.Realtime.Examples.HoverbirdPlayerManager.op_Inequality
	// Normal.Realtime.Examples.VoiceMouthMove.op_Equality
	// Normal.Realtime.Examples.VoiceMouthMove.op_Implicit
	// Normal.Realtime.Examples.VoiceMouthMove.op_Inequality
	// Normal.Realtime.RealtimeAvatar.head
	// Normal.Realtime.RealtimeAvatar.isOwnedLocallyInHierarchy
	// Normal.Realtime.RealtimeAvatar.leftHand
	// Normal.Realtime.RealtimeAvatar.op_Equality
	// Normal.Realtime.RealtimeAvatar.op_Implicit
	// Normal.Realtime.RealtimeAvatar.op_Inequality
	// Normal.Realtime.RealtimeAvatar.ownerIDInHierarchy
	// Normal.Realtime.RealtimeAvatar.rightHand
	// Normal.Realtime.RealtimeAvatarEditor.op_Equality
	// Normal.Realtime.RealtimeAvatarEditor.op_Implicit
	// Normal.Realtime.RealtimeAvatarEditor.op_Inequality
	// Normal.Realtime.RealtimeAvatarManager.localAvatar
	// Normal.Realtime.RealtimeAvatarManager.op_Equality
	// Normal.Realtime.RealtimeAvatarManager.op_Implicit
	// Normal.Realtime.RealtimeAvatarManager.op_Inequality
	// Normal.Realtime.RealtimeAvatarManagerEditor.op_Equality
	// Normal.Realtime.RealtimeAvatarManagerEditor.op_Implicit
	// Normal.Realtime.RealtimeAvatarManagerEditor.op_Inequality
	// Normal.Realtime.RealtimeAvatarVoice.op_Equality
	// Normal.Realtime.RealtimeAvatarVoice.op_Implicit
	// Normal.Realtime.RealtimeAvatarVoice.op_Inequality
	// Normal.Realtime.RealtimeAvatarVoiceScale.op_Equality
	// Normal.Realtime.RealtimeAvatarVoiceScale.op_Implicit
	// Normal.Realtime.RealtimeAvatarVoiceScale.op_Inequality
	// Normal.Realtime.Utility.OculusSetFloorTrackingOriginWithoutPlugin.op_Equality
	// Normal.Realtime.Utility.OculusSetFloorTrackingOriginWithoutPlugin.op_Implicit
	// Normal.Realtime.Utility.OculusSetFloorTrackingOriginWithoutPlugin.op_Inequality
	// NormcoreManager.op_Equality
	// NormcoreManager.op_Implicit
	// NormcoreManager.op_Inequality
	// OculusSampleFramework.BoneCapsuleTriggerLogic.op_Equality
	// OculusSampleFramework.BoneCapsuleTriggerLogic.op_Implicit
	// OculusSampleFramework.BoneCapsuleTriggerLogic.op_Inequality
	// OculusSampleFramework.ButtonController.op_Equality
	// OculusSampleFramework.ButtonController.op_Implicit
	// OculusSampleFramework.ButtonController.op_Inequality
	// OculusSampleFramework.ButtonTriggerZone.op_Equality
	// OculusSampleFramework.ButtonTriggerZone.op_Implicit
	// OculusSampleFramework.ButtonTriggerZone.op_Inequality
	// OculusSampleFramework.ColorGrabbable.op_Equality
	// OculusSampleFramework.ColorGrabbable.op_Implicit
	// OculusSampleFramework.ColorGrabbable.op_Inequality
	// OculusSampleFramework.ControllerBoxController.op_Equality
	// OculusSampleFramework.ControllerBoxController.op_Implicit
	// OculusSampleFramework.ControllerBoxController.op_Inequality
	// OculusSampleFramework.CowController.op_Equality
	// OculusSampleFramework.CowController.op_Implicit
	// OculusSampleFramework.CowController.op_Inequality
	// OculusSampleFramework.DistanceGrabbable.op_Equality
	// OculusSampleFramework.DistanceGrabbable.op_Implicit
	// OculusSampleFramework.DistanceGrabbable.op_Inequality
	// OculusSampleFramework.DistanceGrabber.op_Equality
	// OculusSampleFramework.DistanceGrabber.op_Implicit
	// OculusSampleFramework.DistanceGrabber.op_Inequality
	// OculusSampleFramework.DistanceGrabberSample.op_Equality
	// OculusSampleFramework.DistanceGrabberSample.op_Implicit
	// OculusSampleFramework.DistanceGrabberSample.op_Inequality
	// OculusSampleFramework.FingerTipPokeTool.op_Equality
	// OculusSampleFramework.FingerTipPokeTool.op_Implicit
	// OculusSampleFramework.FingerTipPokeTool.op_Inequality
	// OculusSampleFramework.FingerTipPokeToolView.op_Equality
	// OculusSampleFramework.FingerTipPokeToolView.op_Implicit
	// OculusSampleFramework.FingerTipPokeToolView.op_Inequality
	// OculusSampleFramework.GrabbableCrosshair.op_Equality
	// OculusSampleFramework.GrabbableCrosshair.op_Implicit
	// OculusSampleFramework.GrabbableCrosshair.op_Inequality
	// OculusSampleFramework.GrabManager.op_Equality
	// OculusSampleFramework.GrabManager.op_Implicit
	// OculusSampleFramework.GrabManager.op_Inequality
	// OculusSampleFramework.HandsManager.op_Equality
	// OculusSampleFramework.HandsManager.op_Implicit
	// OculusSampleFramework.HandsManager.op_Inequality
	// OculusSampleFramework.InteractableRegistry.op_Equality
	// OculusSampleFramework.InteractableRegistry.op_Implicit
	// OculusSampleFramework.InteractableRegistry.op_Inequality
	// OculusSampleFramework.InteractableToolsCreator.op_Equality
	// OculusSampleFramework.InteractableToolsCreator.op_Implicit
	// OculusSampleFramework.InteractableToolsCreator.op_Inequality
	// OculusSampleFramework.InteractableToolsInputRouter.op_Equality
	// OculusSampleFramework.InteractableToolsInputRouter.op_Implicit
	// OculusSampleFramework.InteractableToolsInputRouter.op_Inequality
	// OculusSampleFramework.OVROverlaySample.op_Equality
	// OculusSampleFramework.OVROverlaySample.op_Implicit
	// OculusSampleFramework.OVROverlaySample.op_Inequality
	// OculusSampleFramework.PanelHMDFollower.op_Equality
	// OculusSampleFramework.PanelHMDFollower.op_Implicit
	// OculusSampleFramework.PanelHMDFollower.op_Inequality
	// OculusSampleFramework.PauseOnInputLoss.op_Equality
	// OculusSampleFramework.PauseOnInputLoss.op_Implicit
	// OculusSampleFramework.PauseOnInputLoss.op_Inequality
	// OculusSampleFramework.RayTool.op_Equality
	// OculusSampleFramework.RayTool.op_Implicit
	// OculusSampleFramework.RayTool.op_Inequality
	// OculusSampleFramework.RayToolView.op_Equality
	// OculusSampleFramework.RayToolView.op_Implicit
	// OculusSampleFramework.RayToolView.op_Inequality
	// OculusSampleFramework.SelectionCylinder.op_Equality
	// OculusSampleFramework.SelectionCylinder.op_Implicit
	// OculusSampleFramework.SelectionCylinder.op_Inequality
	// OculusSampleFramework.TrackSegment.op_Equality
	// OculusSampleFramework.TrackSegment.op_Implicit
	// OculusSampleFramework.TrackSegment.op_Inequality
	// OculusSampleFramework.TrainButtonVisualController.op_Equality
	// OculusSampleFramework.TrainButtonVisualController.op_Implicit
	// OculusSampleFramework.TrainButtonVisualController.op_Inequality
	// OculusSampleFramework.TrainCar.op_Equality
	// OculusSampleFramework.TrainCar.op_Implicit
	// OculusSampleFramework.TrainCar.op_Inequality
	// OculusSampleFramework.TrainCrossingController.op_Equality
	// OculusSampleFramework.TrainCrossingController.op_Implicit
	// OculusSampleFramework.TrainCrossingController.op_Inequality
	// OculusSampleFramework.TrainLocomotive.op_Equality
	// OculusSampleFramework.TrainLocomotive.op_Implicit
	// OculusSampleFramework.TrainLocomotive.op_Inequality
	// OculusSampleFramework.TrainTrack.op_Equality
	// OculusSampleFramework.TrainTrack.op_Implicit
	// OculusSampleFramework.TrainTrack.op_Inequality
	// OculusSampleFramework.WindmillBladesController.op_Equality
	// OculusSampleFramework.WindmillBladesController.op_Implicit
	// OculusSampleFramework.WindmillBladesController.op_Inequality
	// OculusSampleFramework.WindmillController.op_Equality
	// OculusSampleFramework.WindmillController.op_Implicit
	// OculusSampleFramework.WindmillController.op_Inequality
	// OculusSpatializerUnity.op_Equality
	// OculusSpatializerUnity.op_Implicit
	// OculusSpatializerUnity.op_Inequality
	// ONSPAmbisonicsNative.op_Equality
	// ONSPAmbisonicsNative.op_Implicit
	// ONSPAmbisonicsNative.op_Inequality
	// ONSPAudioSource.op_Equality
	// ONSPAudioSource.op_Implicit
	// ONSPAudioSource.op_Inequality
	// ONSPProfiler.op_Equality
	// ONSPProfiler.op_Implicit
	// ONSPProfiler.op_Inequality
	// ONSPPropagationGeometry.op_Equality
	// ONSPPropagationGeometry.op_Implicit
	// ONSPPropagationGeometry.op_Inequality
	// ONSPPropagationMaterial.op_Equality
	// ONSPPropagationMaterial.op_Implicit
	// ONSPPropagationMaterial.op_Inequality
	// ONSPPropagationSettings.op_Equality
	// ONSPPropagationSettings.op_Implicit
	// ONSPPropagationSettings.op_Inequality
	// ONSPReflectionZone.op_Equality
	// ONSPReflectionZone.op_Implicit
	// ONSPReflectionZone.op_Inequality
	// ONSPSettings.op_Equality
	// ONSPSettings.op_Implicit
	// ONSPSettings.op_Inequality
	// ONSPVersion.op_Equality
	// ONSPVersion.op_Implicit
	// ONSPVersion.op_Inequality
	// OOBBehavior.op_Equality
	// OOBBehavior.op_Implicit
	// OOBBehavior.op_Inequality
	// OsakaTestBackMenu.op_Equality
	// OsakaTestBackMenu.op_Implicit
	// OsakaTestBackMenu.op_Inequality
	// OutdoorAudioTrigger.op_Equality
	// OutdoorAudioTrigger.op_Implicit
	// OutdoorAudioTrigger.op_Inequality
	// Outline.op_Equality
	// Outline.op_Implicit
	// Outline.op_Inequality
	// OVR.AmbienceEmitter.op_Equality
	// OVR.AmbienceEmitter.op_Implicit
	// OVR.AmbienceEmitter.op_Inequality
	// OVR.AudioManager.op_Equality
	// OVR.AudioManager.op_Implicit
	// OVR.AudioManager.op_Inequality
	// OVR.SoundEmitter.op_Equality
	// OVR.SoundEmitter.op_Implicit
	// OVR.SoundEmitter.op_Inequality
	// OVR.TestScript.op_Equality
	// OVR.TestScript.op_Implicit
	// OVR.TestScript.op_Inequality
	// OVRAudioSourceTest.op_Equality
	// OVRAudioSourceTest.op_Implicit
	// OVRAudioSourceTest.op_Inequality
	// OVRAutoDestroyInMRC.op_Equality
	// OVRAutoDestroyInMRC.op_Implicit
	// OVRAutoDestroyInMRC.op_Inequality
	// OvrAvatar.op_Equality
	// OvrAvatar.op_Implicit
	// OvrAvatar.op_Inequality
	// OvrAvatarBase.op_Equality
	// OvrAvatarBase.op_Implicit
	// OvrAvatarBase.op_Inequality
	// OvrAvatarBody.op_Equality
	// OvrAvatarBody.op_Implicit
	// OvrAvatarBody.op_Inequality
	// OvrAvatarComponent.op_Equality
	// OvrAvatarComponent.op_Implicit
	// OvrAvatarComponent.op_Inequality
	// OvrAvatarHand.op_Equality
	// OvrAvatarHand.op_Implicit
	// OvrAvatarHand.op_Inequality
	// OvrAvatarLocalDriver.op_Equality
	// OvrAvatarLocalDriver.op_Implicit
	// OvrAvatarLocalDriver.op_Inequality
	// OvrAvatarMaterialManager.op_Equality
	// OvrAvatarMaterialManager.op_Implicit
	// OvrAvatarMaterialManager.op_Inequality
	// OvrAvatarRemoteDriver.op_Equality
	// OvrAvatarRemoteDriver.op_Implicit
	// OvrAvatarRemoteDriver.op_Inequality
	// OvrAvatarRenderComponent.op_Equality
	// OvrAvatarRenderComponent.op_Implicit
	// OvrAvatarRenderComponent.op_Inequality
	// OvrAvatarSDKManager.op_Equality
	// OvrAvatarSDKManager.op_Implicit
	// OvrAvatarSDKManager.op_Inequality
	// OvrAvatarSettings.op_Equality
	// OvrAvatarSettings.op_Implicit
	// OvrAvatarSettings.op_Inequality
	// OvrAvatarSettingsEditor.op_Equality
	// OvrAvatarSettingsEditor.op_Implicit
	// OvrAvatarSettingsEditor.op_Inequality
	// OvrAvatarSkinnedMeshPBSV2RenderComponent.op_Equality
	// OvrAvatarSkinnedMeshPBSV2RenderComponent.op_Implicit
	// OvrAvatarSkinnedMeshPBSV2RenderComponent.op_Inequality
	// OvrAvatarSkinnedMeshRenderComponent.op_Equality
	// OvrAvatarSkinnedMeshRenderComponent.op_Implicit
	// OvrAvatarSkinnedMeshRenderComponent.op_Inequality
	// OvrAvatarSkinnedMeshRenderPBSComponent.op_Equality
	// OvrAvatarSkinnedMeshRenderPBSComponent.op_Implicit
	// OvrAvatarSkinnedMeshRenderPBSComponent.op_Inequality
	// OvrAvatarTestDriver.op_Equality
	// OvrAvatarTestDriver.op_Implicit
	// OvrAvatarTestDriver.op_Inequality
	// OvrAvatarTextureCopyManager.op_Equality
	// OvrAvatarTextureCopyManager.op_Implicit
	// OvrAvatarTextureCopyManager.op_Inequality
	// OvrAvatarTouchController.op_Equality
	// OvrAvatarTouchController.op_Implicit
	// OvrAvatarTouchController.op_Inequality
	// OVRBoundary..ctor
	// OVRBoundary.GetGeometry
	// OVRCameraComposition.OVRCameraFrameCompositionManager.op_Equality
	// OVRCameraComposition.OVRCameraFrameCompositionManager.op_Implicit
	// OVRCameraComposition.OVRCameraFrameCompositionManager.op_Inequality
	// OVRCameraRig.op_Equality
	// OVRCameraRig.op_Implicit
	// OVRCameraRig.op_Inequality
	// OVRChromaticAberration.op_Equality
	// OVRChromaticAberration.op_Implicit
	// OVRChromaticAberration.op_Inequality
	// OVRControllerHelper.op_Equality
	// OVRControllerHelper.op_Implicit
	// OVRControllerHelper.op_Inequality
	// OVRControllerTest.op_Equality
	// OVRControllerTest.op_Implicit
	// OVRControllerTest.op_Inequality
	// OVRCubemapCapture.op_Equality
	// OVRCubemapCapture.op_Implicit
	// OVRCubemapCapture.op_Inequality
	// OVRCustomGrabbable.op_Equality
	// OVRCustomGrabbable.op_Implicit
	// OVRCustomGrabbable.op_Inequality
	// OVRCustomGrabber.op_Equality
	// OVRCustomGrabber.op_Implicit
	// OVRCustomGrabber.op_Inequality
	// OVRCustomSkeleton.op_Equality
	// OVRCustomSkeleton.op_Implicit
	// OVRCustomSkeleton.op_Inequality
	// OVRDebugHeadController.op_Equality
	// OVRDebugHeadController.op_Implicit
	// OVRDebugHeadController.op_Inequality
	// OVRDebugInfo.op_Equality
	// OVRDebugInfo.op_Implicit
	// OVRDebugInfo.op_Inequality
	// OVRGazePointer.op_Equality
	// OVRGazePointer.op_Implicit
	// OVRGazePointer.op_Inequality
	// OVRGearVrControllerTest.op_Equality
	// OVRGearVrControllerTest.op_Implicit
	// OVRGearVrControllerTest.op_Inequality
	// OVRGrabbable.op_Equality
	// OVRGrabbable.op_Implicit
	// OVRGrabbable.op_Inequality
	// OVRGrabber.op_Equality
	// OVRGrabber.op_Implicit
	// OVRGrabber.op_Inequality
	// OVRGridCube.op_Equality
	// OVRGridCube.op_Implicit
	// OVRGridCube.op_Inequality
	// OVRHand.op_Equality
	// OVRHand.op_Implicit
	// OVRHand.op_Inequality
	// OVRHandGrabbable.op_Equality
	// OVRHandGrabbable.op_Implicit
	// OVRHandGrabbable.op_Inequality
	// OVRHandTest.op_Equality
	// OVRHandTest.op_Implicit
	// OVRHandTest.op_Inequality
	// OVRHeadsetEmulator.op_Equality
	// OVRHeadsetEmulator.op_Implicit
	// OVRHeadsetEmulator.op_Inequality
	// OVRLipSync.op_Equality
	// OVRLipSync.op_Implicit
	// OVRLipSync.op_Inequality
	// OVRLipSyncContext.op_Equality
	// OVRLipSyncContext.op_Implicit
	// OVRLipSyncContext.op_Inequality
	// OVRLipSyncContextBase.op_Equality
	// OVRLipSyncContextBase.op_Implicit
	// OVRLipSyncContextBase.op_Inequality
	// OVRLipSyncContextCanned.op_Equality
	// OVRLipSyncContextCanned.op_Implicit
	// OVRLipSyncContextCanned.op_Inequality
	// OVRLipSyncContextMorphTarget.op_Equality
	// OVRLipSyncContextMorphTarget.op_Implicit
	// OVRLipSyncContextMorphTarget.op_Inequality
	// OVRLipSyncContextTextureFlip.op_Equality
	// OVRLipSyncContextTextureFlip.op_Implicit
	// OVRLipSyncContextTextureFlip.op_Inequality
	// OVRLipSyncDebugConsole.op_Equality
	// OVRLipSyncDebugConsole.op_Implicit
	// OVRLipSyncDebugConsole.op_Inequality
	// OVRLipSyncMicInput.op_Equality
	// OVRLipSyncMicInput.op_Implicit
	// OVRLipSyncMicInput.op_Inequality
	// OVRLipSyncSequence.op_Equality
	// OVRLipSyncSequence.op_Implicit
	// OVRLipSyncSequence.op_Inequality
	// OVRManager.op_Equality
	// OVRManager.op_Implicit
	// OVRManager.op_Inequality
	// OVRManager.trackingOriginType
	// OVRManager.usePositionTracking
	// OVRMesh.op_Equality
	// OVRMesh.op_Implicit
	// OVRMesh.op_Inequality
	// OVRMeshRenderer.op_Equality
	// OVRMeshRenderer.op_Implicit
	// OVRMeshRenderer.op_Inequality
	// OVRMixedRealityCaptureSettings.op_Equality
	// OVRMixedRealityCaptureSettings.op_Implicit
	// OVRMixedRealityCaptureSettings.op_Inequality
	// OVRMixedRealityCaptureTest.op_Equality
	// OVRMixedRealityCaptureTest.op_Implicit
	// OVRMixedRealityCaptureTest.op_Inequality
	// OVRModeParms.op_Equality
	// OVRModeParms.op_Implicit
	// OVRModeParms.op_Inequality
	// OVRMonoscopic.op_Equality
	// OVRMonoscopic.op_Implicit
	// OVRMonoscopic.op_Inequality
	// OVROverlay.op_Equality
	// OVROverlay.op_Implicit
	// OVROverlay.op_Inequality
	// OVROverlayCanvas.op_Equality
	// OVROverlayCanvas.op_Implicit
	// OVROverlayCanvas.op_Inequality
	// OVROverlayMeshGenerator.op_Equality
	// OVROverlayMeshGenerator.op_Equality
	// OVROverlayMeshGenerator.op_Implicit
	// OVROverlayMeshGenerator.op_Implicit
	// OVROverlayMeshGenerator.op_Inequality
	// OVROverlayMeshGenerator.op_Inequality
	// OVRPlatformMenu.op_Equality
	// OVRPlatformMenu.op_Implicit
	// OVRPlatformMenu.op_Inequality
	// OVRPlayerController.op_Equality
	// OVRPlayerController.op_Implicit
	// OVRPlayerController.op_Inequality
	// OVRPlugin.GetSystemHeadsetType
	// OVRProfile.op_Equality
	// OVRProfile.op_Implicit
	// OVRProfile.op_Inequality
	// OVRProfiler.op_Equality
	// OVRProfiler.op_Implicit
	// OVRProfiler.op_Inequality
	// OVRProgressIndicator.op_Equality
	// OVRProgressIndicator.op_Implicit
	// OVRProgressIndicator.op_Inequality
	// OVRRaycaster.op_Equality
	// OVRRaycaster.op_Implicit
	// OVRRaycaster.op_Inequality
	// OVRResetOrientation.op_Equality
	// OVRResetOrientation.op_Implicit
	// OVRResetOrientation.op_Inequality
	// OVRResources.op_Equality
	// OVRResources.op_Implicit
	// OVRResources.op_Inequality
	// OVRSceneLoader.op_Equality
	// OVRSceneLoader.op_Implicit
	// OVRSceneLoader.op_Inequality
	// OVRSceneSampleController.op_Equality
	// OVRSceneSampleController.op_Implicit
	// OVRSceneSampleController.op_Inequality
	// OVRScreenFade.op_Equality
	// OVRScreenFade.op_Implicit
	// OVRScreenFade.op_Inequality
	// OVRSkeleton.op_Equality
	// OVRSkeleton.op_Implicit
	// OVRSkeleton.op_Inequality
	// OVRSkeletonRenderer.op_Equality
	// OVRSkeletonRenderer.op_Implicit
	// OVRSkeletonRenderer.op_Inequality
	// OVRSystemPerfMetrics.OVRSystemPerfMetricsTcpServer.op_Equality
	// OVRSystemPerfMetrics.OVRSystemPerfMetricsTcpServer.op_Implicit
	// OVRSystemPerfMetrics.OVRSystemPerfMetricsTcpServer.op_Inequality
	// OVRTouchpadHelper.op_Equality
	// OVRTouchpadHelper.op_Implicit
	// OVRTouchpadHelper.op_Inequality
	// OVRTouchSample.Hand.op_Equality
	// OVRTouchSample.Hand.op_Implicit
	// OVRTouchSample.Hand.op_Inequality
	// OVRTouchSample.HandPose.op_Equality
	// OVRTouchSample.HandPose.op_Implicit
	// OVRTouchSample.HandPose.op_Inequality
	// OVRTouchSample.TouchController.op_Equality
	// OVRTouchSample.TouchController.op_Implicit
	// OVRTouchSample.TouchController.op_Inequality
	// OVRVignette.op_Equality
	// OVRVignette.op_Implicit
	// OVRVignette.op_Inequality
	// OVRWaitCursor.op_Equality
	// OVRWaitCursor.op_Implicit
	// OVRWaitCursor.op_Inequality
	// OwnershipManager.op_Equality
	// OwnershipManager.op_Implicit
	// OwnershipManager.op_Inequality
	// ParticleTrigger.op_Equality
	// ParticleTrigger.op_Implicit
	// ParticleTrigger.op_Inequality
	// Platformable.EnableChanges
	// Platformable.OnManipulationEnded
	// Platformable.OnManipulationEndedDestroy
	// Platformable.OnManipulationEndedVoid
	// Platformable.OnManipulationStarted
	// Platformable.op_Equality
	// Platformable.op_Implicit
	// Platformable.op_Inequality
	// Platformable.Undock
	// PlatformableMeshSequence.OnManipulationEnded
	// PlatformableMeshSequence.OnManipulationEndedDestroy
	// PlatformableMeshSequence.OnManipulationEndedVoid
	// PlatformableMeshSequence.OnManipulationStarted
	// PlatformableMeshSequence.op_Equality
	// PlatformableMeshSequence.op_Implicit
	// PlatformableMeshSequence.op_Inequality
	// PlatformDockPosition.op_Equality
	// PlatformDockPosition.op_Implicit
	// PlatformDockPosition.op_Inequality
	// PlatformDockPosition.PlatformedObject
	// PlatformDockPositionTriggerEnter.op_Equality
	// PlatformDockPositionTriggerEnter.op_Implicit
	// PlatformDockPositionTriggerEnter.op_Inequality
	// PlatformDockPositionTriggerExit.op_Equality
	// PlatformDockPositionTriggerExit.op_Implicit
	// PlatformDockPositionTriggerExit.op_Inequality
	// PlatformLocomotion.op_Equality
	// PlatformLocomotion.op_Implicit
	// PlatformLocomotion.op_Inequality
	// PlatformPlaceholder.InstantiatedObject
	// PlatformPlaceholder.op_Equality
	// PlatformPlaceholder.op_Implicit
	// PlatformPlaceholder.op_Inequality
	// PlatformPlaceholder.RotationAngle
	// PlatformPlaceholderMeshSequence.InstantiatedObject
	// PlatformPlaceholderMeshSequence.op_Equality
	// PlatformPlaceholderMeshSequence.op_Implicit
	// PlatformPlaceholderMeshSequence.op_Inequality
	// PlayerController.op_Equality
	// PlayerController.op_Implicit
	// PlayerController.op_Inequality
	// PoseEditHelper.op_Equality
	// PoseEditHelper.op_Implicit
	// PoseEditHelper.op_Inequality
	// PressableEventsForBolt.ButtonPressedForBolt
	// PressableEventsForBolt.ButtonReleasedForBolt
	// PressableEventsForBolt.OnClickForBolt
	// PressableEventsForBolt.op_Equality
	// PressableEventsForBolt.op_Implicit
	// PressableEventsForBolt.op_Inequality
	// PressableEventsForBolt.TouchBeginForBolt
	// PressableEventsForBolt.TouchEndForBolt
	// QuitMenu.op_Equality
	// QuitMenu.op_Implicit
	// QuitMenu.op_Inequality
	// QuoteManager.op_Equality
	// QuoteManager.op_Implicit
	// QuoteManager.op_Inequality
	// RaycastUnplatforming.op_Equality
	// RaycastUnplatforming.op_Implicit
	// RaycastUnplatforming.op_Inequality
	// ReadSliderValue.op_Equality
	// ReadSliderValue.op_Implicit
	// ReadSliderValue.op_Inequality
	// RealtimeHandConfidence.GetConfidence
	// RealtimeHandConfidence.op_Equality
	// RealtimeHandConfidence.op_Implicit
	// RealtimeHandConfidence.op_Inequality
	// RealtimeMeshSequenceController.op_Equality
	// RealtimeMeshSequenceController.op_Implicit
	// RealtimeMeshSequenceController.op_Inequality
	// RemoteLoopbackManager.op_Equality
	// RemoteLoopbackManager.op_Implicit
	// RemoteLoopbackManager.op_Inequality
	// RotateAnim.op_Equality
	// RotateAnim.op_Implicit
	// RotateAnim.op_Inequality
	// RotationHandleBehaviour.Activation
	// RotationHandleBehaviour.Deactivation
	// RotationHandleBehaviour.op_Equality
	// RotationHandleBehaviour.op_Implicit
	// RotationHandleBehaviour.op_Inequality
	// Rotator.op_Equality
	// Rotator.op_Implicit
	// Rotator.op_Inequality
	// RotatorsManager.op_Equality
	// RotatorsManager.op_Implicit
	// RotatorsManager.op_Inequality
	// SampleSpeechToText.op_Equality
	// SampleSpeechToText.op_Implicit
	// SampleSpeechToText.op_Inequality
	// SaveMesh.op_Equality
	// SaveMesh.op_Implicit
	// SaveMesh.op_Inequality
	// SaveMeshInEditor.op_Equality
	// SaveMeshInEditor.op_Implicit
	// SaveMeshInEditor.op_Inequality
	// ScaleHandleBehaviour.Activation
	// ScaleHandleBehaviour.Deactivation
	// ScaleHandleBehaviour.op_Equality
	// ScaleHandleBehaviour.op_Implicit
	// ScaleHandleBehaviour.op_Inequality
	// ScenesManager.LoadLevel
	// ScenesManager.op_Equality
	// ScenesManager.op_Implicit
	// ScenesManager.op_Inequality
	// SceneSwitching.op_Equality
	// SceneSwitching.op_Implicit
	// SceneSwitching.op_Inequality
	// SelectionDockPositionTriggerEnter.op_Equality
	// SelectionDockPositionTriggerEnter.op_Implicit
	// SelectionDockPositionTriggerEnter.op_Inequality
	// SelectionDockPositionTriggerExit.op_Equality
	// SelectionDockPositionTriggerExit.op_Implicit
	// SelectionDockPositionTriggerExit.op_Inequality
	// SelectorDockPosition.op_Equality
	// SelectorDockPosition.op_Implicit
	// SelectorDockPosition.op_Inequality
	// SelectorDockPosition.savedGeometries
	// SelectorDockPosition.VisualizeGeometryByIndex
	// SelectorDockPosition.VisualizeGeometryByName
	// Shapes.AmmoBar.op_Equality
	// Shapes.AmmoBar.op_Implicit
	// Shapes.AmmoBar.op_Inequality
	// Shapes.ChargeBar.op_Equality
	// Shapes.ChargeBar.op_Implicit
	// Shapes.ChargeBar.op_Inequality
	// Shapes.Compass.op_Equality
	// Shapes.Compass.op_Implicit
	// Shapes.Compass.op_Inequality
	// Shapes.Cone.op_Equality
	// Shapes.Cone.op_Implicit
	// Shapes.Cone.op_Inequality
	// Shapes.Crosshair.op_Equality
	// Shapes.Crosshair.op_Implicit
	// Shapes.Crosshair.op_Inequality
	// Shapes.Cuboid.op_Equality
	// Shapes.Cuboid.op_Implicit
	// Shapes.Cuboid.op_Inequality
	// Shapes.Disc.op_Equality
	// Shapes.Disc.op_Implicit
	// Shapes.Disc.op_Inequality
	// Shapes.FpsController.op_Equality
	// Shapes.FpsController.op_Implicit
	// Shapes.FpsController.op_Inequality
	// Shapes.Line.End
	// Shapes.Line.op_Equality
	// Shapes.Line.op_Implicit
	// Shapes.Line.op_Inequality
	// Shapes.Line.Start
	// Shapes.Polygon.op_Equality
	// Shapes.Polygon.op_Implicit
	// Shapes.Polygon.op_Inequality
	// Shapes.Polyline.AddPoint
	// Shapes.Polyline.op_Equality
	// Shapes.Polyline.op_Implicit
	// Shapes.Polyline.op_Inequality
	// Shapes.Polyline.SetPointPosition
	// Shapes.Quad.op_Equality
	// Shapes.Quad.op_Implicit
	// Shapes.Quad.op_Inequality
	// Shapes.Rectangle.op_Equality
	// Shapes.Rectangle.op_Implicit
	// Shapes.Rectangle.op_Inequality
	// Shapes.RegularPolygon.op_Equality
	// Shapes.RegularPolygon.op_Implicit
	// Shapes.RegularPolygon.op_Inequality
	// Shapes.ShapeGroup.op_Equality
	// Shapes.ShapeGroup.op_Implicit
	// Shapes.ShapeGroup.op_Inequality
	// Shapes.ShapesAssets.op_Equality
	// Shapes.ShapesAssets.op_Implicit
	// Shapes.ShapesAssets.op_Inequality
	// Shapes.ShapesTextDrawer.op_Equality
	// Shapes.ShapesTextDrawer.op_Implicit
	// Shapes.ShapesTextDrawer.op_Inequality
	// Shapes.Sphere.op_Equality
	// Shapes.Sphere.op_Implicit
	// Shapes.Sphere.op_Inequality
	// Shapes.Torus.op_Equality
	// Shapes.Torus.op_Implicit
	// Shapes.Torus.op_Inequality
	// Shapes.Triangle.op_Equality
	// Shapes.Triangle.op_Implicit
	// Shapes.Triangle.op_Inequality
	// SimpleCapsuleWithStickMovement.op_Equality
	// SimpleCapsuleWithStickMovement.op_Implicit
	// SimpleCapsuleWithStickMovement.op_Inequality
	// SkyboxManager.op_Equality
	// SkyboxManager.op_Implicit
	// SkyboxManager.op_Inequality
	// SkyboxManagerForOsaka.op_Equality
	// SkyboxManagerForOsaka.op_Implicit
	// SkyboxManagerForOsaka.op_Inequality
	// SliderManager.op_Equality
	// SliderManager.op_Implicit
	// SliderManager.op_Inequality
	// SliderReset.op_Equality
	// SliderReset.op_Implicit
	// SliderReset.op_Inequality
	// SocialPlatformManager.op_Equality
	// SocialPlatformManager.op_Implicit
	// SocialPlatformManager.op_Inequality
	// SpeechButton.op_Equality
	// SpeechButton.op_Implicit
	// SpeechButton.op_Inequality
	// StartMenu.op_Equality
	// StartMenu.op_Implicit
	// StartMenu.op_Inequality
	// string.Concat
	// string.Concat
	// string.Concat
	// string.Concat
	// string.Concat
	// string.Format
	// string.Format
	// string.Length
	// string.op_Equality
	// string.op_Inequality
	// string.Remove
	// string.Replace
	// string.Split
	// string.Substring
	// string.Substring
	// SyncReality.op_Equality
	// SyncReality.op_Implicit
	// SyncReality.op_Inequality
	// SyncSun.op_Equality
	// SyncSun.op_Implicit
	// SyncSun.op_Inequality
	// System.Environment.NewLine
	// TeleportAimHandlerLaser.op_Equality
	// TeleportAimHandlerLaser.op_Implicit
	// TeleportAimHandlerLaser.op_Inequality
	// TeleportAimHandlerParabolic.op_Equality
	// TeleportAimHandlerParabolic.op_Implicit
	// TeleportAimHandlerParabolic.op_Inequality
	// TeleportAimVisualLaser.op_Equality
	// TeleportAimVisualLaser.op_Implicit
	// TeleportAimVisualLaser.op_Inequality
	// TeleportDestination.op_Equality
	// TeleportDestination.op_Implicit
	// TeleportDestination.op_Inequality
	// TeleportImprovements.op_Equality
	// TeleportImprovements.op_Implicit
	// TeleportImprovements.op_Inequality
	// TeleportInputHandlerHMD.op_Equality
	// TeleportInputHandlerHMD.op_Implicit
	// TeleportInputHandlerHMD.op_Inequality
	// TeleportInputHandlerTouch.op_Equality
	// TeleportInputHandlerTouch.op_Implicit
	// TeleportInputHandlerTouch.op_Inequality
	// TeleportOrientationHandler360.op_Equality
	// TeleportOrientationHandler360.op_Implicit
	// TeleportOrientationHandler360.op_Inequality
	// TeleportOrientationHandlerHMD.op_Equality
	// TeleportOrientationHandlerHMD.op_Implicit
	// TeleportOrientationHandlerHMD.op_Inequality
	// TeleportOrientationHandlerThumbstick.op_Equality
	// TeleportOrientationHandlerThumbstick.op_Implicit
	// TeleportOrientationHandlerThumbstick.op_Inequality
	// TeleportPoint.op_Equality
	// TeleportPoint.op_Implicit
	// TeleportPoint.op_Inequality
	// TeleportSync.op_Equality
	// TeleportSync.op_Implicit
	// TeleportSync.op_Inequality
	// TeleportSync.SetTeleportOut
	// TeleportTargetHandlerNavMesh.op_Equality
	// TeleportTargetHandlerNavMesh.op_Implicit
	// TeleportTargetHandlerNavMesh.op_Inequality
	// TeleportTargetHandlerNode.op_Equality
	// TeleportTargetHandlerNode.op_Implicit
	// TeleportTargetHandlerNode.op_Inequality
	// TeleportTargetHandlerPhysical.op_Equality
	// TeleportTargetHandlerPhysical.op_Implicit
	// TeleportTargetHandlerPhysical.op_Inequality
	// TeleportTransitionBlink.op_Equality
	// TeleportTransitionBlink.op_Implicit
	// TeleportTransitionBlink.op_Inequality
	// TeleportTransitionInstant.op_Equality
	// TeleportTransitionInstant.op_Implicit
	// TeleportTransitionInstant.op_Inequality
	// TeleportTransitionWarp.op_Equality
	// TeleportTransitionWarp.op_Implicit
	// TeleportTransitionWarp.op_Inequality
	// testtypewriter.op_Equality
	// testtypewriter.op_Implicit
	// testtypewriter.op_Inequality
	// TextSpeech.SpeechToText.op_Equality
	// TextSpeech.SpeechToText.op_Implicit
	// TextSpeech.SpeechToText.op_Inequality
	// TextSpeech.TextToSpeech.op_Equality
	// TextSpeech.TextToSpeech.op_Implicit
	// TextSpeech.TextToSpeech.op_Inequality
	// TimeMultiplierSlider.op_Equality
	// TimeMultiplierSlider.op_Implicit
	// TimeMultiplierSlider.op_Inequality
	// TMPro.Examples.Benchmark01.op_Equality
	// TMPro.Examples.Benchmark01.op_Implicit
	// TMPro.Examples.Benchmark01.op_Inequality
	// TMPro.Examples.Benchmark01_UGUI.op_Equality
	// TMPro.Examples.Benchmark01_UGUI.op_Implicit
	// TMPro.Examples.Benchmark01_UGUI.op_Inequality
	// TMPro.Examples.Benchmark02.op_Equality
	// TMPro.Examples.Benchmark02.op_Implicit
	// TMPro.Examples.Benchmark02.op_Inequality
	// TMPro.Examples.Benchmark03.op_Equality
	// TMPro.Examples.Benchmark03.op_Implicit
	// TMPro.Examples.Benchmark03.op_Inequality
	// TMPro.Examples.Benchmark04.op_Equality
	// TMPro.Examples.Benchmark04.op_Implicit
	// TMPro.Examples.Benchmark04.op_Inequality
	// TMPro.Examples.CameraController.op_Equality
	// TMPro.Examples.CameraController.op_Implicit
	// TMPro.Examples.CameraController.op_Inequality
	// TMPro.Examples.ObjectSpin.op_Equality
	// TMPro.Examples.ObjectSpin.op_Implicit
	// TMPro.Examples.ObjectSpin.op_Inequality
	// TMPro.Examples.ShaderPropAnimator.op_Equality
	// TMPro.Examples.ShaderPropAnimator.op_Implicit
	// TMPro.Examples.ShaderPropAnimator.op_Inequality
	// TMPro.Examples.SimpleScript.op_Equality
	// TMPro.Examples.SimpleScript.op_Implicit
	// TMPro.Examples.SimpleScript.op_Inequality
	// TMPro.Examples.SkewTextExample.op_Equality
	// TMPro.Examples.SkewTextExample.op_Implicit
	// TMPro.Examples.SkewTextExample.op_Inequality
	// TMPro.Examples.TeleType.op_Equality
	// TMPro.Examples.TeleType.op_Implicit
	// TMPro.Examples.TeleType.op_Inequality
	// TMPro.Examples.TextConsoleSimulator.op_Equality
	// TMPro.Examples.TextConsoleSimulator.op_Implicit
	// TMPro.Examples.TextConsoleSimulator.op_Inequality
	// TMPro.Examples.TextMeshProFloatingText.op_Equality
	// TMPro.Examples.TextMeshProFloatingText.op_Implicit
	// TMPro.Examples.TextMeshProFloatingText.op_Inequality
	// TMPro.Examples.TextMeshSpawner.op_Equality
	// TMPro.Examples.TextMeshSpawner.op_Implicit
	// TMPro.Examples.TextMeshSpawner.op_Inequality
	// TMPro.Examples.TMP_ExampleScript_01.op_Equality
	// TMPro.Examples.TMP_ExampleScript_01.op_Implicit
	// TMPro.Examples.TMP_ExampleScript_01.op_Inequality
	// TMPro.Examples.TMP_FrameRateCounter.op_Equality
	// TMPro.Examples.TMP_FrameRateCounter.op_Implicit
	// TMPro.Examples.TMP_FrameRateCounter.op_Inequality
	// TMPro.Examples.TMP_TextEventCheck.op_Equality
	// TMPro.Examples.TMP_TextEventCheck.op_Implicit
	// TMPro.Examples.TMP_TextEventCheck.op_Inequality
	// TMPro.Examples.TMP_TextInfoDebugTool.op_Equality
	// TMPro.Examples.TMP_TextInfoDebugTool.op_Implicit
	// TMPro.Examples.TMP_TextInfoDebugTool.op_Inequality
	// TMPro.Examples.TMP_TextSelector_A.op_Equality
	// TMPro.Examples.TMP_TextSelector_A.op_Implicit
	// TMPro.Examples.TMP_TextSelector_A.op_Inequality
	// TMPro.Examples.TMP_TextSelector_B.op_Equality
	// TMPro.Examples.TMP_TextSelector_B.op_Implicit
	// TMPro.Examples.TMP_TextSelector_B.op_Inequality
	// TMPro.Examples.TMP_UiFrameRateCounter.op_Equality
	// TMPro.Examples.TMP_UiFrameRateCounter.op_Implicit
	// TMPro.Examples.TMP_UiFrameRateCounter.op_Inequality
	// TMPro.Examples.TMPro_InstructionOverlay.op_Equality
	// TMPro.Examples.TMPro_InstructionOverlay.op_Implicit
	// TMPro.Examples.TMPro_InstructionOverlay.op_Inequality
	// TMPro.Examples.VertexColorCycler.op_Equality
	// TMPro.Examples.VertexColorCycler.op_Implicit
	// TMPro.Examples.VertexColorCycler.op_Inequality
	// TMPro.Examples.VertexJitter.op_Equality
	// TMPro.Examples.VertexJitter.op_Implicit
	// TMPro.Examples.VertexJitter.op_Inequality
	// TMPro.Examples.VertexShakeA.op_Equality
	// TMPro.Examples.VertexShakeA.op_Implicit
	// TMPro.Examples.VertexShakeA.op_Inequality
	// TMPro.Examples.VertexShakeB.op_Equality
	// TMPro.Examples.VertexShakeB.op_Implicit
	// TMPro.Examples.VertexShakeB.op_Inequality
	// TMPro.Examples.VertexZoom.op_Equality
	// TMPro.Examples.VertexZoom.op_Implicit
	// TMPro.Examples.VertexZoom.op_Inequality
	// TMPro.Examples.WarpTextExample.op_Equality
	// TMPro.Examples.WarpTextExample.op_Implicit
	// TMPro.Examples.WarpTextExample.op_Inequality
	// TMPro.TextContainer.op_Equality
	// TMPro.TextContainer.op_Implicit
	// TMPro.TextContainer.op_Inequality
	// TMPro.TextMeshPro.alpha
	// TMPro.TextMeshPro.op_Equality
	// TMPro.TextMeshPro.op_Implicit
	// TMPro.TextMeshPro.op_Inequality
	// TMPro.TextMeshProUGUI.op_Equality
	// TMPro.TextMeshProUGUI.op_Implicit
	// TMPro.TextMeshProUGUI.op_Inequality
	// TMPro.TMP_ColorGradient.op_Equality
	// TMPro.TMP_ColorGradient.op_Implicit
	// TMPro.TMP_ColorGradient.op_Inequality
	// TMPro.TMP_DigitValidator.op_Equality
	// TMPro.TMP_DigitValidator.op_Implicit
	// TMPro.TMP_DigitValidator.op_Inequality
	// TMPro.TMP_Dropdown.op_Equality
	// TMPro.TMP_Dropdown.op_Implicit
	// TMPro.TMP_Dropdown.op_Inequality
	// TMPro.TMP_FontAsset.op_Equality
	// TMPro.TMP_FontAsset.op_Implicit
	// TMPro.TMP_FontAsset.op_Inequality
	// TMPro.TMP_InputField.op_Equality
	// TMPro.TMP_InputField.op_Implicit
	// TMPro.TMP_InputField.op_Inequality
	// TMPro.TMP_PackageResourceImporterWindow.op_Equality
	// TMPro.TMP_PackageResourceImporterWindow.op_Implicit
	// TMPro.TMP_PackageResourceImporterWindow.op_Inequality
	// TMPro.TMP_PhoneNumberValidator.op_Equality
	// TMPro.TMP_PhoneNumberValidator.op_Implicit
	// TMPro.TMP_PhoneNumberValidator.op_Inequality
	// TMPro.TMP_ScrollbarEventHandler.op_Equality
	// TMPro.TMP_ScrollbarEventHandler.op_Implicit
	// TMPro.TMP_ScrollbarEventHandler.op_Inequality
	// TMPro.TMP_SelectionCaret.op_Equality
	// TMPro.TMP_SelectionCaret.op_Implicit
	// TMPro.TMP_SelectionCaret.op_Inequality
	// TMPro.TMP_Settings.op_Equality
	// TMPro.TMP_Settings.op_Implicit
	// TMPro.TMP_Settings.op_Inequality
	// TMPro.TMP_SpriteAnimator.op_Equality
	// TMPro.TMP_SpriteAnimator.op_Implicit
	// TMPro.TMP_SpriteAnimator.op_Inequality
	// TMPro.TMP_SpriteAsset.op_Equality
	// TMPro.TMP_SpriteAsset.op_Implicit
	// TMPro.TMP_SpriteAsset.op_Inequality
	// TMPro.TMP_StyleSheet.op_Equality
	// TMPro.TMP_StyleSheet.op_Implicit
	// TMPro.TMP_StyleSheet.op_Inequality
	// TMPro.TMP_SubMesh.op_Equality
	// TMPro.TMP_SubMesh.op_Implicit
	// TMPro.TMP_SubMesh.op_Inequality
	// TMPro.TMP_SubMeshUI.op_Equality
	// TMPro.TMP_SubMeshUI.op_Implicit
	// TMPro.TMP_SubMeshUI.op_Inequality
	// TMPro.TMP_TextEventHandler.op_Equality
	// TMPro.TMP_TextEventHandler.op_Implicit
	// TMPro.TMP_TextEventHandler.op_Inequality
	// TPEventsListener.op_Equality
	// TPEventsListener.op_Implicit
	// TPEventsListener.op_Inequality
	// TranslateHandleBehaviour.Activation
	// TranslateHandleBehaviour.Deactivation
	// TranslateHandleBehaviour.op_Equality
	// TranslateHandleBehaviour.op_Implicit
	// TranslateHandleBehaviour.op_Inequality
	// TrashBinDockPositionTrigger.op_Equality
	// TrashBinDockPositionTrigger.op_Implicit
	// TrashBinDockPositionTrigger.op_Inequality
	// Triggers.op_Equality
	// Triggers.op_Implicit
	// Triggers.op_Inequality
	// UIManager.op_Equality
	// UIManager.op_Implicit
	// UIManager.op_Inequality
	// UIManagerForUserMenu.op_Equality
	// UIManagerForUserMenu.op_Implicit
	// UIManagerForUserMenu.op_Inequality
	// UIManagerForUserMenuMRTK.op_Equality
	// UIManagerForUserMenuMRTK.op_Implicit
	// UIManagerForUserMenuMRTK.op_Inequality
	// UIManagerForUserMenuMRTKLoadingScene.op_Equality
	// UIManagerForUserMenuMRTKLoadingScene.op_Implicit
	// UIManagerForUserMenuMRTKLoadingScene.op_Inequality
	// UIManagerForUserMenuMRTKWithoutButtons.FreezeGeometry
	// UIManagerForUserMenuMRTKWithoutButtons.Instance
	// UIManagerForUserMenuMRTKWithoutButtons.op_Equality
	// UIManagerForUserMenuMRTKWithoutButtons.op_Implicit
	// UIManagerForUserMenuMRTKWithoutButtons.op_Inequality
	// UIManagerForUserMenuMRTKWithoutButtonsOsaka.op_Equality
	// UIManagerForUserMenuMRTKWithoutButtonsOsaka.op_Implicit
	// UIManagerForUserMenuMRTKWithoutButtonsOsaka.op_Inequality
	// UnityEngine.AI.NavMeshAgent.op_Equality
	// UnityEngine.AI.NavMeshAgent.op_Implicit
	// UnityEngine.AI.NavMeshAgent.op_Inequality
	// UnityEngine.AI.NavMeshData.op_Equality
	// UnityEngine.AI.NavMeshData.op_Implicit
	// UnityEngine.AI.NavMeshData.op_Inequality
	// UnityEngine.AI.NavMeshObstacle.op_Equality
	// UnityEngine.AI.NavMeshObstacle.op_Implicit
	// UnityEngine.AI.NavMeshObstacle.op_Inequality
	// UnityEngine.AI.OffMeshLink.op_Equality
	// UnityEngine.AI.OffMeshLink.op_Implicit
	// UnityEngine.AI.OffMeshLink.op_Inequality
	// UnityEngine.AnchoredJoint2D.op_Equality
	// UnityEngine.AnchoredJoint2D.op_Implicit
	// UnityEngine.AnchoredJoint2D.op_Inequality
	// UnityEngine.Animation.op_Equality
	// UnityEngine.Animation.op_Implicit
	// UnityEngine.Animation.op_Inequality
	// UnityEngine.AnimationClip.op_Equality
	// UnityEngine.AnimationClip.op_Implicit
	// UnityEngine.AnimationClip.op_Inequality
	// UnityEngine.Animations.AimConstraint.aimVector
	// UnityEngine.Animations.AimConstraint.constraintActive
	// UnityEngine.Animations.AimConstraint.op_Equality
	// UnityEngine.Animations.AimConstraint.op_Implicit
	// UnityEngine.Animations.AimConstraint.op_Inequality
	// UnityEngine.Animations.AimConstraint.SetSource
	// UnityEngine.Animations.ConstraintSource.sourceTransform
	// UnityEngine.Animations.ConstraintSource.weight
	// UnityEngine.Animations.LookAtConstraint.constraintActive
	// UnityEngine.Animations.LookAtConstraint.op_Equality
	// UnityEngine.Animations.LookAtConstraint.op_Implicit
	// UnityEngine.Animations.LookAtConstraint.op_Inequality
	// UnityEngine.Animations.LookAtConstraint.SetSource
	// UnityEngine.Animations.ParentConstraint.constraintActive
	// UnityEngine.Animations.ParentConstraint.locked
	// UnityEngine.Animations.ParentConstraint.op_Equality
	// UnityEngine.Animations.ParentConstraint.op_Implicit
	// UnityEngine.Animations.ParentConstraint.op_Inequality
	// UnityEngine.Animations.ParentConstraint.SetSource
	// UnityEngine.Animations.PositionConstraint.constraintActive
	// UnityEngine.Animations.PositionConstraint.locked
	// UnityEngine.Animations.PositionConstraint.op_Equality
	// UnityEngine.Animations.PositionConstraint.op_Implicit
	// UnityEngine.Animations.PositionConstraint.op_Inequality
	// UnityEngine.Animations.PositionConstraint.SetSource
	// UnityEngine.Animations.Rigging.BlendConstraint.op_Equality
	// UnityEngine.Animations.Rigging.BlendConstraint.op_Implicit
	// UnityEngine.Animations.Rigging.BlendConstraint.op_Inequality
	// UnityEngine.Animations.Rigging.BoneRenderer.op_Equality
	// UnityEngine.Animations.Rigging.BoneRenderer.op_Implicit
	// UnityEngine.Animations.Rigging.BoneRenderer.op_Inequality
	// UnityEngine.Animations.Rigging.ChainIKConstraint.op_Equality
	// UnityEngine.Animations.Rigging.ChainIKConstraint.op_Implicit
	// UnityEngine.Animations.Rigging.ChainIKConstraint.op_Inequality
	// UnityEngine.Animations.Rigging.DampedTransform.op_Equality
	// UnityEngine.Animations.Rigging.DampedTransform.op_Implicit
	// UnityEngine.Animations.Rigging.DampedTransform.op_Inequality
	// UnityEngine.Animations.Rigging.MultiAimConstraint.op_Equality
	// UnityEngine.Animations.Rigging.MultiAimConstraint.op_Implicit
	// UnityEngine.Animations.Rigging.MultiAimConstraint.op_Inequality
	// UnityEngine.Animations.Rigging.MultiParentConstraint.op_Equality
	// UnityEngine.Animations.Rigging.MultiParentConstraint.op_Implicit
	// UnityEngine.Animations.Rigging.MultiParentConstraint.op_Inequality
	// UnityEngine.Animations.Rigging.MultiPositionConstraint.op_Equality
	// UnityEngine.Animations.Rigging.MultiPositionConstraint.op_Implicit
	// UnityEngine.Animations.Rigging.MultiPositionConstraint.op_Inequality
	// UnityEngine.Animations.Rigging.MultiReferentialConstraint.op_Equality
	// UnityEngine.Animations.Rigging.MultiReferentialConstraint.op_Implicit
	// UnityEngine.Animations.Rigging.MultiReferentialConstraint.op_Inequality
	// UnityEngine.Animations.Rigging.MultiRotationConstraint.op_Equality
	// UnityEngine.Animations.Rigging.MultiRotationConstraint.op_Implicit
	// UnityEngine.Animations.Rigging.MultiRotationConstraint.op_Inequality
	// UnityEngine.Animations.Rigging.OverrideTransform.op_Equality
	// UnityEngine.Animations.Rigging.OverrideTransform.op_Implicit
	// UnityEngine.Animations.Rigging.OverrideTransform.op_Inequality
	// UnityEngine.Animations.Rigging.Rig.op_Equality
	// UnityEngine.Animations.Rigging.Rig.op_Implicit
	// UnityEngine.Animations.Rigging.Rig.op_Inequality
	// UnityEngine.Animations.Rigging.RigBuilder.op_Equality
	// UnityEngine.Animations.Rigging.RigBuilder.op_Implicit
	// UnityEngine.Animations.Rigging.RigBuilder.op_Inequality
	// UnityEngine.Animations.Rigging.RigTransform.op_Equality
	// UnityEngine.Animations.Rigging.RigTransform.op_Implicit
	// UnityEngine.Animations.Rigging.RigTransform.op_Inequality
	// UnityEngine.Animations.Rigging.TwistChainConstraint.op_Equality
	// UnityEngine.Animations.Rigging.TwistChainConstraint.op_Implicit
	// UnityEngine.Animations.Rigging.TwistChainConstraint.op_Inequality
	// UnityEngine.Animations.Rigging.TwistCorrection.op_Equality
	// UnityEngine.Animations.Rigging.TwistCorrection.op_Implicit
	// UnityEngine.Animations.Rigging.TwistCorrection.op_Inequality
	// UnityEngine.Animations.Rigging.TwoBoneIKConstraint.op_Equality
	// UnityEngine.Animations.Rigging.TwoBoneIKConstraint.op_Implicit
	// UnityEngine.Animations.Rigging.TwoBoneIKConstraint.op_Inequality
	// UnityEngine.Animations.RotationConstraint.op_Equality
	// UnityEngine.Animations.RotationConstraint.op_Implicit
	// UnityEngine.Animations.RotationConstraint.op_Inequality
	// UnityEngine.Animations.ScaleConstraint.op_Equality
	// UnityEngine.Animations.ScaleConstraint.op_Implicit
	// UnityEngine.Animations.ScaleConstraint.op_Inequality
	// UnityEngine.Animator.GetCurrentAnimatorStateInfo
	// UnityEngine.Animator.op_Equality
	// UnityEngine.Animator.op_Implicit
	// UnityEngine.Animator.op_Inequality
	// UnityEngine.Animator.Play
	// UnityEngine.Animator.SetBool
	// UnityEngine.Animator.SetTrigger
	// UnityEngine.Animator.speed
	// UnityEngine.AnimatorOverrideController.op_Equality
	// UnityEngine.AnimatorOverrideController.op_Implicit
	// UnityEngine.AnimatorOverrideController.op_Inequality
	// UnityEngine.AnimatorStateInfo.speed
	// UnityEngine.AreaEffector2D.op_Equality
	// UnityEngine.AreaEffector2D.op_Implicit
	// UnityEngine.AreaEffector2D.op_Inequality
	// UnityEngine.ArticulationBody.op_Equality
	// UnityEngine.ArticulationBody.op_Implicit
	// UnityEngine.ArticulationBody.op_Inequality
	// UnityEngine.AssetBundle.op_Equality
	// UnityEngine.AssetBundle.op_Implicit
	// UnityEngine.AssetBundle.op_Inequality
	// UnityEngine.AssetBundleManifest.op_Equality
	// UnityEngine.AssetBundleManifest.op_Implicit
	// UnityEngine.AssetBundleManifest.op_Inequality
	// UnityEngine.Audio.AudioMixer.op_Equality
	// UnityEngine.Audio.AudioMixer.op_Implicit
	// UnityEngine.Audio.AudioMixer.op_Inequality
	// UnityEngine.Audio.AudioMixerGroup.op_Equality
	// UnityEngine.Audio.AudioMixerGroup.op_Implicit
	// UnityEngine.Audio.AudioMixerGroup.op_Inequality
	// UnityEngine.Audio.AudioMixerSnapshot.op_Equality
	// UnityEngine.Audio.AudioMixerSnapshot.op_Implicit
	// UnityEngine.Audio.AudioMixerSnapshot.op_Inequality
	// UnityEngine.Audio.AudioMixerSnapshot.TransitionTo
	// UnityEngine.AudioBehaviour.op_Equality
	// UnityEngine.AudioBehaviour.op_Implicit
	// UnityEngine.AudioBehaviour.op_Inequality
	// UnityEngine.AudioChorusFilter.op_Equality
	// UnityEngine.AudioChorusFilter.op_Implicit
	// UnityEngine.AudioChorusFilter.op_Inequality
	// UnityEngine.AudioClip.op_Equality
	// UnityEngine.AudioClip.op_Implicit
	// UnityEngine.AudioClip.op_Inequality
	// UnityEngine.AudioDistortionFilter.op_Equality
	// UnityEngine.AudioDistortionFilter.op_Implicit
	// UnityEngine.AudioDistortionFilter.op_Inequality
	// UnityEngine.AudioEchoFilter.op_Equality
	// UnityEngine.AudioEchoFilter.op_Implicit
	// UnityEngine.AudioEchoFilter.op_Inequality
	// UnityEngine.AudioHighPassFilter.op_Equality
	// UnityEngine.AudioHighPassFilter.op_Implicit
	// UnityEngine.AudioHighPassFilter.op_Inequality
	// UnityEngine.AudioListener.op_Equality
	// UnityEngine.AudioListener.op_Implicit
	// UnityEngine.AudioListener.op_Inequality
	// UnityEngine.AudioLowPassFilter.op_Equality
	// UnityEngine.AudioLowPassFilter.op_Implicit
	// UnityEngine.AudioLowPassFilter.op_Inequality
	// UnityEngine.AudioReverbFilter.op_Equality
	// UnityEngine.AudioReverbFilter.op_Implicit
	// UnityEngine.AudioReverbFilter.op_Inequality
	// UnityEngine.AudioReverbZone.op_Equality
	// UnityEngine.AudioReverbZone.op_Implicit
	// UnityEngine.AudioReverbZone.op_Inequality
	// UnityEngine.AudioSource.enabled
	// UnityEngine.AudioSource.op_Equality
	// UnityEngine.AudioSource.op_Implicit
	// UnityEngine.AudioSource.op_Inequality
	// UnityEngine.AudioSource.Play
	// UnityEngine.AudioSource.PlayOneShot
	// UnityEngine.AudioSource.volume
	// UnityEngine.Avatar.op_Equality
	// UnityEngine.Avatar.op_Implicit
	// UnityEngine.Avatar.op_Inequality
	// UnityEngine.AvatarMask.op_Equality
	// UnityEngine.AvatarMask.op_Implicit
	// UnityEngine.AvatarMask.op_Inequality
	// UnityEngine.Behaviour.op_Equality
	// UnityEngine.Behaviour.op_Implicit
	// UnityEngine.Behaviour.op_Inequality
	// UnityEngine.BillboardAsset.op_Equality
	// UnityEngine.BillboardAsset.op_Implicit
	// UnityEngine.BillboardAsset.op_Inequality
	// UnityEngine.BillboardRenderer.op_Equality
	// UnityEngine.BillboardRenderer.op_Implicit
	// UnityEngine.BillboardRenderer.op_Inequality
	// UnityEngine.Bounds.Contains
	// UnityEngine.Bounds.op_Equality
	// UnityEngine.Bounds.op_Inequality
	// UnityEngine.BoxCollider.center
	// UnityEngine.BoxCollider.enabled
	// UnityEngine.BoxCollider.op_Equality
	// UnityEngine.BoxCollider.op_Implicit
	// UnityEngine.BoxCollider.op_Inequality
	// UnityEngine.BoxCollider.size
	// UnityEngine.BoxCollider2D.op_Equality
	// UnityEngine.BoxCollider2D.op_Implicit
	// UnityEngine.BoxCollider2D.op_Inequality
	// UnityEngine.BuoyancyEffector2D.op_Equality
	// UnityEngine.BuoyancyEffector2D.op_Implicit
	// UnityEngine.BuoyancyEffector2D.op_Inequality
	// UnityEngine.Camera.backgroundColor
	// UnityEngine.Camera.clearFlags
	// UnityEngine.Camera.cullingMask
	// UnityEngine.Camera.op_Equality
	// UnityEngine.Camera.op_Implicit
	// UnityEngine.Camera.op_Inequality
	// UnityEngine.Canvas.op_Equality
	// UnityEngine.Canvas.op_Implicit
	// UnityEngine.Canvas.op_Inequality
	// UnityEngine.CanvasGroup.op_Equality
	// UnityEngine.CanvasGroup.op_Implicit
	// UnityEngine.CanvasGroup.op_Inequality
	// UnityEngine.CanvasRenderer.op_Equality
	// UnityEngine.CanvasRenderer.op_Implicit
	// UnityEngine.CanvasRenderer.op_Inequality
	// UnityEngine.CapsuleCollider.enabled
	// UnityEngine.CapsuleCollider.op_Equality
	// UnityEngine.CapsuleCollider.op_Implicit
	// UnityEngine.CapsuleCollider.op_Inequality
	// UnityEngine.CapsuleCollider2D.op_Equality
	// UnityEngine.CapsuleCollider2D.op_Implicit
	// UnityEngine.CapsuleCollider2D.op_Inequality
	// UnityEngine.CharacterController.op_Equality
	// UnityEngine.CharacterController.op_Implicit
	// UnityEngine.CharacterController.op_Inequality
	// UnityEngine.CharacterJoint.op_Equality
	// UnityEngine.CharacterJoint.op_Implicit
	// UnityEngine.CharacterJoint.op_Inequality
	// UnityEngine.CircleCollider2D.op_Equality
	// UnityEngine.CircleCollider2D.op_Implicit
	// UnityEngine.CircleCollider2D.op_Inequality
	// UnityEngine.Cloth.op_Equality
	// UnityEngine.Cloth.op_Implicit
	// UnityEngine.Cloth.op_Inequality
	// UnityEngine.Collider.CompareTag
	// UnityEngine.Collider.op_Equality
	// UnityEngine.Collider.op_Implicit
	// UnityEngine.Collider.op_Inequality
	// UnityEngine.Collider2D.op_Equality
	// UnityEngine.Collider2D.op_Implicit
	// UnityEngine.Collider2D.op_Inequality
	// UnityEngine.Color.Lerp
	// UnityEngine.Color.op_Addition
	// UnityEngine.Color.op_Division
	// UnityEngine.Color.op_Equality
	// UnityEngine.Color.op_Implicit
	// UnityEngine.Color.op_Implicit
	// UnityEngine.Color.op_Inequality
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Subtraction
	// UnityEngine.Component.CompareTag
	// UnityEngine.Component.Destroy
	// UnityEngine.Component.gameObject
	// UnityEngine.Component.GetComponent
	// UnityEngine.Component.Instantiate
	// UnityEngine.Component.name
	// UnityEngine.Component.op_Equality
	// UnityEngine.Component.op_Implicit
	// UnityEngine.Component.op_Inequality
	// UnityEngine.Component.tag
	// UnityEngine.CompositeCollider2D.op_Equality
	// UnityEngine.CompositeCollider2D.op_Implicit
	// UnityEngine.CompositeCollider2D.op_Inequality
	// UnityEngine.ComputeShader.op_Equality
	// UnityEngine.ComputeShader.op_Implicit
	// UnityEngine.ComputeShader.op_Inequality
	// UnityEngine.ConfigurableJoint.op_Equality
	// UnityEngine.ConfigurableJoint.op_Implicit
	// UnityEngine.ConfigurableJoint.op_Inequality
	// UnityEngine.ConstantForce.op_Equality
	// UnityEngine.ConstantForce.op_Implicit
	// UnityEngine.ConstantForce.op_Inequality
	// UnityEngine.ConstantForce2D.op_Equality
	// UnityEngine.ConstantForce2D.op_Implicit
	// UnityEngine.ConstantForce2D.op_Inequality
	// UnityEngine.ContactPoint.normal
	// UnityEngine.Cubemap.op_Equality
	// UnityEngine.Cubemap.op_Implicit
	// UnityEngine.Cubemap.op_Inequality
	// UnityEngine.CubemapArray.op_Equality
	// UnityEngine.CubemapArray.op_Implicit
	// UnityEngine.CubemapArray.op_Inequality
	// UnityEngine.CustomRenderTexture.op_Equality
	// UnityEngine.CustomRenderTexture.op_Implicit
	// UnityEngine.CustomRenderTexture.op_Inequality
	// UnityEngine.Debug.Log
	// UnityEngine.DistanceJoint2D.op_Equality
	// UnityEngine.DistanceJoint2D.op_Implicit
	// UnityEngine.DistanceJoint2D.op_Inequality
	// UnityEngine.EdgeCollider2D.op_Equality
	// UnityEngine.EdgeCollider2D.op_Implicit
	// UnityEngine.EdgeCollider2D.op_Inequality
	// UnityEngine.Effector2D.op_Equality
	// UnityEngine.Effector2D.op_Implicit
	// UnityEngine.Effector2D.op_Inequality
	// UnityEngine.EventSystems.BaseInput.op_Equality
	// UnityEngine.EventSystems.BaseInput.op_Implicit
	// UnityEngine.EventSystems.BaseInput.op_Inequality
	// UnityEngine.EventSystems.EventSystem.op_Equality
	// UnityEngine.EventSystems.EventSystem.op_Implicit
	// UnityEngine.EventSystems.EventSystem.op_Inequality
	// UnityEngine.EventSystems.EventTrigger.op_Equality
	// UnityEngine.EventSystems.EventTrigger.op_Implicit
	// UnityEngine.EventSystems.EventTrigger.op_Inequality
	// UnityEngine.EventSystems.OVRInputModule.op_Equality
	// UnityEngine.EventSystems.OVRInputModule.op_Implicit
	// UnityEngine.EventSystems.OVRInputModule.op_Inequality
	// UnityEngine.EventSystems.OVRPhysicsRaycaster.op_Equality
	// UnityEngine.EventSystems.OVRPhysicsRaycaster.op_Implicit
	// UnityEngine.EventSystems.OVRPhysicsRaycaster.op_Inequality
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Equality
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Implicit
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Inequality
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Equality
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Implicit
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Inequality
	// UnityEngine.EventSystems.StandaloneInputModule.op_Equality
	// UnityEngine.EventSystems.StandaloneInputModule.op_Implicit
	// UnityEngine.EventSystems.StandaloneInputModule.op_Inequality
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Equality
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Implicit
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Inequality
	// UnityEngine.FixedJoint.op_Equality
	// UnityEngine.FixedJoint.op_Implicit
	// UnityEngine.FixedJoint.op_Inequality
	// UnityEngine.FixedJoint2D.op_Equality
	// UnityEngine.FixedJoint2D.op_Implicit
	// UnityEngine.FixedJoint2D.op_Inequality
	// UnityEngine.Flare.op_Equality
	// UnityEngine.Flare.op_Implicit
	// UnityEngine.Flare.op_Inequality
	// UnityEngine.FlareLayer.op_Equality
	// UnityEngine.FlareLayer.op_Implicit
	// UnityEngine.FlareLayer.op_Inequality
	// UnityEngine.Font.op_Equality
	// UnityEngine.Font.op_Implicit
	// UnityEngine.Font.op_Inequality
	// UnityEngine.FrictionJoint2D.op_Equality
	// UnityEngine.FrictionJoint2D.op_Implicit
	// UnityEngine.FrictionJoint2D.op_Inequality
	// UnityEngine.GameObject..ctor
	// UnityEngine.GameObject..ctor
	// UnityEngine.GameObject.activeSelf
	// UnityEngine.GameObject.AddComponent
	// UnityEngine.GameObject.CompareTag
	// UnityEngine.GameObject.Destroy
	// UnityEngine.GameObject.Find
	// UnityEngine.GameObject.Instantiate
	// UnityEngine.GameObject.Instantiate
	// UnityEngine.GameObject.Instantiate
	// UnityEngine.GameObject.Instantiate
	// UnityEngine.GameObject.name
	// UnityEngine.GameObject.op_Equality
	// UnityEngine.GameObject.op_Implicit
	// UnityEngine.GameObject.op_Inequality
	// UnityEngine.GameObject.SetActive
	// UnityEngine.GameObject.transform
	// UnityEngine.GUISkin.op_Equality
	// UnityEngine.GUISkin.op_Implicit
	// UnityEngine.GUISkin.op_Inequality
	// UnityEngine.HingeJoint.op_Equality
	// UnityEngine.HingeJoint.op_Implicit
	// UnityEngine.HingeJoint.op_Inequality
	// UnityEngine.HingeJoint2D.op_Equality
	// UnityEngine.HingeJoint2D.op_Implicit
	// UnityEngine.HingeJoint2D.op_Inequality
	// UnityEngine.Joint.op_Equality
	// UnityEngine.Joint.op_Implicit
	// UnityEngine.Joint.op_Inequality
	// UnityEngine.Joint2D.op_Equality
	// UnityEngine.Joint2D.op_Implicit
	// UnityEngine.Joint2D.op_Inequality
	// UnityEngine.LayerMask.op_Implicit
	// UnityEngine.LayerMask.op_Implicit
	// UnityEngine.LensFlare.op_Equality
	// UnityEngine.LensFlare.op_Implicit
	// UnityEngine.LensFlare.op_Inequality
	// UnityEngine.Light.op_Equality
	// UnityEngine.Light.op_Implicit
	// UnityEngine.Light.op_Inequality
	// UnityEngine.LightingSettings.op_Equality
	// UnityEngine.LightingSettings.op_Implicit
	// UnityEngine.LightingSettings.op_Inequality
	// UnityEngine.LightmapSettings.op_Equality
	// UnityEngine.LightmapSettings.op_Implicit
	// UnityEngine.LightmapSettings.op_Inequality
	// UnityEngine.LightProbeGroup.op_Equality
	// UnityEngine.LightProbeGroup.op_Implicit
	// UnityEngine.LightProbeGroup.op_Inequality
	// UnityEngine.LightProbeProxyVolume.op_Equality
	// UnityEngine.LightProbeProxyVolume.op_Implicit
	// UnityEngine.LightProbeProxyVolume.op_Inequality
	// UnityEngine.LightProbes.op_Equality
	// UnityEngine.LightProbes.op_Implicit
	// UnityEngine.LightProbes.op_Inequality
	// UnityEngine.LineRenderer.op_Equality
	// UnityEngine.LineRenderer.op_Implicit
	// UnityEngine.LineRenderer.op_Inequality
	// UnityEngine.LODGroup.op_Equality
	// UnityEngine.LODGroup.op_Implicit
	// UnityEngine.LODGroup.op_Inequality
	// UnityEngine.Material..ctor
	// UnityEngine.Material.color
	// UnityEngine.Material.mainTextureOffset
	// UnityEngine.Material.op_Equality
	// UnityEngine.Material.op_Implicit
	// UnityEngine.Material.op_Inequality
	// UnityEngine.Material.SetColor
	// UnityEngine.MaterialPropertyBlock..ctor
	// UnityEngine.MaterialPropertyBlock.SetColor
	// UnityEngine.Mathf.Clamp
	// UnityEngine.Mathf.Pow
	// UnityEngine.Matrix4x4.op_Equality
	// UnityEngine.Matrix4x4.op_Inequality
	// UnityEngine.Matrix4x4.op_Multiply
	// UnityEngine.Matrix4x4.op_Multiply
	// UnityEngine.Mesh.op_Equality
	// UnityEngine.Mesh.op_Implicit
	// UnityEngine.Mesh.op_Inequality
	// UnityEngine.MeshCollider.enabled
	// UnityEngine.MeshCollider.op_Equality
	// UnityEngine.MeshCollider.op_Implicit
	// UnityEngine.MeshCollider.op_Inequality
	// UnityEngine.MeshFilter.op_Equality
	// UnityEngine.MeshFilter.op_Implicit
	// UnityEngine.MeshFilter.op_Inequality
	// UnityEngine.MeshRenderer.enabled
	// UnityEngine.MeshRenderer.material
	// UnityEngine.MeshRenderer.materials
	// UnityEngine.MeshRenderer.op_Equality
	// UnityEngine.MeshRenderer.op_Implicit
	// UnityEngine.MeshRenderer.op_Inequality
	// UnityEngine.MeshRenderer.SetPropertyBlock
	// UnityEngine.MonoBehaviour.op_Equality
	// UnityEngine.MonoBehaviour.op_Implicit
	// UnityEngine.MonoBehaviour.op_Inequality
	// UnityEngine.Motion.op_Equality
	// UnityEngine.Motion.op_Implicit
	// UnityEngine.Motion.op_Inequality
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Equality
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Implicit
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Inequality
	// UnityEngine.Object..ctor
	// UnityEngine.Object.name
	// UnityEngine.Object.op_Equality
	// UnityEngine.Object.op_Implicit
	// UnityEngine.Object.op_Inequality
	// UnityEngine.OcclusionArea.op_Equality
	// UnityEngine.OcclusionArea.op_Implicit
	// UnityEngine.OcclusionArea.op_Inequality
	// UnityEngine.OcclusionPortal.op_Equality
	// UnityEngine.OcclusionPortal.op_Implicit
	// UnityEngine.OcclusionPortal.op_Inequality
	// UnityEngine.ParticleSystem.isPlaying
	// UnityEngine.ParticleSystem.op_Equality
	// UnityEngine.ParticleSystem.op_Implicit
	// UnityEngine.ParticleSystem.op_Inequality
	// UnityEngine.ParticleSystem.Play
	// UnityEngine.ParticleSystem.Stop
	// UnityEngine.ParticleSystemForceField.op_Equality
	// UnityEngine.ParticleSystemForceField.op_Implicit
	// UnityEngine.ParticleSystemForceField.op_Inequality
	// UnityEngine.ParticleSystemRenderer.op_Equality
	// UnityEngine.ParticleSystemRenderer.op_Implicit
	// UnityEngine.ParticleSystemRenderer.op_Inequality
	// UnityEngine.PhysicMaterial.op_Equality
	// UnityEngine.PhysicMaterial.op_Implicit
	// UnityEngine.PhysicMaterial.op_Inequality
	// UnityEngine.PhysicsMaterial2D.op_Equality
	// UnityEngine.PhysicsMaterial2D.op_Implicit
	// UnityEngine.PhysicsMaterial2D.op_Inequality
	// UnityEngine.PhysicsUpdateBehaviour2D.op_Equality
	// UnityEngine.PhysicsUpdateBehaviour2D.op_Implicit
	// UnityEngine.PhysicsUpdateBehaviour2D.op_Inequality
	// UnityEngine.PlatformEffector2D.op_Equality
	// UnityEngine.PlatformEffector2D.op_Implicit
	// UnityEngine.PlatformEffector2D.op_Inequality
	// UnityEngine.Playables.PlayableDirector.op_Equality
	// UnityEngine.Playables.PlayableDirector.op_Implicit
	// UnityEngine.Playables.PlayableDirector.op_Inequality
	// UnityEngine.PointEffector2D.op_Equality
	// UnityEngine.PointEffector2D.op_Implicit
	// UnityEngine.PointEffector2D.op_Inequality
	// UnityEngine.PolygonCollider2D.op_Equality
	// UnityEngine.PolygonCollider2D.op_Implicit
	// UnityEngine.PolygonCollider2D.op_Inequality
	// UnityEngine.Projector.op_Equality
	// UnityEngine.Projector.op_Implicit
	// UnityEngine.Projector.op_Inequality
	// UnityEngine.QualitySettings.antiAliasing
	// UnityEngine.QualitySettings.op_Equality
	// UnityEngine.QualitySettings.op_Implicit
	// UnityEngine.QualitySettings.op_Inequality
	// UnityEngine.QualitySettings.shadowDistance
	// UnityEngine.Quaternion.Angle
	// UnityEngine.Quaternion.AngleAxis
	// UnityEngine.Quaternion.Euler
	// UnityEngine.Quaternion.Euler
	// UnityEngine.Quaternion.eulerAngles
	// UnityEngine.Quaternion.FromToRotation
	// UnityEngine.Quaternion.identity
	// UnityEngine.Quaternion.Inverse
	// UnityEngine.Quaternion.Lerp
	// UnityEngine.Quaternion.op_Equality
	// UnityEngine.Quaternion.op_Inequality
	// UnityEngine.Quaternion.op_Multiply
	// UnityEngine.Quaternion.op_Multiply
	// UnityEngine.Random.Range
	// UnityEngine.Random.Range
	// UnityEngine.RaycastHit2D.op_Implicit
	// UnityEngine.Rect.op_Equality
	// UnityEngine.Rect.op_Inequality
	// UnityEngine.RectTransform.localPosition
	// UnityEngine.RectTransform.op_Equality
	// UnityEngine.RectTransform.op_Implicit
	// UnityEngine.RectTransform.op_Inequality
	// UnityEngine.ReflectionProbe.op_Equality
	// UnityEngine.ReflectionProbe.op_Implicit
	// UnityEngine.ReflectionProbe.op_Inequality
	// UnityEngine.RelativeJoint2D.op_Equality
	// UnityEngine.RelativeJoint2D.op_Implicit
	// UnityEngine.RelativeJoint2D.op_Inequality
	// UnityEngine.Renderer.enabled
	// UnityEngine.Renderer.op_Equality
	// UnityEngine.Renderer.op_Implicit
	// UnityEngine.Renderer.op_Inequality
	// UnityEngine.Rendering.GraphicsSettings.op_Equality
	// UnityEngine.Rendering.GraphicsSettings.op_Implicit
	// UnityEngine.Rendering.GraphicsSettings.op_Inequality
	// UnityEngine.Rendering.SortingGroup.op_Equality
	// UnityEngine.Rendering.SortingGroup.op_Implicit
	// UnityEngine.Rendering.SortingGroup.op_Inequality
	// UnityEngine.RenderSettings.op_Equality
	// UnityEngine.RenderSettings.op_Implicit
	// UnityEngine.RenderSettings.op_Inequality
	// UnityEngine.RenderTexture.op_Equality
	// UnityEngine.RenderTexture.op_Implicit
	// UnityEngine.RenderTexture.op_Inequality
	// UnityEngine.Rigidbody.centerOfMass
	// UnityEngine.Rigidbody.constraints
	// UnityEngine.Rigidbody.freezeRotation
	// UnityEngine.Rigidbody.isKinematic
	// UnityEngine.Rigidbody.MovePosition
	// UnityEngine.Rigidbody.op_Equality
	// UnityEngine.Rigidbody.op_Implicit
	// UnityEngine.Rigidbody.op_Inequality
	// UnityEngine.Rigidbody.velocity
	// UnityEngine.Rigidbody2D.op_Equality
	// UnityEngine.Rigidbody2D.op_Implicit
	// UnityEngine.Rigidbody2D.op_Inequality
	// UnityEngine.RuntimeAnimatorController.op_Equality
	// UnityEngine.RuntimeAnimatorController.op_Implicit
	// UnityEngine.RuntimeAnimatorController.op_Inequality
	// UnityEngine.SceneManagement.Scene.name
	// UnityEngine.SceneManagement.Scene.op_Equality
	// UnityEngine.SceneManagement.Scene.op_Inequality
	// UnityEngine.SceneManagement.SceneManager.GetActiveScene
	// UnityEngine.ScriptableObject.op_Equality
	// UnityEngine.ScriptableObject.op_Implicit
	// UnityEngine.ScriptableObject.op_Inequality
	// UnityEngine.Shader.op_Equality
	// UnityEngine.Shader.op_Implicit
	// UnityEngine.Shader.op_Inequality
	// UnityEngine.ShaderVariantCollection.op_Equality
	// UnityEngine.ShaderVariantCollection.op_Implicit
	// UnityEngine.ShaderVariantCollection.op_Inequality
	// UnityEngine.SkinnedMeshRenderer.enabled
	// UnityEngine.SkinnedMeshRenderer.op_Equality
	// UnityEngine.SkinnedMeshRenderer.op_Implicit
	// UnityEngine.SkinnedMeshRenderer.op_Inequality
	// UnityEngine.SkinnedMeshRenderer.SetPropertyBlock
	// UnityEngine.Skybox.op_Equality
	// UnityEngine.Skybox.op_Implicit
	// UnityEngine.Skybox.op_Inequality
	// UnityEngine.SliderJoint2D.op_Equality
	// UnityEngine.SliderJoint2D.op_Implicit
	// UnityEngine.SliderJoint2D.op_Inequality
	// UnityEngine.SparseTexture.op_Equality
	// UnityEngine.SparseTexture.op_Implicit
	// UnityEngine.SparseTexture.op_Inequality
	// UnityEngine.SpatialTracking.TrackedPoseDriver.op_Equality
	// UnityEngine.SpatialTracking.TrackedPoseDriver.op_Implicit
	// UnityEngine.SpatialTracking.TrackedPoseDriver.op_Inequality
	// UnityEngine.SphereCollider.op_Equality
	// UnityEngine.SphereCollider.op_Implicit
	// UnityEngine.SphereCollider.op_Inequality
	// UnityEngine.SpringJoint.op_Equality
	// UnityEngine.SpringJoint.op_Implicit
	// UnityEngine.SpringJoint.op_Inequality
	// UnityEngine.SpringJoint2D.op_Equality
	// UnityEngine.SpringJoint2D.op_Implicit
	// UnityEngine.SpringJoint2D.op_Inequality
	// UnityEngine.Sprite.op_Equality
	// UnityEngine.Sprite.op_Implicit
	// UnityEngine.Sprite.op_Inequality
	// UnityEngine.SpriteMask.op_Equality
	// UnityEngine.SpriteMask.op_Implicit
	// UnityEngine.SpriteMask.op_Inequality
	// UnityEngine.SpriteRenderer.color
	// UnityEngine.SpriteRenderer.enabled
	// UnityEngine.SpriteRenderer.material
	// UnityEngine.SpriteRenderer.op_Equality
	// UnityEngine.SpriteRenderer.op_Implicit
	// UnityEngine.SpriteRenderer.op_Inequality
	// UnityEngine.SurfaceEffector2D.op_Equality
	// UnityEngine.SurfaceEffector2D.op_Implicit
	// UnityEngine.SurfaceEffector2D.op_Inequality
	// UnityEngine.TargetJoint2D.op_Equality
	// UnityEngine.TargetJoint2D.op_Implicit
	// UnityEngine.TargetJoint2D.op_Inequality
	// UnityEngine.Terrain.op_Equality
	// UnityEngine.Terrain.op_Implicit
	// UnityEngine.Terrain.op_Inequality
	// UnityEngine.TerrainCollider.op_Equality
	// UnityEngine.TerrainCollider.op_Implicit
	// UnityEngine.TerrainCollider.op_Inequality
	// UnityEngine.TerrainData.op_Equality
	// UnityEngine.TerrainData.op_Implicit
	// UnityEngine.TerrainData.op_Inequality
	// UnityEngine.TerrainLayer.op_Equality
	// UnityEngine.TerrainLayer.op_Implicit
	// UnityEngine.TerrainLayer.op_Inequality
	// UnityEngine.TextAsset..ctor
	// UnityEngine.TextAsset.op_Equality
	// UnityEngine.TextAsset.op_Implicit
	// UnityEngine.TextAsset.op_Inequality
	// UnityEngine.TextAsset.text
	// UnityEngine.TextMesh.op_Equality
	// UnityEngine.TextMesh.op_Implicit
	// UnityEngine.TextMesh.op_Inequality
	// UnityEngine.Texture.op_Equality
	// UnityEngine.Texture.op_Implicit
	// UnityEngine.Texture.op_Inequality
	// UnityEngine.Texture2D.op_Equality
	// UnityEngine.Texture2D.op_Implicit
	// UnityEngine.Texture2D.op_Inequality
	// UnityEngine.Texture2DArray.op_Equality
	// UnityEngine.Texture2DArray.op_Implicit
	// UnityEngine.Texture2DArray.op_Inequality
	// UnityEngine.Texture3D.op_Equality
	// UnityEngine.Texture3D.op_Implicit
	// UnityEngine.Texture3D.op_Inequality
	// UnityEngine.Tilemaps.Tile.op_Equality
	// UnityEngine.Tilemaps.Tile.op_Implicit
	// UnityEngine.Tilemaps.Tile.op_Inequality
	// UnityEngine.Tilemaps.Tilemap.op_Equality
	// UnityEngine.Tilemaps.Tilemap.op_Implicit
	// UnityEngine.Tilemaps.Tilemap.op_Inequality
	// UnityEngine.Tilemaps.TilemapCollider2D.op_Equality
	// UnityEngine.Tilemaps.TilemapCollider2D.op_Implicit
	// UnityEngine.Tilemaps.TilemapCollider2D.op_Inequality
	// UnityEngine.Tilemaps.TilemapRenderer.op_Equality
	// UnityEngine.Tilemaps.TilemapRenderer.op_Implicit
	// UnityEngine.Tilemaps.TilemapRenderer.op_Inequality
	// UnityEngine.Time.deltaTime
	// UnityEngine.TrailRenderer.op_Equality
	// UnityEngine.TrailRenderer.op_Implicit
	// UnityEngine.TrailRenderer.op_Inequality
	// UnityEngine.Transform.childCount
	// UnityEngine.Transform.DetachChildren
	// UnityEngine.Transform.eulerAngles
	// UnityEngine.Transform.Find
	// UnityEngine.Transform.forward
	// UnityEngine.Transform.GetChild
	// UnityEngine.Transform.InverseTransformPoint
	// UnityEngine.Transform.localPosition
	// UnityEngine.Transform.localRotation
	// UnityEngine.Transform.localScale
	// UnityEngine.Transform.LookAt
	// UnityEngine.Transform.LookAt
	// UnityEngine.Transform.lossyScale
	// UnityEngine.Transform.op_Equality
	// UnityEngine.Transform.op_Implicit
	// UnityEngine.Transform.op_Inequality
	// UnityEngine.Transform.parent
	// UnityEngine.Transform.position
	// UnityEngine.Transform.right
	// UnityEngine.Transform.Rotate
	// UnityEngine.Transform.Rotate
	// UnityEngine.Transform.rotation
	// UnityEngine.Transform.SetParent
	// UnityEngine.Transform.SetParent
	// UnityEngine.Transform.TransformDirection
	// UnityEngine.Transform.TransformPoint
	// UnityEngine.Transform.TransformPoint
	// UnityEngine.Transform.Translate
	// UnityEngine.Transform.up
	// UnityEngine.Tree.op_Equality
	// UnityEngine.Tree.op_Implicit
	// UnityEngine.Tree.op_Inequality
	// UnityEngine.U2D.SpriteAtlas.op_Equality
	// UnityEngine.U2D.SpriteAtlas.op_Implicit
	// UnityEngine.U2D.SpriteAtlas.op_Inequality
	// UnityEngine.UI.AspectRatioFitter.op_Equality
	// UnityEngine.UI.AspectRatioFitter.op_Implicit
	// UnityEngine.UI.AspectRatioFitter.op_Inequality
	// UnityEngine.UI.Button.op_Equality
	// UnityEngine.UI.Button.op_Implicit
	// UnityEngine.UI.Button.op_Inequality
	// UnityEngine.UI.CanvasScaler.op_Equality
	// UnityEngine.UI.CanvasScaler.op_Implicit
	// UnityEngine.UI.CanvasScaler.op_Inequality
	// UnityEngine.UI.ContentSizeFitter.op_Equality
	// UnityEngine.UI.ContentSizeFitter.op_Implicit
	// UnityEngine.UI.ContentSizeFitter.op_Inequality
	// UnityEngine.UI.Dropdown.op_Equality
	// UnityEngine.UI.Dropdown.op_Implicit
	// UnityEngine.UI.Dropdown.op_Inequality
	// UnityEngine.UI.GraphicRaycaster.op_Equality
	// UnityEngine.UI.GraphicRaycaster.op_Implicit
	// UnityEngine.UI.GraphicRaycaster.op_Inequality
	// UnityEngine.UI.GridLayoutGroup.op_Equality
	// UnityEngine.UI.GridLayoutGroup.op_Implicit
	// UnityEngine.UI.GridLayoutGroup.op_Inequality
	// UnityEngine.UI.HorizontalLayoutGroup.op_Equality
	// UnityEngine.UI.HorizontalLayoutGroup.op_Implicit
	// UnityEngine.UI.HorizontalLayoutGroup.op_Inequality
	// UnityEngine.UI.Image.op_Equality
	// UnityEngine.UI.Image.op_Implicit
	// UnityEngine.UI.Image.op_Inequality
	// UnityEngine.UI.InputField.op_Equality
	// UnityEngine.UI.InputField.op_Implicit
	// UnityEngine.UI.InputField.op_Inequality
	// UnityEngine.UI.LayoutElement.op_Equality
	// UnityEngine.UI.LayoutElement.op_Implicit
	// UnityEngine.UI.LayoutElement.op_Inequality
	// UnityEngine.UI.Mask.op_Equality
	// UnityEngine.UI.Mask.op_Implicit
	// UnityEngine.UI.Mask.op_Inequality
	// UnityEngine.UI.Outline.op_Equality
	// UnityEngine.UI.Outline.op_Implicit
	// UnityEngine.UI.Outline.op_Inequality
	// UnityEngine.UI.PositionAsUV1.op_Equality
	// UnityEngine.UI.PositionAsUV1.op_Implicit
	// UnityEngine.UI.PositionAsUV1.op_Inequality
	// UnityEngine.UI.RawImage.op_Equality
	// UnityEngine.UI.RawImage.op_Implicit
	// UnityEngine.UI.RawImage.op_Inequality
	// UnityEngine.UI.RectMask2D.op_Equality
	// UnityEngine.UI.RectMask2D.op_Implicit
	// UnityEngine.UI.RectMask2D.op_Inequality
	// UnityEngine.UI.Scrollbar.op_Equality
	// UnityEngine.UI.Scrollbar.op_Implicit
	// UnityEngine.UI.Scrollbar.op_Inequality
	// UnityEngine.UI.ScrollRect.op_Equality
	// UnityEngine.UI.ScrollRect.op_Implicit
	// UnityEngine.UI.ScrollRect.op_Inequality
	// UnityEngine.UI.Selectable.op_Equality
	// UnityEngine.UI.Selectable.op_Implicit
	// UnityEngine.UI.Selectable.op_Inequality
	// UnityEngine.UI.Shadow.op_Equality
	// UnityEngine.UI.Shadow.op_Implicit
	// UnityEngine.UI.Shadow.op_Inequality
	// UnityEngine.UI.Slider.op_Equality
	// UnityEngine.UI.Slider.op_Implicit
	// UnityEngine.UI.Slider.op_Inequality
	// UnityEngine.UI.Text.op_Equality
	// UnityEngine.UI.Text.op_Implicit
	// UnityEngine.UI.Text.op_Inequality
	// UnityEngine.UI.Toggle.op_Equality
	// UnityEngine.UI.Toggle.op_Implicit
	// UnityEngine.UI.Toggle.op_Inequality
	// UnityEngine.UI.ToggleGroup.op_Equality
	// UnityEngine.UI.ToggleGroup.op_Implicit
	// UnityEngine.UI.ToggleGroup.op_Inequality
	// UnityEngine.UI.VerticalLayoutGroup.op_Equality
	// UnityEngine.UI.VerticalLayoutGroup.op_Implicit
	// UnityEngine.UI.VerticalLayoutGroup.op_Inequality
	// UnityEngine.UIElements.StyleSheet.op_Equality
	// UnityEngine.UIElements.StyleSheet.op_Implicit
	// UnityEngine.UIElements.StyleSheet.op_Inequality
	// UnityEngine.UIElements.ThemeStyleSheet.op_Equality
	// UnityEngine.UIElements.ThemeStyleSheet.op_Implicit
	// UnityEngine.UIElements.ThemeStyleSheet.op_Inequality
	// UnityEngine.UIElements.VectorImage.op_Equality
	// UnityEngine.UIElements.VectorImage.op_Implicit
	// UnityEngine.UIElements.VectorImage.op_Inequality
	// UnityEngine.UIElements.VisualTreeAsset.op_Equality
	// UnityEngine.UIElements.VisualTreeAsset.op_Implicit
	// UnityEngine.UIElements.VisualTreeAsset.op_Inequality
	// UnityEngine.Vector2.op_Addition
	// UnityEngine.Vector2.op_Division
	// UnityEngine.Vector2.op_Division
	// UnityEngine.Vector2.op_Equality
	// UnityEngine.Vector2.op_Implicit
	// UnityEngine.Vector2.op_Implicit
	// UnityEngine.Vector2.op_Inequality
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Subtraction
	// UnityEngine.Vector2.op_UnaryNegation
	// UnityEngine.Vector2.Set
	// UnityEngine.Vector3..ctor
	// UnityEngine.Vector3.forward
	// UnityEngine.Vector3.Lerp
	// UnityEngine.Vector3.magnitude
	// UnityEngine.Vector3.Magnitude
	// UnityEngine.Vector3.Normalize
	// UnityEngine.Vector3.normalized
	// UnityEngine.Vector3.op_Addition
	// UnityEngine.Vector3.op_Division
	// UnityEngine.Vector3.op_Equality
	// UnityEngine.Vector3.op_Inequality
	// UnityEngine.Vector3.op_Multiply
	// UnityEngine.Vector3.op_Multiply
	// UnityEngine.Vector3.op_Subtraction
	// UnityEngine.Vector3.op_UnaryNegation
	// UnityEngine.Vector3.ProjectOnPlane
	// UnityEngine.Vector3.right
	// UnityEngine.Vector3.Set
	// UnityEngine.Vector3.SignedAngle
	// UnityEngine.Vector3.sqrMagnitude
	// UnityEngine.Vector3.up
	// UnityEngine.Vector3.x
	// UnityEngine.Vector3.y
	// UnityEngine.Vector3.z
	// UnityEngine.Vector3.zero
	// UnityEngine.Vector4.op_Addition
	// UnityEngine.Vector4.op_Division
	// UnityEngine.Vector4.op_Equality
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Vector4.op_Inequality
	// UnityEngine.Vector4.op_Multiply
	// UnityEngine.Vector4.op_Multiply
	// UnityEngine.Vector4.op_Subtraction
	// UnityEngine.Vector4.op_UnaryNegation
	// UnityEngine.Video.VideoClip.op_Equality
	// UnityEngine.Video.VideoClip.op_Implicit
	// UnityEngine.Video.VideoClip.op_Inequality
	// UnityEngine.Video.VideoPlayer.clip
	// UnityEngine.Video.VideoPlayer.op_Equality
	// UnityEngine.Video.VideoPlayer.op_Implicit
	// UnityEngine.Video.VideoPlayer.op_Inequality
	// UnityEngine.Video.VideoPlayer.Play
	// UnityEngine.Video.VideoPlayer.Prepare
	// UnityEngine.WebCamTexture.op_Equality
	// UnityEngine.WebCamTexture.op_Implicit
	// UnityEngine.WebCamTexture.op_Inequality
	// UnityEngine.WheelCollider.op_Equality
	// UnityEngine.WheelCollider.op_Implicit
	// UnityEngine.WheelCollider.op_Inequality
	// UnityEngine.WheelJoint2D.op_Equality
	// UnityEngine.WheelJoint2D.op_Implicit
	// UnityEngine.WheelJoint2D.op_Inequality
	// UnityEngine.WindZone.op_Equality
	// UnityEngine.WindZone.op_Implicit
	// UnityEngine.WindZone.op_Inequality
	// UnityTemplateProjects.SimpleCameraController.op_Equality
	// UnityTemplateProjects.SimpleCameraController.op_Implicit
	// UnityTemplateProjects.SimpleCameraController.op_Inequality
	// UserMenuManager.op_Equality
	// UserMenuManager.op_Implicit
	// UserMenuManager.op_Inequality
	// ValueLabelsVisualizer.op_Equality
	// ValueLabelsVisualizer.op_Implicit
	// ValueLabelsVisualizer.op_Inequality
	// ValueLabelsVisualizer.Xdisplacement
	// ValueLabelsVisualizer.Ydisplacement
	// ValueLabelsVisualizer.Zdisplacement
	// ValuesAnimationController.op_Equality
	// ValuesAnimationController.op_Implicit
	// ValuesAnimationController.op_Inequality
	// VertexExtrusionScript.op_Equality
	// VertexExtrusionScript.op_Implicit
	// VertexExtrusionScript.op_Inequality
	// VRAnimatorController.op_Equality
	// VRAnimatorController.op_Implicit
	// VRAnimatorController.op_Inequality
	// VRLegsIK.op_Equality
	// VRLegsIK.op_Implicit
	// VRLegsIK.op_Inequality
	// VRLink.op_Equality
	// VRLink.op_Implicit
	// VRLink.op_Inequality
	// WaterAudioTrigger.op_Equality
	// WaterAudioTrigger.op_Implicit
	// WaterAudioTrigger.op_Inequality
	// ZoomController.op_Equality
	// ZoomController.op_Implicit
	// ZoomController.op_Inequality
	[UnityEngine.Scripting.PreserveAttribute()]
	public class AotStubs
	{
		
		// AndroidDebug.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AndroidDebug_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AndroidDebug.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AndroidDebug_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AndroidDebug.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AndroidDebug_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AnimationEventManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AnimationEventManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AnimationEventManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AnimationEventManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AnimationEventManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AnimationEventManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AppDeeplinkUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AppDeeplinkUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AppDeeplinkUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AppDeeplinkUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AppDeeplinkUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AppDeeplinkUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AreaLightController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AreaLightController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AreaLightController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AreaLightController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AreaLightController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AreaLightController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ArmCopyController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ArmCopyController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ArmCopyController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ArmCopyController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ArmCopyController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ArmCopyController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AudioManager.CurrentSnapshot
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AudioManager_CurrentSnapshot()
		{
			global::AudioManager target = default(global::AudioManager);
			global::UnityEngine.Audio.AudioMixerSnapshot accessor = target.CurrentSnapshot;
			target.CurrentSnapshot = default(global::UnityEngine.Audio.AudioMixerSnapshot);
			global::Ludiq.InstancePropertyAccessor<AudioManager, UnityEngine.Audio.AudioMixerSnapshot> optimized = new global::Ludiq.InstancePropertyAccessor<AudioManager, UnityEngine.Audio.AudioMixerSnapshot>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::AudioManager));
			optimized.SetValue(default(global::AudioManager), default(global::UnityEngine.Audio.AudioMixerSnapshot));
		}
		
		// AudioManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AudioManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AudioManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AudioManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AudioManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AudioManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AudioSync.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AudioSync_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AudioSync.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AudioSync_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AudioSync.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AudioSync_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BeautifyEffect.Beautify.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BeautifyEffect_Beautify_enabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
			optimized.SetValue(default(global::UnityEngine.Behaviour), default(bool));
		}
		
		// BeautifyEffect.Beautify.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BeautifyEffect_Beautify_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BeautifyEffect.Beautify.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BeautifyEffect_Beautify_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// BeautifyEffect.Beautify.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BeautifyEffect_Beautify_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BeautifyEffect.Beautify.profile
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BeautifyEffect_Beautify_profile()
		{
			global::BeautifyEffect.Beautify target = default(global::BeautifyEffect.Beautify);
			global::BeautifyEffect.BeautifyProfile accessor = target.profile;
			target.profile = default(global::BeautifyEffect.BeautifyProfile);
			global::Ludiq.InstancePropertyAccessor<BeautifyEffect.Beautify, BeautifyEffect.BeautifyProfile> optimized = new global::Ludiq.InstancePropertyAccessor<BeautifyEffect.Beautify, BeautifyEffect.BeautifyProfile>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::BeautifyEffect.Beautify));
			optimized.SetValue(default(global::BeautifyEffect.Beautify), default(global::BeautifyEffect.BeautifyProfile));
		}
		
		// BeautifyEffect.BeautifyProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BeautifyEffect_BeautifyProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BeautifyEffect.BeautifyProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BeautifyEffect_BeautifyProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// BeautifyEffect.BeautifyProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BeautifyEffect_BeautifyProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BlendshapesController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BlendshapesController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BlendshapesController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BlendshapesController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// BlendshapesController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BlendshapesController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.AnimatorMessageListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_AnimatorMessageListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.AnimatorMessageListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_AnimatorMessageListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.AnimatorMessageListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_AnimatorMessageListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMachine.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMachine_enabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
			optimized.SetValue(default(global::UnityEngine.Behaviour), default(bool));
		}
		
		// Bolt.FlowMachine.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMachine_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMachine.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMachine_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMachine.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMachine_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMacro.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMacro_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMacro.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMacro_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMacro.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMacro_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMachine.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMachine_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMachine.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMachine_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMachine.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMachine_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMacro.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMacro_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMacro.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMacro_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMacro.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMacro_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.Variables.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_Variables_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.Variables.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_Variables_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.Variables.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_Variables_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BoundaryTest.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BoundaryTest_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BoundaryTest.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BoundaryTest_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// BoundaryTest.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BoundaryTest_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BoundsLockedObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BoundsLockedObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BoundsLockedObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BoundsLockedObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// BoundsLockedObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BoundsLockedObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ButtonDownListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ButtonDownListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ButtonDownListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ButtonDownListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ButtonDownListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ButtonDownListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ButtonEnabler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ButtonEnabler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ButtonEnabler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ButtonEnabler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ButtonEnabler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ButtonEnabler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CameraBehavior.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraBehavior_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CameraBehavior.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraBehavior_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CameraBehavior.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraBehavior_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CameraManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CameraManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CameraManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ChangeMaterialsEventHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ChangeMaterialsEventHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ChangeMaterialsEventHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ChangeMaterialsEventHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ChangeMaterialsEventHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ChangeMaterialsEventHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ChangeMaterialsEventHandlerSkinnedMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ChangeMaterialsEventHandlerSkinnedMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ChangeMaterialsEventHandlerSkinnedMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ChangeMaterialsEventHandlerSkinnedMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ChangeMaterialsEventHandlerSkinnedMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ChangeMaterialsEventHandlerSkinnedMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CharacterCameraConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CharacterCameraConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CharacterCameraConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CharacterCameraConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CharacterCameraConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CharacterCameraConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CharacterCapsule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CharacterCapsule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CharacterCapsule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CharacterCapsule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CharacterCapsule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CharacterCapsule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ChatController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ChatController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ChatController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ChatController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ChatController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ChatController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CheckConfidenceLevel.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CheckConfidenceLevel_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CheckConfidenceLevel.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CheckConfidenceLevel_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CheckConfidenceLevel.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CheckConfidenceLevel_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ClockCollisionDetection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ClockCollisionDetection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ClockCollisionDetection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ClockCollisionDetection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ClockCollisionDetection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ClockCollisionDetection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ClockManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ClockManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ClockManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ClockManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ClockManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ClockManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CloudsManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CloudsManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CloudsManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CloudsManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CloudsManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CloudsManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CloudsManagerForOsaka.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CloudsManagerForOsaka_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CloudsManagerForOsaka.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CloudsManagerForOsaka_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CloudsManagerForOsaka.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CloudsManagerForOsaka_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CommandMenuButton.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CommandMenuButton_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CommandMenuButton.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CommandMenuButton_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CommandMenuButton.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CommandMenuButton_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CubeBehavior.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CubeBehavior_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CubeBehavior.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CubeBehavior_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CubeBehavior.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CubeBehavior_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CurtainController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CurtainController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CurtainController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CurtainController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CurtainController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CurtainController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomBoundsControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomBoundsControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomBoundsControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomBoundsControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CustomBoundsControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomBoundsControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomBoundsControlMeshSequence.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomBoundsControlMeshSequence_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomBoundsControlMeshSequence.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomBoundsControlMeshSequence_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CustomBoundsControlMeshSequence.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomBoundsControlMeshSequence_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomBoxDisplay.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomBoxDisplay_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomBoxDisplay.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomBoxDisplay_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CustomBoxDisplay.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomBoxDisplay_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomDebugUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomDebugUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomDebugUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomDebugUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CustomDebugUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomDebugUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomLightManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomLightManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomLightManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomLightManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CustomLightManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomLightManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomLightManagerForOsaka.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomLightManagerForOsaka_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomLightManagerForOsaka.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomLightManagerForOsaka_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CustomLightManagerForOsaka.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomLightManagerForOsaka_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomLightManagerForOsaka.TimeOfDay
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomLightManagerForOsaka_TimeOfDay()
		{
			global::CustomLightManagerForOsaka target = default(global::CustomLightManagerForOsaka);
			float accessor = target.TimeOfDay;
			target.TimeOfDay = default(float);
			global::Ludiq.InstanceFieldAccessor<CustomLightManagerForOsaka, float> optimized = new global::Ludiq.InstanceFieldAccessor<CustomLightManagerForOsaka, float>(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(default(global::CustomLightManagerForOsaka));
			optimized.SetValue(default(global::CustomLightManagerForOsaka), default(float));
		}
		
		// CustomPlatformableSet.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomPlatformableSet_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomPlatformableSet.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomPlatformableSet_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CustomPlatformableSet.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomPlatformableSet_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CylinderBehavior.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CylinderBehavior_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CylinderBehavior.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CylinderBehavior_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CylinderBehavior.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CylinderBehavior_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DebugUIBuilder.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DebugUIBuilder_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DebugUIBuilder.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DebugUIBuilder_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// DebugUIBuilder.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DebugUIBuilder_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DebugUISample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DebugUISample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DebugUISample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DebugUISample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// DebugUISample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DebugUISample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockManager..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockManager_ctor()
		{
			new DigitalClockManager();
		}
		
		// DigitalClockManager.AutoIncrease
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockManager_AutoIncrease()
		{
			global::DigitalClockManager target = default(global::DigitalClockManager);
			bool accessor = target.AutoIncrease;
			global::Ludiq.InstancePropertyAccessor<DigitalClockManager, bool> optimized = new global::Ludiq.InstancePropertyAccessor<DigitalClockManager, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::DigitalClockManager));
			optimized.SetValue(default(global::DigitalClockManager), default(bool));
		}
		
		// DigitalClockManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockManager.SetLongDecreasePressFalse
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockManager_SetLongDecreasePressFalse()
		{
			global::DigitalClockManager target = default(global::DigitalClockManager);
			target.SetLongDecreasePressFalse();
			global::Ludiq.InstanceActionInvoker<DigitalClockManager> optimized = new global::Ludiq.InstanceActionInvoker<DigitalClockManager>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::DigitalClockManager));
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockManager.SetLongDecreasePressTrue
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockManager_SetLongDecreasePressTrue()
		{
			global::DigitalClockManager target = default(global::DigitalClockManager);
			target.SetLongDecreasePressTrue();
			global::Ludiq.InstanceActionInvoker<DigitalClockManager> optimized = new global::Ludiq.InstanceActionInvoker<DigitalClockManager>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::DigitalClockManager));
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockManager.SetLongIncreasePressFalse
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockManager_SetLongIncreasePressFalse()
		{
			global::DigitalClockManager target = default(global::DigitalClockManager);
			target.SetLongIncreasePressFalse();
			global::Ludiq.InstanceActionInvoker<DigitalClockManager> optimized = new global::Ludiq.InstanceActionInvoker<DigitalClockManager>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::DigitalClockManager));
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockManager.SetLongIncreasePressTrue
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockManager_SetLongIncreasePressTrue()
		{
			global::DigitalClockManager target = default(global::DigitalClockManager);
			target.SetLongIncreasePressTrue();
			global::Ludiq.InstanceActionInvoker<DigitalClockManager> optimized = new global::Ludiq.InstanceActionInvoker<DigitalClockManager>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::DigitalClockManager));
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockManager.StartAutoIncrease
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockManager_StartAutoIncrease()
		{
			global::DigitalClockManager target = default(global::DigitalClockManager);
			target.StartAutoIncrease();
			global::Ludiq.InstanceActionInvoker<DigitalClockManager> optimized = new global::Ludiq.InstanceActionInvoker<DigitalClockManager>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::DigitalClockManager));
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockManager.StopAutoIncrease
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockManager_StopAutoIncrease()
		{
			global::DigitalClockManager target = default(global::DigitalClockManager);
			target.StopAutoIncrease();
			global::Ludiq.InstanceActionInvoker<DigitalClockManager> optimized = new global::Ludiq.InstanceActionInvoker<DigitalClockManager>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::DigitalClockManager));
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockManagerForOsaka.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockManagerForOsaka_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockManagerForOsaka.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockManagerForOsaka_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockManagerForOsaka.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockManagerForOsaka_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockMotion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockMotion_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockMotion.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockMotion_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// DigitalClockMotion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DigitalClockMotion_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DoorSensor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DoorSensor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DoorSensor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DoorSensor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// DoorSensor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DoorSensor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DoorSync.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DoorSync_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DoorSync.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DoorSync_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// DoorSync.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DoorSync_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DropdownSample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DropdownSample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DropdownSample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DropdownSample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// DropdownSample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DropdownSample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// EnableSwitch.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EnableSwitch_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// EnableSwitch.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EnableSwitch_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// EnableSwitch.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EnableSwitch_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// EnvMapAnimator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EnvMapAnimator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// EnvMapAnimator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EnvMapAnimator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// EnvMapAnimator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EnvMapAnimator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// EscalatorPro.EscalatorPro.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EscalatorPro_EscalatorPro_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// EscalatorPro.EscalatorPro.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EscalatorPro_EscalatorPro_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// EscalatorPro.EscalatorPro.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EscalatorPro_EscalatorPro_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// EscalatorPro.EscalatorPro.stopped
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EscalatorPro_EscalatorPro_stopped()
		{
			global::EscalatorPro.EscalatorPro target = default(global::EscalatorPro.EscalatorPro);
			bool accessor = target.stopped;
			target.stopped = default(bool);
			global::Ludiq.InstanceFieldAccessor<EscalatorPro.EscalatorPro, bool> optimized = new global::Ludiq.InstanceFieldAccessor<EscalatorPro.EscalatorPro, bool>(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(default(global::EscalatorPro.EscalatorPro));
			optimized.SetValue(default(global::EscalatorPro.EscalatorPro), default(bool));
		}
		
		// EscalatorPro.Stair.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EscalatorPro_Stair_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// EscalatorPro.Stair.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EscalatorPro_Stair_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// EscalatorPro.Stair.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EscalatorPro_Stair_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FadeUtils.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FadeUtils_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FadeUtils.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FadeUtils_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// FadeUtils.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FadeUtils_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_Equality()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_GreaterThan
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_GreaterThan()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 > arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_GreaterThanOrEqual
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_GreaterThanOrEqual()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 >= arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_Inequality()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_LessThan
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_LessThan()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 < arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_LessThanOrEqual
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_LessThanOrEqual()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 <= arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.Parse
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_Parse()
		{
			string arg0 = default(string);
			float.Parse(arg0);
			global::Ludiq.StaticFunctionInvoker<string, float> optimized = new global::Ludiq.StaticFunctionInvoker<string, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// FogManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FogManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FogManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FogManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// FogManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FogManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FogManagerForOsaka.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FogManagerForOsaka_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FogManagerForOsaka.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FogManagerForOsaka_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// FogManagerForOsaka.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FogManagerForOsaka_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ForceRequestOwnershipNormcore.CheckIfHasNoOwner
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ForceRequestOwnershipNormcore_CheckIfHasNoOwner()
		{
			global::ForceRequestOwnershipNormcore target = default(global::ForceRequestOwnershipNormcore);
			target.CheckIfHasNoOwner();
			global::Ludiq.InstanceFunctionInvoker<ForceRequestOwnershipNormcore, bool> optimized = new global::Ludiq.InstanceFunctionInvoker<ForceRequestOwnershipNormcore, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::ForceRequestOwnershipNormcore));
			optimized.Invoke(default(object[]));
		}
		
		// ForceRequestOwnershipNormcore.CheckIfSameLocalOwner
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ForceRequestOwnershipNormcore_CheckIfSameLocalOwner()
		{
			global::ForceRequestOwnershipNormcore target = default(global::ForceRequestOwnershipNormcore);
			global::UnityEngine.GameObject arg0 = default(global::UnityEngine.GameObject);
			target.CheckIfSameLocalOwner(arg0);
			global::Ludiq.InstanceFunctionInvoker<ForceRequestOwnershipNormcore, UnityEngine.GameObject, bool> optimized = new global::Ludiq.InstanceFunctionInvoker<ForceRequestOwnershipNormcore, UnityEngine.GameObject, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::ForceRequestOwnershipNormcore), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ForceRequestOwnershipNormcore.ClearGrabOwnership
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ForceRequestOwnershipNormcore_ClearGrabOwnership()
		{
			global::ForceRequestOwnershipNormcore target = default(global::ForceRequestOwnershipNormcore);
			target.ClearGrabOwnership();
			global::Ludiq.InstanceActionInvoker<ForceRequestOwnershipNormcore> optimized = new global::Ludiq.InstanceActionInvoker<ForceRequestOwnershipNormcore>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::ForceRequestOwnershipNormcore));
			optimized.Invoke(default(object[]));
		}
		
		// ForceRequestOwnershipNormcore.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ForceRequestOwnershipNormcore_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ForceRequestOwnershipNormcore.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ForceRequestOwnershipNormcore_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ForceRequestOwnershipNormcore.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ForceRequestOwnershipNormcore_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ForceRequestOwnershipNormcore.RequestFingersOwnership
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ForceRequestOwnershipNormcore_RequestFingersOwnership()
		{
			global::ForceRequestOwnershipNormcore target = default(global::ForceRequestOwnershipNormcore);
			target.RequestFingersOwnership();
			global::Ludiq.InstanceActionInvoker<ForceRequestOwnershipNormcore> optimized = new global::Ludiq.InstanceActionInvoker<ForceRequestOwnershipNormcore>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::ForceRequestOwnershipNormcore));
			optimized.Invoke(default(object[]));
		}
		
		// ForceRequestOwnershipNormcore.RequestGrabOwnershipNoOwnerCheck
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ForceRequestOwnershipNormcore_RequestGrabOwnershipNoOwnerCheck()
		{
			global::ForceRequestOwnershipNormcore target = default(global::ForceRequestOwnershipNormcore);
			target.RequestGrabOwnershipNoOwnerCheck();
			global::Ludiq.InstanceActionInvoker<ForceRequestOwnershipNormcore> optimized = new global::Ludiq.InstanceActionInvoker<ForceRequestOwnershipNormcore>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::ForceRequestOwnershipNormcore));
			optimized.Invoke(default(object[]));
		}
		
		// ForceRequestOwnershipNormcore.RequestTrackingSpaceOwnership
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ForceRequestOwnershipNormcore_RequestTrackingSpaceOwnership()
		{
			global::ForceRequestOwnershipNormcore target = default(global::ForceRequestOwnershipNormcore);
			target.RequestTrackingSpaceOwnership();
			global::Ludiq.InstanceActionInvoker<ForceRequestOwnershipNormcore> optimized = new global::Ludiq.InstanceActionInvoker<ForceRequestOwnershipNormcore>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::ForceRequestOwnershipNormcore));
			optimized.Invoke(default(object[]));
		}
		
		// FreezeGeometries.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FreezeGeometries_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FreezeGeometries.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FreezeGeometries_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// FreezeGeometries.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FreezeGeometries_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GameManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GameManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GameManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GameManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GameManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GameManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GameManagerOsaka.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GameManagerOsaka_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GameManagerOsaka.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GameManagerOsaka_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GameManagerOsaka.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GameManagerOsaka_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GazeTarget.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GazeTarget_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GazeTarget.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GazeTarget_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GazeTarget.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GazeTarget_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GazeTargetSpawner.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GazeTargetSpawner_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GazeTargetSpawner.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GazeTargetSpawner_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GazeTargetSpawner.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GazeTargetSpawner_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GeometryBehavior.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometryBehavior_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GeometryBehavior.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometryBehavior_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GeometryBehavior.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometryBehavior_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GeometryInteraction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometryInteraction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GeometryInteraction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometryInteraction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GeometryInteraction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometryInteraction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GeometryMeshSequenceSetModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometryMeshSequenceSetModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GeometryMeshSequenceSetModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometryMeshSequenceSetModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GeometryMeshSequenceSetModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometryMeshSequenceSetModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GeometrySetModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometrySetModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GeometrySetModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometrySetModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GeometrySetModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometrySetModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GeometryStatusSaver.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometryStatusSaver_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GeometryStatusSaver.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometryStatusSaver_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GeometryStatusSaver.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometryStatusSaver_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GeometryStatusSaver.SaveMiniSceneScale
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GeometryStatusSaver_SaveMiniSceneScale()
		{
			global::GeometryStatusSaver target = default(global::GeometryStatusSaver);
			global::UnityEngine.GameObject arg0 = default(global::UnityEngine.GameObject);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			target.SaveMiniSceneScale(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<GeometryStatusSaver, UnityEngine.GameObject, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceActionInvoker<GeometryStatusSaver, UnityEngine.GameObject, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::GeometryStatusSaver), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GHLoader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GHLoader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GHLoader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GHLoader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GHLoader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GHLoader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GravityControllerReset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GravityControllerReset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GravityControllerReset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GravityControllerReset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GravityControllerReset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GravityControllerReset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GuardianBoundaryDisplay.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GuardianBoundaryDisplay_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GuardianBoundaryDisplay.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GuardianBoundaryDisplay_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GuardianBoundaryDisplay.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GuardianBoundaryDisplay_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GuardianBoundaryEnforcer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GuardianBoundaryEnforcer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GuardianBoundaryEnforcer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GuardianBoundaryEnforcer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GuardianBoundaryEnforcer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GuardianBoundaryEnforcer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// HandedInputSelector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandedInputSelector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// HandedInputSelector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandedInputSelector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// HandedInputSelector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandedInputSelector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// HandGrabber.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandGrabber_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// HandGrabber.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandGrabber_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// HandGrabber.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandGrabber_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// HandInteraction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandInteraction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// HandInteraction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandInteraction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// HandInteraction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandInteraction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// HandsActiveChecker.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandsActiveChecker_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// HandsActiveChecker.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandsActiveChecker_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// HandsActiveChecker.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandsActiveChecker_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// HandTrackingLostDetector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandTrackingLostDetector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// HandTrackingLostDetector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandTrackingLostDetector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// HandTrackingLostDetector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void HandTrackingLostDetector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// IndoorAudioTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void IndoorAudioTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// IndoorAudioTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void IndoorAudioTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// IndoorAudioTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void IndoorAudioTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// IndoorPerimetricTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void IndoorPerimetricTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// IndoorPerimetricTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void IndoorPerimetricTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// IndoorPerimetricTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void IndoorPerimetricTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// IndoorStairsAudioTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void IndoorStairsAudioTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// IndoorStairsAudioTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void IndoorStairsAudioTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// IndoorStairsAudioTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void IndoorStairsAudioTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// int.ToString
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void int_ToString()
		{
			int target = default(int);
			target.ToString();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(int));
			optimized.Invoke(default(object[]));
		}
		
		// InteractEvents.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void InteractEvents_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// InteractEvents.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void InteractEvents_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// InteractEvents.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void InteractEvents_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// KoganeUnityLib.Example.Example.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void KoganeUnityLib_Example_Example_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// KoganeUnityLib.Example.Example.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void KoganeUnityLib_Example_Example_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// KoganeUnityLib.Example.Example.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void KoganeUnityLib_Example_Example_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// KoganeUnityLib.TMP_Typewriter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void KoganeUnityLib_TMP_Typewriter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// KoganeUnityLib.TMP_Typewriter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void KoganeUnityLib_TMP_Typewriter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// KoganeUnityLib.TMP_Typewriter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void KoganeUnityLib_TMP_Typewriter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// KoganeUnityLib.TMP_Typewriter.Play
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void KoganeUnityLib_TMP_Typewriter_Play()
		{
			global::KoganeUnityLib.TMP_Typewriter target = default(global::KoganeUnityLib.TMP_Typewriter);
			string arg0 = default(string);
			float arg1 = default(float);
			global::System.Action arg2 = default(global::System.Action);
			target.Play(arg0, arg1, arg2);
			global::Ludiq.InstanceActionInvoker<KoganeUnityLib.TMP_Typewriter, string, float, System.Action> optimized = new global::Ludiq.InstanceActionInvoker<KoganeUnityLib.TMP_Typewriter, string, float, System.Action>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::KoganeUnityLib.TMP_Typewriter), arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// LaserPointer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LaserPointer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LaserPointer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LaserPointer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LaserPointer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LaserPointer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelSelector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelSelector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelSelector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelSelector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LevelSelector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelSelector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelSelectorManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelSelectorManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelSelectorManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelSelectorManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LevelSelectorManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelSelectorManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LightSync.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LightSync_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LightSync.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LightSync_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LightSync.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LightSync_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LinearDrive.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LinearDrive_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LinearDrive.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LinearDrive_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LinearDrive.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LinearDrive_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LineRendererTextureAnimation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LineRendererTextureAnimation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LineRendererTextureAnimation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LineRendererTextureAnimation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LineRendererTextureAnimation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LineRendererTextureAnimation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LipSyncDemo_Control.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LipSyncDemo_Control_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LipSyncDemo_Control.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LipSyncDemo_Control_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LipSyncDemo_Control.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LipSyncDemo_Control_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LipSyncDemo_SetCurrentTarget.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LipSyncDemo_SetCurrentTarget_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LipSyncDemo_SetCurrentTarget.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LipSyncDemo_SetCurrentTarget_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LipSyncDemo_SetCurrentTarget.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LipSyncDemo_SetCurrentTarget_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LoadingButton.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LoadingButton_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LoadingButton.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LoadingButton_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LoadingButton.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LoadingButton_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LoadingButtonMeshSequenceController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LoadingButtonMeshSequenceController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LoadingButtonMeshSequenceController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LoadingButtonMeshSequenceController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LoadingButtonMeshSequenceController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LoadingButtonMeshSequenceController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LocomotionController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LocomotionController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LocomotionController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LocomotionController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LocomotionController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LocomotionController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LocomotionSampleSupport.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LocomotionSampleSupport_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LocomotionSampleSupport.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LocomotionSampleSupport_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LocomotionSampleSupport.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LocomotionSampleSupport_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LocomotionTeleport.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LocomotionTeleport_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LocomotionTeleport.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LocomotionTeleport_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LocomotionTeleport.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LocomotionTeleport_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Ludiq.AotDictionary.Add
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Ludiq_AotDictionary_Add()
		{
			global::System.Collections.Specialized.OrderedDictionary target = default(global::System.Collections.Specialized.OrderedDictionary);
			object arg0 = default(object);
			object arg1 = default(object);
			target.Add(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<System.Collections.Specialized.OrderedDictionary, object, object> optimized = new global::Ludiq.InstanceActionInvoker<System.Collections.Specialized.OrderedDictionary, object, object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::System.Collections.Specialized.OrderedDictionary), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Ludiq.AotDictionary.Clear
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Ludiq_AotDictionary_Clear()
		{
			global::System.Collections.Specialized.OrderedDictionary target = default(global::System.Collections.Specialized.OrderedDictionary);
			target.Clear();
			global::Ludiq.InstanceActionInvoker<System.Collections.Specialized.OrderedDictionary> optimized = new global::Ludiq.InstanceActionInvoker<System.Collections.Specialized.OrderedDictionary>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::System.Collections.Specialized.OrderedDictionary));
			optimized.Invoke(default(object[]));
		}
		
		// Ludiq.AotList..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Ludiq_AotList_ctor()
		{
			new Ludiq.AotList();
		}
		
		// Ludiq.AotList.Add
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Ludiq_AotList_Add()
		{
			global::System.Collections.ArrayList target = default(global::System.Collections.ArrayList);
			object arg0 = default(object);
			target.Add(arg0);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::System.Collections.ArrayList), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Ludiq.AotList.Clear
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Ludiq_AotList_Clear()
		{
			global::System.Collections.ArrayList target = default(global::System.Collections.ArrayList);
			target.Clear();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::System.Collections.ArrayList));
			optimized.Invoke(default(object[]));
		}
		
		// Ludiq.AotList.Contains
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Ludiq_AotList_Contains()
		{
			global::System.Collections.ArrayList target = default(global::System.Collections.ArrayList);
			object arg0 = default(object);
			target.Contains(arg0);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::System.Collections.ArrayList), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Ludiq.AotList.Count
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Ludiq_AotList_Count()
		{
			global::System.Collections.ArrayList target = default(global::System.Collections.ArrayList);
			int accessor = target.Count;
			global::Ludiq.InstancePropertyAccessor<System.Collections.ArrayList, int> optimized = new global::Ludiq.InstancePropertyAccessor<System.Collections.ArrayList, int>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::System.Collections.ArrayList));
		}
		
		// Ludiq.AotList.IndexOf
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Ludiq_AotList_IndexOf()
		{
			global::System.Collections.ArrayList target = default(global::System.Collections.ArrayList);
			object arg0 = default(object);
			target.IndexOf(arg0);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::System.Collections.ArrayList), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Ludiq.AotList.Remove
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Ludiq_AotList_Remove()
		{
			global::System.Collections.ArrayList target = default(global::System.Collections.ArrayList);
			object arg0 = default(object);
			target.Remove(arg0);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::System.Collections.ArrayList), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MASelectable.currentState
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MASelectable_currentState()
		{
			global::MASelectable target = default(global::MASelectable);
			global::MASelectable.SelectionState accessor = target.currentState;
			target.currentState = default(global::MASelectable.SelectionState);
			global::Ludiq.InstanceFieldAccessor<MASelectable, MASelectable.SelectionState> optimized = new global::Ludiq.InstanceFieldAccessor<MASelectable, MASelectable.SelectionState>(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(default(global::MASelectable));
			optimized.SetValue(default(global::MASelectable), default(global::MASelectable.SelectionState));
		}
		
		// MASelectable.OnManipulationEnded
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MASelectable_OnManipulationEnded()
		{
			global::MASelectable target = default(global::MASelectable);
			target.OnManipulationEnded();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::MASelectable));
			optimized.Invoke(default(object[]));
		}
		
		// MASelectable.OnManipulationStarted
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MASelectable_OnManipulationStarted()
		{
			global::MASelectable target = default(global::MASelectable);
			target.OnManipulationStarted();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::MASelectable));
			optimized.Invoke(default(object[]));
		}
		
		// MASelectable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MASelectable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MASelectable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MASelectable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MASelectable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MASelectable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MATKPointer.InvokeSelectionEvent
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MATKPointer_InvokeSelectionEvent()
		{
			global::MATKPointer target = default(global::MATKPointer);
			target.InvokeSelectionEvent();
			global::Ludiq.InstanceActionInvoker<MATKPointer> optimized = new global::Ludiq.InstanceActionInvoker<MATKPointer>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::MATKPointer));
			optimized.Invoke(default(object[]));
		}
		
		// MATKPointer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MATKPointer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MATKPointer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MATKPointer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MATKPointer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MATKPointer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MATKPointerManager.CurrentObjectOnFocus
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MATKPointerManager_CurrentObjectOnFocus()
		{
			global::MATKPointerManager target = default(global::MATKPointerManager);
			global::UnityEngine.GameObject accessor = target.CurrentObjectOnFocus;
			target.CurrentObjectOnFocus = default(global::UnityEngine.GameObject);
			global::Ludiq.InstancePropertyAccessor<MATKPointerManager, UnityEngine.GameObject> optimized = new global::Ludiq.InstancePropertyAccessor<MATKPointerManager, UnityEngine.GameObject>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::MATKPointerManager));
			optimized.SetValue(default(global::MATKPointerManager), default(global::UnityEngine.GameObject));
		}
		
		// MATKPointerManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MATKPointerManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MATKPointerManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MATKPointerManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MATKPointerManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MATKPointerManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MediaPlayerImage.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MediaPlayerImage_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MediaPlayerImage.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MediaPlayerImage_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MediaPlayerImage.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MediaPlayerImage_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MeshSequence.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshSequence_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MeshSequence.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshSequence_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MeshSequence.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshSequence_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MeshSequenceController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshSequenceController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MeshSequenceController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshSequenceController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MeshSequenceController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshSequenceController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MeshSequenceControllerImproved.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshSequenceControllerImproved_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MeshSequenceControllerImproved.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshSequenceControllerImproved_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MeshSequenceControllerImproved.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshSequenceControllerImproved_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MeshVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MeshVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MeshVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Audio.AudioInfluencerController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Audio_AudioInfluencerController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Audio.AudioInfluencerController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Audio_AudioInfluencerController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Audio.AudioInfluencerController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Audio_AudioInfluencerController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Audio.AudioLoFiEffect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Audio_AudioLoFiEffect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Audio.AudioLoFiEffect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Audio_AudioLoFiEffect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Audio.AudioLoFiEffect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Audio_AudioLoFiEffect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Audio.AudioOccluder.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Audio_AudioOccluder_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Audio.AudioOccluder.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Audio_AudioOccluder_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Audio.AudioOccluder.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Audio_AudioOccluder_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Boundary.MixedRealityBoundaryVisualizationProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Boundary_MixedRealityBoundaryVisualizationProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Boundary.MixedRealityBoundaryVisualizationProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Boundary_MixedRealityBoundaryVisualizationProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Boundary.MixedRealityBoundaryVisualizationProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Boundary_MixedRealityBoundaryVisualizationProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.CameraSystem.BaseCameraSettingsProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_CameraSystem_BaseCameraSettingsProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.CameraSystem.BaseCameraSettingsProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_CameraSystem_BaseCameraSettingsProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.CameraSystem.BaseCameraSettingsProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_CameraSystem_BaseCameraSettingsProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Diagnostics.DiagnosticsSystemVoiceControls.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Diagnostics_DiagnosticsSystemVoiceControls_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Diagnostics.DiagnosticsSystemVoiceControls.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Diagnostics_DiagnosticsSystemVoiceControls_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Diagnostics.DiagnosticsSystemVoiceControls.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Diagnostics_DiagnosticsSystemVoiceControls_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Diagnostics.MixedRealityDiagnosticsProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Diagnostics_MixedRealityDiagnosticsProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Diagnostics.MixedRealityDiagnosticsProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Diagnostics_MixedRealityDiagnosticsProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Diagnostics.MixedRealityDiagnosticsProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Diagnostics_MixedRealityDiagnosticsProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Diagnostics.MixedRealityToolkitVisualProfiler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Diagnostics_MixedRealityToolkitVisualProfiler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Diagnostics.MixedRealityToolkitVisualProfiler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Diagnostics_MixedRealityToolkitVisualProfiler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Diagnostics.MixedRealityToolkitVisualProfiler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Diagnostics_MixedRealityToolkitVisualProfiler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Diagnostics.VisualProfilerControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Diagnostics_VisualProfilerControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Diagnostics.VisualProfilerControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Diagnostics_VisualProfilerControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Diagnostics.VisualProfilerControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Diagnostics_VisualProfilerControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundaryVisualizationDemo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_BoundaryVisualizationDemo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundaryVisualizationDemo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_BoundaryVisualizationDemo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundaryVisualizationDemo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_BoundaryVisualizationDemo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundingBoxExampleTest.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_BoundingBoxExampleTest_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundingBoxExampleTest.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_BoundingBoxExampleTest_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundingBoxExampleTest.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_BoundingBoxExampleTest_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundsControlRuntimeExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_BoundsControlRuntimeExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundsControlRuntimeExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_BoundsControlRuntimeExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.BoundsControlRuntimeExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_BoundsControlRuntimeExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ChangeManipulation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ChangeManipulation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ChangeManipulation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ChangeManipulation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ChangeManipulation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ChangeManipulation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ClearSpatialObservations.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ClearSpatialObservations_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ClearSpatialObservations.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ClearSpatialObservations_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ClearSpatialObservations.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ClearSpatialObservations_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ColorChanger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ColorChanger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ColorChanger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ColorChanger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ColorChanger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ColorChanger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ColorChangerUnityUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ColorChangerUnityUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ColorChangerUnityUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ColorChangerUnityUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ColorChangerUnityUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ColorChangerUnityUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.DebugTextOutput.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_DebugTextOutput_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.DebugTextOutput.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_DebugTextOutput_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.DebugTextOutput.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_DebugTextOutput_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.DemoSpatialMeshHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_DemoSpatialMeshHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.DemoSpatialMeshHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_DemoSpatialMeshHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.DemoSpatialMeshHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_DemoSpatialMeshHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.DisablePointersExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_DisablePointersExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.DisablePointersExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_DisablePointersExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.DisablePointersExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_DisablePointersExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.AudioFeedbackPlayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_AudioFeedbackPlayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.AudioFeedbackPlayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_AudioFeedbackPlayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.AudioFeedbackPlayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_AudioFeedbackPlayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.BlendOut.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_BlendOut_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.BlendOut.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_BlendOut_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.BlendOut.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_BlendOut_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ChangeSize.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ChangeSize_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ChangeSize.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ChangeSize_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ChangeSize.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ChangeSize_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ColorTap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ColorTap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ColorTap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ColorTap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ColorTap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ColorTap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DoNotRender.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_DoNotRender_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DoNotRender.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_DoNotRender_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DoNotRender.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_DoNotRender_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DrawOnTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_DrawOnTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DrawOnTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_DrawOnTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DrawOnTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_DrawOnTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DwellSelection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_DwellSelection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DwellSelection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_DwellSelection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.DwellSelection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_DwellSelection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.EyeCalibrationChecker.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_EyeCalibrationChecker_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.EyeCalibrationChecker.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_EyeCalibrationChecker_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.EyeCalibrationChecker.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_EyeCalibrationChecker_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FaceUser.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_FaceUser_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FaceUser.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_FaceUser_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FaceUser.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_FaceUser_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FollowEyeGaze.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_FollowEyeGaze_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FollowEyeGaze.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_FollowEyeGaze_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FollowEyeGaze.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_FollowEyeGaze_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FollowEyeGazeGazeProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_FollowEyeGazeGazeProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FollowEyeGazeGazeProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_FollowEyeGazeGazeProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.FollowEyeGazeGazeProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_FollowEyeGazeGazeProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.HitBehaviorDestroyOnSelect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_HitBehaviorDestroyOnSelect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.HitBehaviorDestroyOnSelect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_HitBehaviorDestroyOnSelect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.HitBehaviorDestroyOnSelect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_HitBehaviorDestroyOnSelect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.LoadAdditiveScene.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_LoadAdditiveScene_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.LoadAdditiveScene.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_LoadAdditiveScene_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.LoadAdditiveScene.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_LoadAdditiveScene_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.LoadProfilesOnStartup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_LoadProfilesOnStartup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.LoadProfilesOnStartup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_LoadProfilesOnStartup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.LoadProfilesOnStartup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_LoadProfilesOnStartup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.InputPointerVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_InputPointerVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.InputPointerVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_InputPointerVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.InputPointerVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_InputPointerVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.LogStructure.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_LogStructure_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.LogStructure.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_LogStructure_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.LogStructure.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_LogStructure_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.LogStructureEyeGaze.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_LogStructureEyeGaze_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.LogStructureEyeGaze.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_LogStructureEyeGaze_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.LogStructureEyeGaze.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_LogStructureEyeGaze_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputPlayback.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_UserInputPlayback_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputPlayback.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_UserInputPlayback_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputPlayback.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_UserInputPlayback_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorder.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_UserInputRecorder_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorder.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_UserInputRecorder_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorder.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_UserInputRecorder_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_UserInputRecorderFeedback_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_UserInputRecorderFeedback_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_UserInputRecorderFeedback_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_UserInputRecorderUIController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_UserInputRecorderUIController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Logging_UserInputRecorderUIController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_MoveObjByEyeGaze_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_MoveObjByEyeGaze_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_MoveObjByEyeGaze_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveWithCamera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_MoveWithCamera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveWithCamera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_MoveWithCamera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveWithCamera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_MoveWithCamera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_OnLoadStartScene_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_OnLoadStartScene_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_OnLoadStartScene_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_OnLookAtRotateByEyeGaze_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_OnLookAtRotateByEyeGaze_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_OnLookAtRotateByEyeGaze_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_PanZoomBaseRectTransf_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_PanZoomBaseRectTransf_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_PanZoomBaseRectTransf_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_PanZoomBaseTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_PanZoomBaseTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_PanZoomBaseTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_PanZoomRectTransf_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_PanZoomRectTransf_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_PanZoomRectTransf_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_PanZoomTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_PanZoomTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_PanZoomTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ParticleHeatmap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ParticleHeatmap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ParticleHeatmap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.RotateWithConstSpeedDir.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_RotateWithConstSpeedDir_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.RotateWithConstSpeedDir.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_RotateWithConstSpeedDir_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.RotateWithConstSpeedDir.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_RotateWithConstSpeedDir_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ScrollRectTransf_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ScrollRectTransf_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ScrollRectTransf_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ScrollTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ScrollTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ScrollTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SnapTo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_SnapTo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SnapTo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_SnapTo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SnapTo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_SnapTo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_SpeechVisualFeedback_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_SpeechVisualFeedback_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_SpeechVisualFeedback_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TargetGroupCreatorRadial_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TargetGroupCreatorRadial_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TargetGroupCreatorRadial_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupIterator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TargetGroupIterator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupIterator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TargetGroupIterator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupIterator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TargetGroupIterator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Targeting.OnLookAtShowHoverFeedback.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Targeting_OnLookAtShowHoverFeedback_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Targeting.OnLookAtShowHoverFeedback.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Targeting_OnLookAtShowHoverFeedback_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Targeting.OnLookAtShowHoverFeedback.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_Targeting_OnLookAtShowHoverFeedback_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetMoveToCamera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TargetMoveToCamera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetMoveToCamera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TargetMoveToCamera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetMoveToCamera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TargetMoveToCamera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ToggleGameObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ToggleGameObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ToggleGameObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ToggleGameObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ToggleGameObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_ToggleGameObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TransportToRespawnLocation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TransportToRespawnLocation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TransportToRespawnLocation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TransportToRespawnLocation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TransportToRespawnLocation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TransportToRespawnLocation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TriggerOnStartup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TriggerOnStartup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TriggerOnStartup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TriggerOnStartup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TriggerOnStartup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TriggerOnStartup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TriggerZonePlaceObjsWithin.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TriggerZonePlaceObjsWithin_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TriggerZonePlaceObjsWithin.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TriggerZonePlaceObjsWithin_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TriggerZonePlaceObjsWithin.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_EyeTracking_TriggerZonePlaceObjsWithin_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.GridObjectLayoutControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_GridObjectLayoutControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.GridObjectLayoutControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_GridObjectLayoutControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.GridObjectLayoutControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_GridObjectLayoutControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.HandInteractionTouch.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_HandInteractionTouch_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.HandInteractionTouch.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_HandInteractionTouch_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.HandInteractionTouch.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_HandInteractionTouch_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.HandInteractionTouchRotate.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_HandInteractionTouchRotate_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.HandInteractionTouchRotate.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_HandInteractionTouchRotate_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.HandInteractionTouchRotate.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_HandInteractionTouchRotate_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.HideTapToPlaceLabel.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_HideTapToPlaceLabel_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.HideTapToPlaceLabel.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_HideTapToPlaceLabel_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.HideTapToPlaceLabel.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_HideTapToPlaceLabel_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.InputDataExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_InputDataExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.InputDataExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_InputDataExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.InputDataExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_InputDataExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.InputDataExampleGizmo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_InputDataExampleGizmo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.InputDataExampleGizmo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_InputDataExampleGizmo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.InputDataExampleGizmo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_InputDataExampleGizmo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.LaunchUri.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_LaunchUri_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.LaunchUri.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_LaunchUri_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.LaunchUri.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_LaunchUri_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.LeapCoreAssetsDetector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_LeapCoreAssetsDetector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.LeapCoreAssetsDetector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_LeapCoreAssetsDetector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.LeapCoreAssetsDetector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_LeapCoreAssetsDetector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.LoFiFilterSelection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_LoFiFilterSelection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.LoFiFilterSelection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_LoFiFilterSelection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.LoFiFilterSelection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_LoFiFilterSelection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.MixedRealityCapabilityDemo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_MixedRealityCapabilityDemo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.MixedRealityCapabilityDemo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_MixedRealityCapabilityDemo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.MixedRealityCapabilityDemo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_MixedRealityCapabilityDemo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.PrimaryPointerHandlerExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_PrimaryPointerHandlerExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.PrimaryPointerHandlerExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_PrimaryPointerHandlerExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.PrimaryPointerHandlerExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_PrimaryPointerHandlerExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ProgressIndicatorDemo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ProgressIndicatorDemo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ProgressIndicatorDemo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ProgressIndicatorDemo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ProgressIndicatorDemo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ProgressIndicatorDemo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ReturnToBounds.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ReturnToBounds_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ReturnToBounds.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ReturnToBounds_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ReturnToBounds.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ReturnToBounds_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.Rotator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_Rotator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.Rotator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_Rotator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.Rotator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_Rotator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ScrollableListPopulator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ScrollableListPopulator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ScrollableListPopulator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ScrollableListPopulator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ScrollableListPopulator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ScrollableListPopulator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ScrollablePagination.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ScrollablePagination_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ScrollablePagination.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ScrollablePagination_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ScrollablePagination.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ScrollablePagination_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ShowSliderValue.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ShowSliderValue_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ShowSliderValue.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ShowSliderValue_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ShowSliderValue.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ShowSliderValue_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SliderChangeColor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SliderChangeColor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SliderChangeColor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SliderChangeColor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SliderChangeColor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SliderChangeColor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SliderLunarLander.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SliderLunarLander_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SliderLunarLander.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SliderLunarLander_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SliderLunarLander.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SliderLunarLander_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SolverExampleManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SolverExampleManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SolverExampleManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SolverExampleManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SolverExampleManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SolverExampleManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SpawnOnPointerEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SpawnOnPointerEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SpawnOnPointerEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SpawnOnPointerEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SpawnOnPointerEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SpawnOnPointerEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.StandardShader.MaterialMatrix.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_StandardShader_MaterialMatrix_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.StandardShader.MaterialMatrix.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_StandardShader_MaterialMatrix_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.StandardShader.MaterialMatrix.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_StandardShader_MaterialMatrix_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SystemKeyboardExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SystemKeyboardExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SystemKeyboardExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SystemKeyboardExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.SystemKeyboardExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_SystemKeyboardExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.TetheredPlacement.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_TetheredPlacement_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.TetheredPlacement.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_TetheredPlacement_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.TetheredPlacement.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_TetheredPlacement_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ToggleGazeSource.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ToggleGazeSource_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ToggleGazeSource.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ToggleGazeSource_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ToggleGazeSource.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ToggleGazeSource_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ToggleSpatialMeshVisualization.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ToggleSpatialMeshVisualization_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ToggleSpatialMeshVisualization.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ToggleSpatialMeshVisualization_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Demos.ToggleSpatialMeshVisualization.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Demos_ToggleSpatialMeshVisualization_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Experimental.Demos.WidgetElasticDemo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Experimental_Demos_WidgetElasticDemo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Experimental.Demos.WidgetElasticDemo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Experimental_Demos_WidgetElasticDemo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Experimental.Demos.WidgetElasticDemo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Experimental_Demos_WidgetElasticDemo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Experimental.DialogTest.DialogExampleController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Experimental_DialogTest_DialogExampleController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Experimental.DialogTest.DialogExampleController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Experimental_DialogTest_DialogExampleController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Experimental.DialogTest.DialogExampleController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Experimental_DialogTest_DialogExampleController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Experimental.HandMenu.UpdateSliderTrackLine.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Experimental_HandMenu_UpdateSliderTrackLine_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Experimental.HandMenu.UpdateSliderTrackLine.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Experimental_HandMenu_UpdateSliderTrackLine_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.Experimental.HandMenu.UpdateSliderTrackLine.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_Experimental_HandMenu_UpdateSliderTrackLine_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.GestureTester.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_GestureTester_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.GestureTester.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_GestureTester_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.GestureTester.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_GestureTester_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.RotateWithPan.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_RotateWithPan_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.RotateWithPan.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_RotateWithPan_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Examples.RotateWithPan.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Examples_RotateWithPan_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.BaseServiceManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_BaseServiceManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.BaseServiceManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_BaseServiceManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.BaseServiceManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_BaseServiceManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Boundary.BoundarySystemManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Boundary_BoundarySystemManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Boundary.BoundarySystemManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Boundary_BoundarySystemManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Boundary.BoundarySystemManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Boundary_BoundarySystemManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.CameraSystem.CameraSystemManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_CameraSystem_CameraSystemManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.CameraSystem.CameraSystemManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_CameraSystem_CameraSystemManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.CameraSystem.CameraSystemManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_CameraSystem_CameraSystemManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.ColorPicker.ColorPicker.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_ColorPicker_ColorPicker_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.ColorPicker.ColorPicker.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_ColorPicker_ColorPicker_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.ColorPicker.ColorPicker.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_ColorPicker_ColorPicker_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Diagnostics.DiagnosticsSystemManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Diagnostics_DiagnosticsSystemManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Diagnostics.DiagnosticsSystemManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Diagnostics_DiagnosticsSystemManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Diagnostics.DiagnosticsSystemManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Diagnostics_DiagnosticsSystemManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dialog.DialogButton.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dialog_DialogButton_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dialog.DialogButton.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dialog_DialogButton_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dialog.DialogButton.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dialog_DialogButton_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dialog.DialogShell.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dialog_DialogShell_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dialog.DialogShell.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dialog_DialogShell_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dialog.DialogShell.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dialog_DialogShell_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.CustomDwellHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_CustomDwellHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.CustomDwellHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_CustomDwellHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.CustomDwellHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_CustomDwellHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_DwellHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_DwellHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_DwellHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_DwellProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_DwellProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_DwellProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellProfileWithDecay.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_DwellProfileWithDecay_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellProfileWithDecay.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_DwellProfileWithDecay_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.DwellProfileWithDecay.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_DwellProfileWithDecay_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.InstantDwellSample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_InstantDwellSample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.InstantDwellSample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_InstantDwellSample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.InstantDwellSample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_InstantDwellSample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.ListItemDwell.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_ListItemDwell_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.ListItemDwell.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_ListItemDwell_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.ListItemDwell.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_ListItemDwell_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.ToggleDwellSample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_ToggleDwellSample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.ToggleDwellSample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_ToggleDwellSample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Dwell.ToggleDwellSample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Dwell_ToggleDwellSample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Input.InputSystemManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Input_InputSystemManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Input.InputSystemManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Input_InputSystemManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Input.InputSystemManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Input_InputSystemManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Joystick.JoystickController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Joystick_JoystickController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Joystick.JoystickController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Joystick_JoystickController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Joystick.JoystickController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Joystick_JoystickController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Joystick.JoystickSliders.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Joystick_JoystickSliders_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Joystick.JoystickSliders.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Joystick_JoystickSliders_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Joystick.JoystickSliders.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Joystick_JoystickSliders_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticConfiguration.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Physics_ElasticConfiguration_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticConfiguration.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Physics_ElasticConfiguration_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticConfiguration.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Physics_ElasticConfiguration_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Physics_ElasticsManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Physics_ElasticsManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Physics_ElasticsManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.RiggedHandVisualizer.RiggedHandVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_RiggedHandVisualizer_RiggedHandVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.RiggedHandVisualizer.RiggedHandVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_RiggedHandVisualizer_RiggedHandVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.RiggedHandVisualizer.RiggedHandVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_RiggedHandVisualizer_RiggedHandVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.SpatialAwareness.SpatialAwarenessSystemManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_SpatialAwareness_SpatialAwarenessSystemManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.SpatialAwareness.SpatialAwarenessSystemManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_SpatialAwareness_SpatialAwarenessSystemManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.SpatialAwareness.SpatialAwarenessSystemManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_SpatialAwareness_SpatialAwarenessSystemManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.HandPulseLogic.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_SurfacePulse_HandPulseLogic_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.HandPulseLogic.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_SurfacePulse_HandPulseLogic_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.HandPulseLogic.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_SurfacePulse_HandPulseLogic_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.HideOnDevice.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_SurfacePulse_HideOnDevice_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.HideOnDevice.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_SurfacePulse_HideOnDevice_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.HideOnDevice.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_SurfacePulse_HideOnDevice_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.SurfacePulse.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_SurfacePulse_SurfacePulse_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.SurfacePulse.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_SurfacePulse_SurfacePulse_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse.SurfacePulse.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_SurfacePulse_SurfacePulse_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Teleport.TeleportSystemManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Teleport_TeleportSystemManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Teleport.TeleportSystemManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Teleport_TeleportSystemManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Teleport.TeleportSystemManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Teleport_TeleportSystemManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.AxisSlider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_AxisSlider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.AxisSlider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_AxisSlider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.AxisSlider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_AxisSlider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.CapsLockHighlight.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_CapsLockHighlight_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.CapsLockHighlight.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_CapsLockHighlight_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.CapsLockHighlight.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_CapsLockHighlight_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.Dock.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_Dock_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.Dock.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_Dock_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.Dock.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_Dock_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable.CanDock
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_Dockable_CanDock()
		{
			global::Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable target = default(global::Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable);
			bool accessor = target.CanDock;
			global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable, bool> optimized = new global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable.OnManipulationEnded
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_Dockable_OnManipulationEnded()
		{
			global::Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable target = default(global::Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable);
			target.OnManipulationEnded();
			global::Ludiq.InstanceActionInvoker<Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable> optimized = new global::Ludiq.InstanceActionInvoker<Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable));
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable.OnManipulationStarted
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_Dockable_OnManipulationStarted()
		{
			global::Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable target = default(global::Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable);
			target.OnManipulationStarted();
			global::Ludiq.InstanceActionInvoker<Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable> optimized = new global::Ludiq.InstanceActionInvoker<Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable));
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_Dockable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_Dockable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_Dockable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.DockPosition.DockedObject
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_DockPosition_DockedObject()
		{
			global::Microsoft.MixedReality.Toolkit.Experimental.UI.DockPosition target = default(global::Microsoft.MixedReality.Toolkit.Experimental.UI.DockPosition);
			global::Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable accessor = target.DockedObject;
			target.DockedObject = default(global::Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable);
			global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.Experimental.UI.DockPosition, Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable> optimized = new global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.Experimental.UI.DockPosition, Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Microsoft.MixedReality.Toolkit.Experimental.UI.DockPosition));
			optimized.SetValue(default(global::Microsoft.MixedReality.Toolkit.Experimental.UI.DockPosition), default(global::Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.DockPosition.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_DockPosition_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.DockPosition.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_DockPosition_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.DockPosition.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_DockPosition_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.HandCoach.MoveToTarget.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_HandCoach_MoveToTarget_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.HandCoach.MoveToTarget.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_HandCoach_MoveToTarget_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.HandCoach.MoveToTarget.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_HandCoach_MoveToTarget_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.HandCoach.RotateAroundPoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_HandCoach_RotateAroundPoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.HandCoach.RotateAroundPoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_HandCoach_RotateAroundPoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.HandCoach.RotateAroundPoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_HandCoach_RotateAroundPoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.HandInteractionHint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_HandInteractionHint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.HandInteractionHint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_HandInteractionHint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.HandInteractionHint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_HandInteractionHint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardKeyFunc.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_KeyboardKeyFunc_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardKeyFunc.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_KeyboardKeyFunc_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardKeyFunc.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_KeyboardKeyFunc_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardTest.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_KeyboardTest_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardTest.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_KeyboardTest_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardTest.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_KeyboardTest_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardValueKey.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_KeyboardValueKey_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardValueKey.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_KeyboardValueKey_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.KeyboardValueKey.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_KeyboardValueKey_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.MixedRealityKeyboard.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_MixedRealityKeyboard_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.MixedRealityKeyboard.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_MixedRealityKeyboard_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.MixedRealityKeyboard.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_MixedRealityKeyboard_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.MixedRealityKeyboardPreview.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_MixedRealityKeyboardPreview_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.MixedRealityKeyboardPreview.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_MixedRealityKeyboardPreview_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.MixedRealityKeyboardPreview.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_MixedRealityKeyboardPreview_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.NonNativeKeyboard.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_NonNativeKeyboard_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.NonNativeKeyboard.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_NonNativeKeyboard_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.NonNativeKeyboard.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_NonNativeKeyboard_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.NonNativeKeyboardTouchAssistant.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_NonNativeKeyboardTouchAssistant_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.NonNativeKeyboardTouchAssistant.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_NonNativeKeyboardTouchAssistant_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.NonNativeKeyboardTouchAssistant.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_NonNativeKeyboardTouchAssistant_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.SliderInputField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_SliderInputField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.SliderInputField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_SliderInputField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.SliderInputField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_SliderInputField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.SymbolDisableHighlight.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_SymbolDisableHighlight_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.SymbolDisableHighlight.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_SymbolDisableHighlight_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.SymbolDisableHighlight.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_SymbolDisableHighlight_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.SymbolKeyboard.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_SymbolKeyboard_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.SymbolKeyboard.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_SymbolKeyboard_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.SymbolKeyboard.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_SymbolKeyboard_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.TMP_KeyboardInputField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_TMP_KeyboardInputField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.TMP_KeyboardInputField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_TMP_KeyboardInputField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.TMP_KeyboardInputField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_TMP_KeyboardInputField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.UI_KeyboardInputField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_UI_KeyboardInputField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.UI_KeyboardInputField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_UI_KeyboardInputField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.UI_KeyboardInputField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_UI_KeyboardInputField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.UICollection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_UICollection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.UICollection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_UICollection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.UI.UICollection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_UI_UICollection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Utilities.DirectionalIndicator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Utilities_DirectionalIndicator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Utilities.DirectionalIndicator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Utilities_DirectionalIndicator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Utilities.DirectionalIndicator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Utilities_DirectionalIndicator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Utilities.Follow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Utilities_Follow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Utilities.Follow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Utilities_Follow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Utilities.Follow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Utilities_Follow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Utilities.Follow.SmoothTo
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Utilities_Follow_SmoothTo()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			float arg2 = default(float);
			float arg3 = default(float);
			global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.Solver.SmoothTo(arg0, arg1, arg2, arg3);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, float, float, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, float, float, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2, arg3);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Utilities.Follow.SmoothTo
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Utilities_Follow_SmoothTo_0()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			float arg2 = default(float);
			float arg3 = default(float);
			global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.Solver.SmoothTo(arg0, arg1, arg2, arg3);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, float, float, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, float, float, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2, arg3);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Utilities.StabilizationPlaneModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Utilities_StabilizationPlaneModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Utilities.StabilizationPlaneModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Utilities_StabilizationPlaneModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Utilities.StabilizationPlaneModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Utilities_StabilizationPlaneModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Utilities.WorldAnchorManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Utilities_WorldAnchorManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Utilities.WorldAnchorManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Utilities_WorldAnchorManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Experimental.Utilities.WorldAnchorManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Experimental_Utilities_WorldAnchorManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.AnimatedCursor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_AnimatedCursor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.AnimatedCursor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_AnimatedCursor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.AnimatedCursor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_AnimatedCursor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.BaseCursor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_BaseCursor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.BaseCursor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_BaseCursor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.BaseCursor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_BaseCursor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.BaseHandVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_BaseHandVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.BaseHandVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_BaseHandVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.BaseHandVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_BaseHandVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_ControllerPoseSynchronizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_ControllerPoseSynchronizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_ControllerPoseSynchronizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.CursorContextInfo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_CursorContextInfo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.CursorContextInfo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_CursorContextInfo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.CursorContextInfo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_CursorContextInfo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.CursorModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_CursorModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.CursorModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_CursorModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.CursorModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_CursorModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.CurvePointer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_CurvePointer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.CurvePointer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_CurvePointer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.CurvePointer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_CurvePointer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.DictationHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_DictationHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.DictationHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_DictationHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.DictationHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_DictationHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_EyeTrackingTarget_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_EyeTrackingTarget_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_EyeTrackingTarget_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.FingerCursor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_FingerCursor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.FingerCursor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_FingerCursor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.FingerCursor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_FingerCursor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.FocusHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_FocusHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.FocusHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_FocusHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.FocusHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_FocusHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.GGVPointer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_GGVPointer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.GGVPointer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_GGVPointer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.GGVPointer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_GGVPointer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.HandBounds.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_HandBounds_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.HandBounds.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_HandBounds_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.HandBounds.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_HandBounds_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.InputActionHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_InputActionHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.InputActionHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_InputActionHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.InputActionHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_InputActionHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_InputSimulationIndicators_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_InputSimulationIndicators_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_InputSimulationIndicators_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_InteractiveMeshCursor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_InteractiveMeshCursor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_InteractiveMeshCursor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.LinePointer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_LinePointer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.LinePointer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_LinePointer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.LinePointer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_LinePointer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MeshCursor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MeshCursor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MeshCursor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MeshCursor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MeshCursor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MeshCursor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityControllerMappingProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityControllerMappingProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityControllerMappingProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizationProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityControllerVisualizationProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizationProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityControllerVisualizationProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizationProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityControllerVisualizationProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityControllerVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityControllerVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityControllerVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityEyeTrackingProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityEyeTrackingProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityEyeTrackingProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityEyeTrackingProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityEyeTrackingProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityEyeTrackingProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityGesturesProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityGesturesProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityGesturesProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityHandTrackingProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityHandTrackingProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityHandTrackingProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionRulesProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityInputActionRulesProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionRulesProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityInputActionRulesProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionRulesProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityInputActionRulesProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionsProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityInputActionsProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionsProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityInputActionsProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionsProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityInputActionsProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityInputSystemProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityInputSystemProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityInputSystemProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityMouseInputProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityMouseInputProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityMouseInputProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityPointerProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityPointerProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealityPointerProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealitySpeechCommandsProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealitySpeechCommandsProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MixedRealitySpeechCommandsProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MousePointer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MousePointer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MousePointer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MousePointer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.MousePointer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_MousePointer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.ObjectCursor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_ObjectCursor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.ObjectCursor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_ObjectCursor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.ObjectCursor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_ObjectCursor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.PointerHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_PointerHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.PointerHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_PointerHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.PointerHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_PointerHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.PokePointer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_PokePointer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.PokePointer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_PokePointer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.PokePointer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_PokePointer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_ScreenSpaceMousePointer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_ScreenSpaceMousePointer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_ScreenSpaceMousePointer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_ShellHandRayPointer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_ShellHandRayPointer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_ShellHandRayPointer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpeechInputHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpeechInputHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpeechInputHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpherePointer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpherePointer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpherePointer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpherePointer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpherePointer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpherePointer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpherePointerGrabPoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpherePointerGrabPoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpherePointerGrabPoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpherePointerVisual_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpherePointerVisual_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpherePointerVisual_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpriteCursor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpriteCursor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpriteCursor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpriteCursor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.SpriteCursor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_SpriteCursor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.TouchHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_TouchHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.TouchHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_TouchHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.TouchHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_TouchHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.TouchPointer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_TouchPointer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.TouchPointer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_TouchPointer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.TouchPointer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_TouchPointer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.WindowsMixedRealityControllerVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_WindowsMixedRealityControllerVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.WindowsMixedRealityControllerVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_WindowsMixedRealityControllerVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Input.WindowsMixedRealityControllerVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Input_WindowsMixedRealityControllerVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.MixedRealityCameraProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_MixedRealityCameraProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.MixedRealityCameraProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_MixedRealityCameraProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.MixedRealityCameraProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_MixedRealityCameraProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.MixedRealityRegisteredServiceProvidersProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_MixedRealityRegisteredServiceProvidersProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.MixedRealityRegisteredServiceProvidersProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_MixedRealityRegisteredServiceProvidersProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.MixedRealityRegisteredServiceProvidersProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_MixedRealityRegisteredServiceProvidersProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.MixedRealityToolkit.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_MixedRealityToolkit_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.MixedRealityToolkit.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_MixedRealityToolkit_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.MixedRealityToolkit.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_MixedRealityToolkit_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.MixedRealityToolkitConfigurationProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_MixedRealityToolkitConfigurationProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.MixedRealityToolkitConfigurationProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_MixedRealityToolkitConfigurationProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.MixedRealityToolkitConfigurationProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_MixedRealityToolkitConfigurationProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.PhysicalPressEventRouter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_PhysicalPressEventRouter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.PhysicalPressEventRouter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_PhysicalPressEventRouter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.PhysicalPressEventRouter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_PhysicalPressEventRouter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterBulge.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterBulge_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterBulge.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterBulge_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterBulge.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterBulge_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterGravity.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterGravity_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterGravity.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterGravity_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterGravity.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterGravity_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterSimplex.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterSimplex_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterSimplex.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterSimplex_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterSimplex.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterSimplex_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterSphere.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterSphere_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterSphere.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterSphere_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterSphere.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterSphere_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterWiggly.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterWiggly_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterWiggly.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterWiggly_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.DistorterWiggly.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_DistorterWiggly_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.Interpolator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_Interpolator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.Interpolator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_Interpolator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Physics.Interpolator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Physics_Interpolator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Rendering.DepthBufferRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Rendering_DepthBufferRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Rendering.DepthBufferRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Rendering_DepthBufferRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Rendering.DepthBufferRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Rendering_DepthBufferRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Rendering.MaterialInstance.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Rendering_MaterialInstance_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Rendering.MaterialInstance.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Rendering_MaterialInstance_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Rendering.MaterialInstance.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Rendering_MaterialInstance_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.SceneSystem.MixedRealitySceneSystemProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_SceneSystem_MixedRealitySceneSystemProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.SceneSystem.MixedRealitySceneSystemProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_SceneSystem_MixedRealitySceneSystemProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.SceneSystem.MixedRealitySceneSystemProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_SceneSystem_MixedRealitySceneSystemProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.SpatialAwareness.MixedRealitySpatialAwarenessMeshObserverProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_SpatialAwareness_MixedRealitySpatialAwarenessMeshObserverProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.SpatialAwareness.MixedRealitySpatialAwarenessMeshObserverProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_SpatialAwareness_MixedRealitySpatialAwarenessMeshObserverProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.SpatialAwareness.MixedRealitySpatialAwarenessMeshObserverProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_SpatialAwareness_MixedRealitySpatialAwarenessMeshObserverProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.SpatialAwareness.MixedRealitySpatialAwarenessSystemProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_SpatialAwareness_MixedRealitySpatialAwarenessSystemProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.SpatialAwareness.MixedRealitySpatialAwarenessSystemProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_SpatialAwareness_MixedRealitySpatialAwarenessSystemProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.SpatialAwareness.MixedRealitySpatialAwarenessSystemProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_SpatialAwareness_MixedRealitySpatialAwarenessSystemProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.SubmitEventRouter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_SubmitEventRouter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.SubmitEventRouter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_SubmitEventRouter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.SubmitEventRouter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_SubmitEventRouter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Teleport.ParabolicTeleportPointer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Teleport_ParabolicTeleportPointer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Teleport.ParabolicTeleportPointer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Teleport_ParabolicTeleportPointer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Teleport.ParabolicTeleportPointer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Teleport_ParabolicTeleportPointer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Teleport.TeleportCursor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Teleport_TeleportCursor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Teleport.TeleportCursor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Teleport_TeleportCursor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Teleport.TeleportCursor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Teleport_TeleportCursor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Teleport.TeleportHotSpot.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Teleport_TeleportHotSpot_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Teleport.TeleportHotSpot.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Teleport_TeleportHotSpot_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Teleport.TeleportHotSpot.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Teleport_TeleportHotSpot_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Teleport.TeleportPointer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Teleport_TeleportPointer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Teleport.TeleportPointer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Teleport_TeleportPointer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Teleport.TeleportPointer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Teleport_TeleportPointer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.AppBar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_AppBar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.AppBar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_AppBar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.AppBar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_AppBar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.AppBarButton.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_AppBarButton_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.AppBarButton.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_AppBarButton_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.AppBarButton.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_AppBarButton_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.Billboard.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_Billboard_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.Billboard.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_Billboard_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.Billboard.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_Billboard_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundingBox.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundingBox_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundingBox.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundingBox_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundingBox.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundingBox_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_BoundsControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_BoundsControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_BoundsControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_BoxDisplayConfiguration_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_BoxDisplayConfiguration_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_BoxDisplayConfiguration_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_LinksConfiguration_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_LinksConfiguration_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_LinksConfiguration_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_ProximityEffectConfiguration_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_ProximityEffectConfiguration_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_ProximityEffectConfiguration_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandlesConfiguration.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_RotationHandlesConfiguration_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandlesConfiguration.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_RotationHandlesConfiguration_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandlesConfiguration.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_RotationHandlesConfiguration_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_ScaleHandlesConfiguration_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_ScaleHandlesConfiguration_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_ScaleHandlesConfiguration_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandlesConfiguration.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_TranslationHandlesConfiguration_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandlesConfiguration.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_TranslationHandlesConfiguration_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandlesConfiguration.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_BoundsControl_TranslationHandlesConfiguration_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonBorder.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonBorder_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonBorder.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonBorder_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonBorder.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonBorder_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonConfigHelper.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonConfigHelper_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonConfigHelper.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonConfigHelper_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonConfigHelper.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonConfigHelper_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonIconSet.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonIconSet_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonIconSet.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonIconSet_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonIconSet.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonIconSet_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonLayout.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonLayout_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonLayout.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonLayout_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonLayout.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonLayout_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonSize.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonSize_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonSize.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonSize_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonSize.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonSize_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonSizeOffset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonSizeOffset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonSizeOffset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonSizeOffset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ButtonSizeOffset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ButtonSizeOffset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ConstraintManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ConstraintManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ConstraintManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ConstraintManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ConstraintManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ConstraintManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.CursorContextManipulationHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_CursorContextManipulationHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.CursorContextManipulationHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_CursorContextManipulationHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.CursorContextManipulationHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_CursorContextManipulationHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.CursorContextObjectManipulator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_CursorContextObjectManipulator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.CursorContextObjectManipulator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_CursorContextObjectManipulator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.CursorContextObjectManipulator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_CursorContextObjectManipulator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.DestroyOnAnimationComplete.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_DestroyOnAnimationComplete_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.DestroyOnAnimationComplete.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_DestroyOnAnimationComplete_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.DestroyOnAnimationComplete.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_DestroyOnAnimationComplete_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FaceUserConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FaceUserConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FaceUserConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FaceUserConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FaceUserConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FaceUserConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FixedDistanceConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FixedDistanceConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FixedDistanceConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FixedDistanceConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FixedDistanceConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FixedDistanceConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FixedRotationToUserConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FixedRotationToUserConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FixedRotationToUserConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FixedRotationToUserConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FixedRotationToUserConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FixedRotationToUserConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FixedRotationToWorldConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FixedRotationToWorldConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FixedRotationToWorldConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FixedRotationToWorldConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FixedRotationToWorldConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FixedRotationToWorldConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FollowMeToggle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FollowMeToggle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FollowMeToggle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FollowMeToggle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.FollowMeToggle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_FollowMeToggle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.HandInteractionPanZoom.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_HandInteractionPanZoom_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.HandInteractionPanZoom.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_HandInteractionPanZoom_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.HandInteractionPanZoom.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_HandInteractionPanZoom_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InputRecordingControls.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InputRecordingControls_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InputRecordingControls.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InputRecordingControls_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InputRecordingControls.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InputRecordingControls_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.Interactable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_Interactable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.Interactable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_Interactable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.Interactable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_Interactable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractableOnFocus.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractableOnFocus_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractableOnFocus.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractableOnFocus_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractableOnFocus.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractableOnFocus_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractablePointerSimulator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractablePointerSimulator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractablePointerSimulator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractablePointerSimulator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractablePointerSimulator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractablePointerSimulator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractableReceiver.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractableReceiver_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractableReceiver.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractableReceiver_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractableReceiver.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractableReceiver_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractableReceiverList.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractableReceiverList_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractableReceiverList.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractableReceiverList_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractableReceiverList.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractableReceiverList_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractableToggleCollection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractableToggleCollection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractableToggleCollection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractableToggleCollection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.InteractableToggleCollection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_InteractableToggleCollection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.LoaderController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_LoaderController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.LoaderController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_LoaderController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.LoaderController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_LoaderController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.MaintainApparentSizeConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_MaintainApparentSizeConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.MaintainApparentSizeConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_MaintainApparentSizeConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.MaintainApparentSizeConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_MaintainApparentSizeConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ManipulationHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ManipulationHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ManipulationHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ManipulationHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ManipulationHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ManipulationHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_MinMaxScaleConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_MinMaxScaleConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_MinMaxScaleConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_MoveAxisConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_MoveAxisConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_MoveAxisConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ObjectManipulator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ObjectManipulator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ObjectManipulator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PinchSlider.CurrentSliderAxis
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PinchSlider_CurrentSliderAxis()
		{
			global::Microsoft.MixedReality.Toolkit.UI.PinchSlider target = default(global::Microsoft.MixedReality.Toolkit.UI.PinchSlider);
			global::Microsoft.MixedReality.Toolkit.UI.SliderAxis accessor = target.CurrentSliderAxis;
			target.CurrentSliderAxis = default(global::Microsoft.MixedReality.Toolkit.UI.SliderAxis);
			global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.UI.PinchSlider, Microsoft.MixedReality.Toolkit.UI.SliderAxis> optimized = new global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.UI.PinchSlider, Microsoft.MixedReality.Toolkit.UI.SliderAxis>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Microsoft.MixedReality.Toolkit.UI.PinchSlider));
			optimized.SetValue(default(global::Microsoft.MixedReality.Toolkit.UI.PinchSlider), default(global::Microsoft.MixedReality.Toolkit.UI.SliderAxis));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PinchSlider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PinchSlider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PinchSlider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PinchSlider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PinchSlider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PinchSlider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PinchSlider.SliderEndPosition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PinchSlider_SliderEndPosition()
		{
			global::Microsoft.MixedReality.Toolkit.UI.PinchSlider target = default(global::Microsoft.MixedReality.Toolkit.UI.PinchSlider);
			global::UnityEngine.Vector3 accessor = target.SliderEndPosition;
			target.SliderEndPosition = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.UI.PinchSlider, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.UI.PinchSlider, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Microsoft.MixedReality.Toolkit.UI.PinchSlider));
			optimized.SetValue(default(global::Microsoft.MixedReality.Toolkit.UI.PinchSlider), default(global::UnityEngine.Vector3));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PinchSlider.SliderStartPosition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PinchSlider_SliderStartPosition()
		{
			global::Microsoft.MixedReality.Toolkit.UI.PinchSlider target = default(global::Microsoft.MixedReality.Toolkit.UI.PinchSlider);
			global::UnityEngine.Vector3 accessor = target.SliderStartPosition;
			target.SliderStartPosition = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.UI.PinchSlider, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.UI.PinchSlider, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Microsoft.MixedReality.Toolkit.UI.PinchSlider));
			optimized.SetValue(default(global::Microsoft.MixedReality.Toolkit.UI.PinchSlider), default(global::UnityEngine.Vector3));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PinchSlider.SliderValue
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PinchSlider_SliderValue()
		{
			global::Microsoft.MixedReality.Toolkit.UI.PinchSlider target = default(global::Microsoft.MixedReality.Toolkit.UI.PinchSlider);
			float accessor = target.SliderValue;
			target.SliderValue = default(float);
			global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.UI.PinchSlider, float> optimized = new global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.UI.PinchSlider, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Microsoft.MixedReality.Toolkit.UI.PinchSlider));
			optimized.SetValue(default(global::Microsoft.MixedReality.Toolkit.UI.PinchSlider), default(float));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PointerBehaviorControls_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PointerBehaviorControls_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PointerBehaviorControls_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PrefabSpawner_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PrefabSpawner_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PrefabSpawner_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PressableButton.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PressableButton_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PressableButton.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PressableButton_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PressableButton.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PressableButton_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PressableButtonHoloLens2_ctor()
		{
			new Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2();
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PressableButtonHoloLens2_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PressableButtonHoloLens2_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_PressableButtonHoloLens2_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorLoadingBar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ProgressIndicatorLoadingBar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorLoadingBar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ProgressIndicatorLoadingBar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorLoadingBar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ProgressIndicatorLoadingBar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorObjectDisplay.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ProgressIndicatorObjectDisplay_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorObjectDisplay.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ProgressIndicatorObjectDisplay_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorObjectDisplay.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ProgressIndicatorObjectDisplay_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorOrbsRotator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ProgressIndicatorOrbsRotator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorOrbsRotator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ProgressIndicatorOrbsRotator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ProgressIndicatorOrbsRotator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ProgressIndicatorOrbsRotator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ReceiverBaseMonoBehavior.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ReceiverBaseMonoBehavior_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ReceiverBaseMonoBehavior.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ReceiverBaseMonoBehavior_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ReceiverBaseMonoBehavior.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ReceiverBaseMonoBehavior_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.RotationAxisConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_RotationAxisConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.RotationAxisConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_RotationAxisConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.RotationAxisConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_RotationAxisConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ScrollingObjectCollection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ScrollingObjectCollection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ScrollingObjectCollection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ScrollingObjectCollection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ScrollingObjectCollection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ScrollingObjectCollection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.SliderSounds.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_SliderSounds_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.SliderSounds.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_SliderSounds_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.SliderSounds.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_SliderSounds_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_SpeechConfirmationTooltip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_SpeechConfirmationTooltip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_SpeechConfirmationTooltip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.States.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_States_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.States.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_States_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.States.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_States_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.Theme.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_Theme_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.Theme.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_Theme_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.Theme.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_Theme_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToggleHandVisualisation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToggleHandVisualisation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToggleHandVisualisation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToggleHandVisualisation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToggleHandVisualisation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToggleHandVisualisation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundBlob.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipBackgroundBlob_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundBlob.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipBackgroundBlob_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundBlob.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipBackgroundBlob_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundCorners.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipBackgroundCorners_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundCorners.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipBackgroundCorners_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundCorners.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipBackgroundCorners_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipBackgroundMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipBackgroundMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipBackgroundMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipBackgroundMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipConnector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipConnector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipConnector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipConnector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipConnector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipConnector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipLineHighlight.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipLineHighlight_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipLineHighlight.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipLineHighlight_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipLineHighlight.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipLineHighlight_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipSpawner.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipSpawner_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipSpawner.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipSpawner_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.UI.ToolTipSpawner.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_UI_ToolTipSpawner_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.BezierDataProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_BezierDataProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.BezierDataProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_BezierDataProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.BezierDataProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_BezierDataProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.BezierInertia.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_BezierInertia_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.BezierInertia.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_BezierInertia_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.BezierInertia.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_BezierInertia_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.CameraEventRouter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_CameraEventRouter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.CameraEventRouter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_CameraEventRouter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.CameraEventRouter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_CameraEventRouter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ClippingBox.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ClippingBox_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ClippingBox.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ClippingBox_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ClippingBox.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ClippingBox_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ClippingPlane.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ClippingPlane_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ClippingPlane.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ClippingPlane_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ClippingPlane.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ClippingPlane_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ClippingSphere.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ClippingSphere_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ClippingSphere.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ClippingSphere_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ClippingSphere.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ClippingSphere_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.EllipseLineDataProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_EllipseLineDataProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.EllipseLineDataProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_EllipseLineDataProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.EllipseLineDataProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_EllipseLineDataProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Facades.ServiceFacade.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Facades_ServiceFacade_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Facades.ServiceFacade.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Facades_ServiceFacade_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Facades.ServiceFacade.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Facades_ServiceFacade_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_GridObjectCollection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_GridObjectCollection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_GridObjectCollection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.HeadPositionOffset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_HeadPositionOffset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.HeadPositionOffset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_HeadPositionOffset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.HeadPositionOffset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_HeadPositionOffset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.HoverLight.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_HoverLight_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.HoverLight.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_HoverLight_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.HoverLight.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_HoverLight_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.LineFollower.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_LineFollower_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.LineFollower.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_LineFollower_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.LineFollower.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_LineFollower_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MaintainBorderLightWidth.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MaintainBorderLightWidth_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MaintainBorderLightWidth.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MaintainBorderLightWidth_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MaintainBorderLightWidth.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MaintainBorderLightWidth_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MeshLineRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MeshLineRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MeshLineRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MeshLineRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MeshLineRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MeshLineRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MeshOutline.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MeshOutline_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MeshOutline.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MeshOutline_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MeshOutline.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MeshOutline_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MeshOutlineHierarchy.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MeshOutlineHierarchy_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MeshOutlineHierarchy.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MeshOutlineHierarchy_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MeshOutlineHierarchy.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MeshOutlineHierarchy_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MeshSmoother.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MeshSmoother_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MeshSmoother.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MeshSmoother_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MeshSmoother.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MeshSmoother_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MixedRealityLineRenderer_enabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
			optimized.SetValue(default(global::UnityEngine.Behaviour), default(bool));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MixedRealityLineRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MixedRealityLineRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_MixedRealityLineRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ParabolaConstrainedLineDataProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ParabolaConstrainedLineDataProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ParabolaConstrainedLineDataProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ParabolaConstrainedLineDataProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ParabolaConstrainedLineDataProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ParabolaConstrainedLineDataProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ParabolaPhysicalLineDataProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ParabolaPhysicalLineDataProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ParabolaPhysicalLineDataProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ParabolaPhysicalLineDataProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ParabolaPhysicalLineDataProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ParabolaPhysicalLineDataProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ParticleSystemLineRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ParticleSystemLineRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ParticleSystemLineRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ParticleSystemLineRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ParticleSystemLineRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ParticleSystemLineRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ProximityLight.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ProximityLight_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ProximityLight.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ProximityLight_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ProximityLight.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ProximityLight_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.RectangleLineDataProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_RectangleLineDataProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.RectangleLineDataProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_RectangleLineDataProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.RectangleLineDataProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_RectangleLineDataProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.RectTransformCubeScaler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_RectTransformCubeScaler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.RectTransformCubeScaler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_RectTransformCubeScaler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.RectTransformCubeScaler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_RectTransformCubeScaler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ScatterObjectCollection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ScatterObjectCollection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ScatterObjectCollection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ScatterObjectCollection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.ScatterObjectCollection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_ScatterObjectCollection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.SimpleLineDataProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_SimpleLineDataProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.SimpleLineDataProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_SimpleLineDataProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.SimpleLineDataProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_SimpleLineDataProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.ConstantViewSize.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_ConstantViewSize_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.ConstantViewSize.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_ConstantViewSize_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.ConstantViewSize.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_ConstantViewSize_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_HandConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_HandConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_HandConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraintPalmUp.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_HandConstraintPalmUp_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraintPalmUp.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_HandConstraintPalmUp_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraintPalmUp.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_HandConstraintPalmUp_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.InBetween.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_InBetween_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.InBetween.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_InBetween_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.InBetween.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_InBetween_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Momentum.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_Momentum_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Momentum.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_Momentum_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Momentum.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_Momentum_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_Orbital_enabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
			optimized.SetValue(default(global::UnityEngine.Behaviour), default(bool));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital.LocalOffset
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_Orbital_LocalOffset()
		{
			global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital target = default(global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital);
			global::UnityEngine.Vector3 accessor = target.LocalOffset;
			target.LocalOffset = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital));
			optimized.SetValue(default(global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital), default(global::UnityEngine.Vector3));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_Orbital_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_Orbital_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Orbital.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_Orbital_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Overlap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_Overlap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Overlap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_Overlap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.Overlap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_Overlap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_RadialView_ctor()
		{
			new Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView();
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_RadialView_enabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
			optimized.SetValue(default(global::UnityEngine.Behaviour), default(bool));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView.MaxDistance
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_RadialView_MaxDistance()
		{
			global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView target = default(global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView);
			float accessor = target.MaxDistance;
			target.MaxDistance = default(float);
			global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView, float> optimized = new global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView));
			optimized.SetValue(default(global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView), default(float));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView.MinDistance
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_RadialView_MinDistance()
		{
			global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView target = default(global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView);
			float accessor = target.MinDistance;
			target.MinDistance = default(float);
			global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView, float> optimized = new global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView));
			optimized.SetValue(default(global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView), default(float));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView.MoveLerpTime
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_RadialView_MoveLerpTime()
		{
			global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.Solver target = default(global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.Solver);
			float accessor = target.MoveLerpTime;
			target.MoveLerpTime = default(float);
			global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.Utilities.Solvers.Solver, float> optimized = new global::Ludiq.InstancePropertyAccessor<Microsoft.MixedReality.Toolkit.Utilities.Solvers.Solver, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.Solver));
			optimized.SetValue(default(global::Microsoft.MixedReality.Toolkit.Utilities.Solvers.Solver), default(float));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_RadialView_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_RadialView_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.RadialView.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_RadialView_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.SolverHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_SolverHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.SolverHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_SolverHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.SolverHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_SolverHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.SurfaceMagnetism.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_SurfaceMagnetism_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.SurfaceMagnetism.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_SurfaceMagnetism_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.SurfaceMagnetism.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_SurfaceMagnetism_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.TapToPlace.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_TapToPlace_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.TapToPlace.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_TapToPlace_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.Solvers.TapToPlace.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_Solvers_TapToPlace_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.SplineDataProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_SplineDataProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.SplineDataProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_SplineDataProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.SplineDataProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_SplineDataProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.StripMeshLineRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_StripMeshLineRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.StripMeshLineRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_StripMeshLineRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.StripMeshLineRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_StripMeshLineRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.TileGridObjectCollection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_TileGridObjectCollection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.TileGridObjectCollection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_TileGridObjectCollection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Microsoft.MixedReality.Toolkit.Utilities.TileGridObjectCollection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Microsoft_MixedReality_Toolkit_Utilities_TileGridObjectCollection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MouseLook.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MouseLook_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MouseLook.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MouseLook_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MouseLook.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MouseLook_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MoviePlayerSample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MoviePlayerSample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MoviePlayerSample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MoviePlayerSample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MoviePlayerSample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MoviePlayerSample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MoviePlayerSampleControls.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MoviePlayerSampleControls_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MoviePlayerSampleControls.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MoviePlayerSampleControls_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MoviePlayerSampleControls.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MoviePlayerSampleControls_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// mParent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void mParent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// mParent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void mParent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// mParent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void mParent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NavigationSync.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NavigationSync_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NavigationSync.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NavigationSync_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// NavigationSync.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NavigationSync_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NavMeshConverter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NavMeshConverter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NavMeshConverter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NavMeshConverter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// NavMeshConverter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NavMeshConverter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NewTriggers.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NewTriggers_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NewTriggers.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NewTriggers_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// NewTriggers.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NewTriggers_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.AudioOutput.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_AudioOutput_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.AudioOutput.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_AudioOutput_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.AudioOutput.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_AudioOutput_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.AudioPreprocessorPlaybackListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_AudioPreprocessorPlaybackListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.AudioPreprocessorPlaybackListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_AudioPreprocessorPlaybackListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.AudioPreprocessorPlaybackListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_AudioPreprocessorPlaybackListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.CubePlayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_CubePlayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.CubePlayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_CubePlayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.CubePlayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_CubePlayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.CubePlayerManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_CubePlayerManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.CubePlayerManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_CubePlayerManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.CubePlayerManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_CubePlayerManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.HoverbirdPlayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_HoverbirdPlayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.HoverbirdPlayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_HoverbirdPlayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.HoverbirdPlayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_HoverbirdPlayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.HoverbirdPlayerManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_HoverbirdPlayerManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.HoverbirdPlayerManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_HoverbirdPlayerManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.HoverbirdPlayerManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_HoverbirdPlayerManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.VoiceMouthMove.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_VoiceMouthMove_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.VoiceMouthMove.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_VoiceMouthMove_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Examples.VoiceMouthMove.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Examples_VoiceMouthMove_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatar.head
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatar_head()
		{
			global::Normal.Realtime.RealtimeAvatar target = default(global::Normal.Realtime.RealtimeAvatar);
			global::UnityEngine.Transform accessor = target.head;
			global::Ludiq.InstancePropertyAccessor<Normal.Realtime.RealtimeAvatar, UnityEngine.Transform> optimized = new global::Ludiq.InstancePropertyAccessor<Normal.Realtime.RealtimeAvatar, UnityEngine.Transform>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Normal.Realtime.RealtimeAvatar));
		}
		
		// Normal.Realtime.RealtimeAvatar.isOwnedLocallyInHierarchy
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatar_isOwnedLocallyInHierarchy()
		{
			global::Normal.Realtime.RealtimeComponent<Normal.Realtime.RealtimeAvatarModel> target = default(global::Normal.Realtime.RealtimeComponent<Normal.Realtime.RealtimeAvatarModel>);
			bool accessor = target.isOwnedLocallyInHierarchy;
			global::Ludiq.InstancePropertyAccessor<Normal.Realtime.RealtimeComponent<Normal.Realtime.RealtimeAvatarModel>, bool> optimized = new global::Ludiq.InstancePropertyAccessor<Normal.Realtime.RealtimeComponent<Normal.Realtime.RealtimeAvatarModel>, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Normal.Realtime.RealtimeComponent<Normal.Realtime.RealtimeAvatarModel>));
		}
		
		// Normal.Realtime.RealtimeAvatar.leftHand
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatar_leftHand()
		{
			global::Normal.Realtime.RealtimeAvatar target = default(global::Normal.Realtime.RealtimeAvatar);
			global::UnityEngine.Transform accessor = target.leftHand;
			global::Ludiq.InstancePropertyAccessor<Normal.Realtime.RealtimeAvatar, UnityEngine.Transform> optimized = new global::Ludiq.InstancePropertyAccessor<Normal.Realtime.RealtimeAvatar, UnityEngine.Transform>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Normal.Realtime.RealtimeAvatar));
		}
		
		// Normal.Realtime.RealtimeAvatar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatar.ownerIDInHierarchy
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatar_ownerIDInHierarchy()
		{
			global::Normal.Realtime.RealtimeComponent<Normal.Realtime.RealtimeAvatarModel> target = default(global::Normal.Realtime.RealtimeComponent<Normal.Realtime.RealtimeAvatarModel>);
			int accessor = target.ownerIDInHierarchy;
			global::Ludiq.InstancePropertyAccessor<Normal.Realtime.RealtimeComponent<Normal.Realtime.RealtimeAvatarModel>, int> optimized = new global::Ludiq.InstancePropertyAccessor<Normal.Realtime.RealtimeComponent<Normal.Realtime.RealtimeAvatarModel>, int>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Normal.Realtime.RealtimeComponent<Normal.Realtime.RealtimeAvatarModel>));
		}
		
		// Normal.Realtime.RealtimeAvatar.rightHand
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatar_rightHand()
		{
			global::Normal.Realtime.RealtimeAvatar target = default(global::Normal.Realtime.RealtimeAvatar);
			global::UnityEngine.Transform accessor = target.rightHand;
			global::Ludiq.InstancePropertyAccessor<Normal.Realtime.RealtimeAvatar, UnityEngine.Transform> optimized = new global::Ludiq.InstancePropertyAccessor<Normal.Realtime.RealtimeAvatar, UnityEngine.Transform>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Normal.Realtime.RealtimeAvatar));
		}
		
		// Normal.Realtime.RealtimeAvatarEditor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarEditor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatarEditor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarEditor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatarEditor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarEditor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatarManager.localAvatar
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarManager_localAvatar()
		{
			global::Normal.Realtime.RealtimeAvatarManager target = default(global::Normal.Realtime.RealtimeAvatarManager);
			global::Normal.Realtime.RealtimeAvatar accessor = target.localAvatar;
			global::Ludiq.InstancePropertyAccessor<Normal.Realtime.RealtimeAvatarManager, Normal.Realtime.RealtimeAvatar> optimized = new global::Ludiq.InstancePropertyAccessor<Normal.Realtime.RealtimeAvatarManager, Normal.Realtime.RealtimeAvatar>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Normal.Realtime.RealtimeAvatarManager));
			optimized.SetValue(default(global::Normal.Realtime.RealtimeAvatarManager), default(global::Normal.Realtime.RealtimeAvatar));
		}
		
		// Normal.Realtime.RealtimeAvatarManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatarManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatarManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatarManagerEditor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarManagerEditor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatarManagerEditor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarManagerEditor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatarManagerEditor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarManagerEditor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatarVoice.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarVoice_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatarVoice.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarVoice_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatarVoice.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarVoice_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatarVoiceScale.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarVoiceScale_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatarVoiceScale.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarVoiceScale_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.RealtimeAvatarVoiceScale.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_RealtimeAvatarVoiceScale_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Utility.OculusSetFloorTrackingOriginWithoutPlugin.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Utility_OculusSetFloorTrackingOriginWithoutPlugin_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Utility.OculusSetFloorTrackingOriginWithoutPlugin.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Utility_OculusSetFloorTrackingOriginWithoutPlugin_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Normal.Realtime.Utility.OculusSetFloorTrackingOriginWithoutPlugin.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Normal_Realtime_Utility_OculusSetFloorTrackingOriginWithoutPlugin_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NormcoreManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NormcoreManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NormcoreManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NormcoreManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// NormcoreManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NormcoreManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.BoneCapsuleTriggerLogic.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_BoneCapsuleTriggerLogic_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.BoneCapsuleTriggerLogic.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_BoneCapsuleTriggerLogic_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.BoneCapsuleTriggerLogic.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_BoneCapsuleTriggerLogic_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.ButtonController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_ButtonController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.ButtonController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_ButtonController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.ButtonController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_ButtonController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.ButtonTriggerZone.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_ButtonTriggerZone_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.ButtonTriggerZone.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_ButtonTriggerZone_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.ButtonTriggerZone.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_ButtonTriggerZone_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.ColorGrabbable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_ColorGrabbable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.ColorGrabbable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_ColorGrabbable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.ColorGrabbable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_ColorGrabbable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.ControllerBoxController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_ControllerBoxController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.ControllerBoxController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_ControllerBoxController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.ControllerBoxController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_ControllerBoxController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.CowController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_CowController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.CowController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_CowController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.CowController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_CowController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.DistanceGrabbable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_DistanceGrabbable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.DistanceGrabbable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_DistanceGrabbable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.DistanceGrabbable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_DistanceGrabbable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.DistanceGrabber.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_DistanceGrabber_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.DistanceGrabber.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_DistanceGrabber_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.DistanceGrabber.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_DistanceGrabber_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.DistanceGrabberSample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_DistanceGrabberSample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.DistanceGrabberSample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_DistanceGrabberSample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.DistanceGrabberSample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_DistanceGrabberSample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.FingerTipPokeTool.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_FingerTipPokeTool_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.FingerTipPokeTool.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_FingerTipPokeTool_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.FingerTipPokeTool.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_FingerTipPokeTool_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.FingerTipPokeToolView.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_FingerTipPokeToolView_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.FingerTipPokeToolView.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_FingerTipPokeToolView_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.FingerTipPokeToolView.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_FingerTipPokeToolView_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.GrabbableCrosshair.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_GrabbableCrosshair_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.GrabbableCrosshair.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_GrabbableCrosshair_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.GrabbableCrosshair.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_GrabbableCrosshair_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.GrabManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_GrabManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.GrabManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_GrabManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.GrabManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_GrabManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.HandsManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_HandsManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.HandsManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_HandsManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.HandsManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_HandsManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.InteractableRegistry.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_InteractableRegistry_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.InteractableRegistry.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_InteractableRegistry_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.InteractableRegistry.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_InteractableRegistry_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.InteractableToolsCreator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_InteractableToolsCreator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.InteractableToolsCreator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_InteractableToolsCreator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.InteractableToolsCreator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_InteractableToolsCreator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.InteractableToolsInputRouter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_InteractableToolsInputRouter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.InteractableToolsInputRouter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_InteractableToolsInputRouter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.InteractableToolsInputRouter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_InteractableToolsInputRouter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.OVROverlaySample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_OVROverlaySample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.OVROverlaySample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_OVROverlaySample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.OVROverlaySample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_OVROverlaySample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.PanelHMDFollower.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_PanelHMDFollower_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.PanelHMDFollower.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_PanelHMDFollower_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.PanelHMDFollower.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_PanelHMDFollower_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.PauseOnInputLoss.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_PauseOnInputLoss_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.PauseOnInputLoss.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_PauseOnInputLoss_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.PauseOnInputLoss.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_PauseOnInputLoss_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.RayTool.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_RayTool_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.RayTool.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_RayTool_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.RayTool.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_RayTool_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.RayToolView.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_RayToolView_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.RayToolView.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_RayToolView_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.RayToolView.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_RayToolView_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.SelectionCylinder.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_SelectionCylinder_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.SelectionCylinder.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_SelectionCylinder_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.SelectionCylinder.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_SelectionCylinder_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrackSegment.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrackSegment_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrackSegment.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrackSegment_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrackSegment.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrackSegment_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainButtonVisualController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainButtonVisualController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainButtonVisualController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainButtonVisualController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainButtonVisualController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainButtonVisualController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainCar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainCar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainCar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainCar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainCar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainCar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainCrossingController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainCrossingController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainCrossingController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainCrossingController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainCrossingController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainCrossingController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainLocomotive.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainLocomotive_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainLocomotive.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainLocomotive_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainLocomotive.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainLocomotive_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainTrack.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainTrack_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainTrack.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainTrack_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.TrainTrack.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_TrainTrack_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.WindmillBladesController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_WindmillBladesController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.WindmillBladesController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_WindmillBladesController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.WindmillBladesController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_WindmillBladesController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.WindmillController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_WindmillController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.WindmillController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_WindmillController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSampleFramework.WindmillController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSampleFramework_WindmillController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSpatializerUnity.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSpatializerUnity_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSpatializerUnity.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSpatializerUnity_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OculusSpatializerUnity.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OculusSpatializerUnity_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPAmbisonicsNative.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPAmbisonicsNative_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPAmbisonicsNative.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPAmbisonicsNative_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPAmbisonicsNative.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPAmbisonicsNative_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPAudioSource.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPAudioSource_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPAudioSource.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPAudioSource_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPAudioSource.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPAudioSource_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPProfiler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPProfiler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPProfiler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPProfiler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPProfiler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPProfiler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPPropagationGeometry.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPPropagationGeometry_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPPropagationGeometry.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPPropagationGeometry_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPPropagationGeometry.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPPropagationGeometry_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPPropagationMaterial.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPPropagationMaterial_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPPropagationMaterial.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPPropagationMaterial_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPPropagationMaterial.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPPropagationMaterial_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPPropagationSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPPropagationSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPPropagationSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPPropagationSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPPropagationSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPPropagationSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPReflectionZone.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPReflectionZone_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPReflectionZone.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPReflectionZone_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPReflectionZone.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPReflectionZone_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPVersion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPVersion_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPVersion.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPVersion_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ONSPVersion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ONSPVersion_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OOBBehavior.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OOBBehavior_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OOBBehavior.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OOBBehavior_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OOBBehavior.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OOBBehavior_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OsakaTestBackMenu.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OsakaTestBackMenu_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OsakaTestBackMenu.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OsakaTestBackMenu_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OsakaTestBackMenu.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OsakaTestBackMenu_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OutdoorAudioTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OutdoorAudioTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OutdoorAudioTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OutdoorAudioTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OutdoorAudioTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OutdoorAudioTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Outline.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Outline_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Outline.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Outline_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Outline.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Outline_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVR.AmbienceEmitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVR_AmbienceEmitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVR.AmbienceEmitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVR_AmbienceEmitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVR.AmbienceEmitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVR_AmbienceEmitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVR.AudioManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVR_AudioManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVR.AudioManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVR_AudioManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVR.AudioManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVR_AudioManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVR.SoundEmitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVR_SoundEmitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVR.SoundEmitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVR_SoundEmitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVR.SoundEmitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVR_SoundEmitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVR.TestScript.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVR_TestScript_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVR.TestScript.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVR_TestScript_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVR.TestScript.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVR_TestScript_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRAudioSourceTest.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRAudioSourceTest_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRAudioSourceTest.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRAudioSourceTest_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRAudioSourceTest.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRAudioSourceTest_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRAutoDestroyInMRC.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRAutoDestroyInMRC_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRAutoDestroyInMRC.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRAutoDestroyInMRC_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRAutoDestroyInMRC.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRAutoDestroyInMRC_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarBody.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarBody_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarBody.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarBody_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarBody.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarBody_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarComponent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarComponent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarComponent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarComponent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarComponent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarComponent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarHand.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarHand_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarHand.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarHand_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarHand.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarHand_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarLocalDriver.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarLocalDriver_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarLocalDriver.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarLocalDriver_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarLocalDriver.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarLocalDriver_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarMaterialManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarMaterialManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarMaterialManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarMaterialManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarMaterialManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarMaterialManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarRemoteDriver.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarRemoteDriver_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarRemoteDriver.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarRemoteDriver_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarRemoteDriver.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarRemoteDriver_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarRenderComponent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarRenderComponent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarRenderComponent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarRenderComponent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarRenderComponent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarRenderComponent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSDKManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSDKManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSDKManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSDKManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSDKManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSDKManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSettingsEditor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSettingsEditor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSettingsEditor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSettingsEditor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSettingsEditor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSettingsEditor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSkinnedMeshPBSV2RenderComponent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSkinnedMeshPBSV2RenderComponent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSkinnedMeshPBSV2RenderComponent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSkinnedMeshPBSV2RenderComponent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSkinnedMeshPBSV2RenderComponent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSkinnedMeshPBSV2RenderComponent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSkinnedMeshRenderComponent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSkinnedMeshRenderComponent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSkinnedMeshRenderComponent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSkinnedMeshRenderComponent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSkinnedMeshRenderComponent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSkinnedMeshRenderComponent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSkinnedMeshRenderPBSComponent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSkinnedMeshRenderPBSComponent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSkinnedMeshRenderPBSComponent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSkinnedMeshRenderPBSComponent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarSkinnedMeshRenderPBSComponent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarSkinnedMeshRenderPBSComponent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarTestDriver.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarTestDriver_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarTestDriver.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarTestDriver_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarTestDriver.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarTestDriver_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarTextureCopyManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarTextureCopyManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarTextureCopyManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarTextureCopyManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarTextureCopyManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarTextureCopyManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarTouchController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarTouchController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarTouchController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarTouchController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OvrAvatarTouchController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OvrAvatarTouchController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRBoundary..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRBoundary_ctor()
		{
			new OVRBoundary();
		}
		
		// OVRBoundary.GetGeometry
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRBoundary_GetGeometry()
		{
			global::OVRBoundary target = default(global::OVRBoundary);
			global::OVRBoundary.BoundaryType arg0 = default(global::OVRBoundary.BoundaryType);
			target.GetGeometry(arg0);
			global::Ludiq.InstanceFunctionInvoker<OVRBoundary, OVRBoundary.BoundaryType, UnityEngine.Vector3[]> optimized = new global::Ludiq.InstanceFunctionInvoker<OVRBoundary, OVRBoundary.BoundaryType, UnityEngine.Vector3[]>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::OVRBoundary), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCameraComposition.OVRCameraFrameCompositionManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCameraComposition_OVRCameraFrameCompositionManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCameraComposition.OVRCameraFrameCompositionManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCameraComposition_OVRCameraFrameCompositionManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCameraComposition.OVRCameraFrameCompositionManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCameraComposition_OVRCameraFrameCompositionManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCameraRig.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCameraRig_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCameraRig.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCameraRig_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCameraRig.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCameraRig_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRChromaticAberration.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRChromaticAberration_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRChromaticAberration.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRChromaticAberration_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRChromaticAberration.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRChromaticAberration_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRControllerHelper.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRControllerHelper_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRControllerHelper.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRControllerHelper_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRControllerHelper.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRControllerHelper_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRControllerTest.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRControllerTest_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRControllerTest.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRControllerTest_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRControllerTest.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRControllerTest_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCubemapCapture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCubemapCapture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCubemapCapture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCubemapCapture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCubemapCapture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCubemapCapture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCustomGrabbable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCustomGrabbable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCustomGrabbable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCustomGrabbable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCustomGrabbable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCustomGrabbable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCustomGrabber.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCustomGrabber_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCustomGrabber.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCustomGrabber_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCustomGrabber.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCustomGrabber_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCustomSkeleton.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCustomSkeleton_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCustomSkeleton.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCustomSkeleton_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRCustomSkeleton.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRCustomSkeleton_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRDebugHeadController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRDebugHeadController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRDebugHeadController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRDebugHeadController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRDebugHeadController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRDebugHeadController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRDebugInfo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRDebugInfo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRDebugInfo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRDebugInfo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRDebugInfo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRDebugInfo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGazePointer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGazePointer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGazePointer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGazePointer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGazePointer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGazePointer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGearVrControllerTest.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGearVrControllerTest_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGearVrControllerTest.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGearVrControllerTest_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGearVrControllerTest.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGearVrControllerTest_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGrabbable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGrabbable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGrabbable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGrabbable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGrabbable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGrabbable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGrabber.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGrabber_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGrabber.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGrabber_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGrabber.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGrabber_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGridCube.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGridCube_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGridCube.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGridCube_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRGridCube.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRGridCube_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRHand.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRHand_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRHand.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRHand_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRHand.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRHand_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRHandGrabbable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRHandGrabbable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRHandGrabbable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRHandGrabbable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRHandGrabbable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRHandGrabbable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRHandTest.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRHandTest_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRHandTest.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRHandTest_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRHandTest.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRHandTest_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRHeadsetEmulator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRHeadsetEmulator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRHeadsetEmulator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRHeadsetEmulator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRHeadsetEmulator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRHeadsetEmulator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSync.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSync_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSync.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSync_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSync.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSync_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContext.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContext_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContext.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContext_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContext.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContext_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContextBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContextBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContextBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContextBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContextBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContextBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContextCanned.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContextCanned_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContextCanned.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContextCanned_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContextCanned.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContextCanned_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContextMorphTarget.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContextMorphTarget_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContextMorphTarget.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContextMorphTarget_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContextMorphTarget.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContextMorphTarget_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContextTextureFlip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContextTextureFlip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContextTextureFlip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContextTextureFlip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncContextTextureFlip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncContextTextureFlip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncDebugConsole.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncDebugConsole_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncDebugConsole.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncDebugConsole_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncDebugConsole.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncDebugConsole_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncMicInput.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncMicInput_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncMicInput.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncMicInput_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncMicInput.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncMicInput_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncSequence.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncSequence_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncSequence.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncSequence_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRLipSyncSequence.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRLipSyncSequence_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRManager.trackingOriginType
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRManager_trackingOriginType()
		{
			global::OVRManager target = default(global::OVRManager);
			global::OVRManager.TrackingOrigin accessor = target.trackingOriginType;
			target.trackingOriginType = default(global::OVRManager.TrackingOrigin);
			global::Ludiq.InstancePropertyAccessor<OVRManager, OVRManager.TrackingOrigin> optimized = new global::Ludiq.InstancePropertyAccessor<OVRManager, OVRManager.TrackingOrigin>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::OVRManager));
			optimized.SetValue(default(global::OVRManager), default(global::OVRManager.TrackingOrigin));
		}
		
		// OVRManager.usePositionTracking
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRManager_usePositionTracking()
		{
			global::OVRManager target = default(global::OVRManager);
			bool accessor = target.usePositionTracking;
			target.usePositionTracking = default(bool);
			global::Ludiq.InstanceFieldAccessor<OVRManager, bool> optimized = new global::Ludiq.InstanceFieldAccessor<OVRManager, bool>(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(default(global::OVRManager));
			optimized.SetValue(default(global::OVRManager), default(bool));
		}
		
		// OVRMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRMeshRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMeshRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRMeshRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMeshRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRMeshRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMeshRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRMixedRealityCaptureSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMixedRealityCaptureSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRMixedRealityCaptureSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMixedRealityCaptureSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRMixedRealityCaptureSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMixedRealityCaptureSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRMixedRealityCaptureTest.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMixedRealityCaptureTest_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRMixedRealityCaptureTest.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMixedRealityCaptureTest_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRMixedRealityCaptureTest.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMixedRealityCaptureTest_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRModeParms.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRModeParms_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRModeParms.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRModeParms_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRModeParms.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRModeParms_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRMonoscopic.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMonoscopic_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRMonoscopic.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMonoscopic_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRMonoscopic.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRMonoscopic_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVROverlay.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVROverlay_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVROverlay.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVROverlay_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVROverlay.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVROverlay_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVROverlayCanvas.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVROverlayCanvas_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVROverlayCanvas.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVROverlayCanvas_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVROverlayCanvas.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVROverlayCanvas_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVROverlayMeshGenerator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVROverlayMeshGenerator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVROverlayMeshGenerator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVROverlayMeshGenerator_op_Equality_0()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVROverlayMeshGenerator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVROverlayMeshGenerator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVROverlayMeshGenerator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVROverlayMeshGenerator_op_Implicit_0()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVROverlayMeshGenerator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVROverlayMeshGenerator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVROverlayMeshGenerator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVROverlayMeshGenerator_op_Inequality_0()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRPlatformMenu.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRPlatformMenu_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRPlatformMenu.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRPlatformMenu_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRPlatformMenu.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRPlatformMenu_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRPlayerController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRPlayerController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRPlayerController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRPlayerController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRPlayerController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRPlayerController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRPlugin.GetSystemHeadsetType
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRPlugin_GetSystemHeadsetType()
		{
			global::OVRPlugin.GetSystemHeadsetType();
			global::Ludiq.StaticFunctionInvoker<OVRPlugin.SystemHeadset> optimized = new global::Ludiq.StaticFunctionInvoker<OVRPlugin.SystemHeadset>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null);
			optimized.Invoke(default(object[]));
		}
		
		// OVRProfile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRProfile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRProfile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRProfile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRProfile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRProfile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRProfiler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRProfiler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRProfiler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRProfiler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRProfiler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRProfiler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRProgressIndicator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRProgressIndicator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRProgressIndicator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRProgressIndicator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRProgressIndicator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRProgressIndicator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRResetOrientation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRResetOrientation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRResetOrientation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRResetOrientation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRResetOrientation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRResetOrientation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRResources.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRResources_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRResources.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRResources_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRResources.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRResources_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSceneLoader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSceneLoader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSceneLoader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSceneLoader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSceneLoader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSceneLoader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSceneSampleController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSceneSampleController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSceneSampleController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSceneSampleController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSceneSampleController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSceneSampleController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRScreenFade.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRScreenFade_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRScreenFade.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRScreenFade_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRScreenFade.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRScreenFade_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSkeleton.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSkeleton_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSkeleton.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSkeleton_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSkeleton.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSkeleton_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSkeletonRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSkeletonRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSkeletonRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSkeletonRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSkeletonRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSkeletonRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSystemPerfMetrics.OVRSystemPerfMetricsTcpServer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSystemPerfMetrics_OVRSystemPerfMetricsTcpServer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSystemPerfMetrics.OVRSystemPerfMetricsTcpServer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSystemPerfMetrics_OVRSystemPerfMetricsTcpServer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRSystemPerfMetrics.OVRSystemPerfMetricsTcpServer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRSystemPerfMetrics_OVRSystemPerfMetricsTcpServer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRTouchpadHelper.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRTouchpadHelper_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRTouchpadHelper.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRTouchpadHelper_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRTouchpadHelper.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRTouchpadHelper_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRTouchSample.Hand.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRTouchSample_Hand_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRTouchSample.Hand.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRTouchSample_Hand_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRTouchSample.Hand.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRTouchSample_Hand_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRTouchSample.HandPose.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRTouchSample_HandPose_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRTouchSample.HandPose.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRTouchSample_HandPose_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRTouchSample.HandPose.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRTouchSample_HandPose_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRTouchSample.TouchController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRTouchSample_TouchController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRTouchSample.TouchController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRTouchSample_TouchController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRTouchSample.TouchController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRTouchSample_TouchController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRVignette.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRVignette_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRVignette.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRVignette_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRVignette.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRVignette_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRWaitCursor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRWaitCursor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OVRWaitCursor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRWaitCursor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OVRWaitCursor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OVRWaitCursor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OwnershipManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OwnershipManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OwnershipManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OwnershipManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OwnershipManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OwnershipManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ParticleTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ParticleTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ParticleTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ParticleTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ParticleTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ParticleTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Platformable.EnableChanges
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Platformable_EnableChanges()
		{
			global::Platformable target = default(global::Platformable);
			bool arg0 = default(bool);
			target.EnableChanges(arg0);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::Platformable), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Platformable.OnManipulationEnded
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Platformable_OnManipulationEnded()
		{
			global::Platformable target = default(global::Platformable);
			target.OnManipulationEnded();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::Platformable));
			optimized.Invoke(default(object[]));
		}
		
		// Platformable.OnManipulationEndedDestroy
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Platformable_OnManipulationEndedDestroy()
		{
			global::Platformable target = default(global::Platformable);
			target.OnManipulationEndedDestroy();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::Platformable));
			optimized.Invoke(default(object[]));
		}
		
		// Platformable.OnManipulationEndedVoid
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Platformable_OnManipulationEndedVoid()
		{
			global::Platformable target = default(global::Platformable);
			target.OnManipulationEndedVoid();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::Platformable));
			optimized.Invoke(default(object[]));
		}
		
		// Platformable.OnManipulationStarted
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Platformable_OnManipulationStarted()
		{
			global::Platformable target = default(global::Platformable);
			target.OnManipulationStarted();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::Platformable));
			optimized.Invoke(default(object[]));
		}
		
		// Platformable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Platformable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Platformable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Platformable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Platformable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Platformable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Platformable.Undock
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Platformable_Undock()
		{
			global::Platformable target = default(global::Platformable);
			target.Undock();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::Platformable));
			optimized.Invoke(default(object[]));
		}
		
		// PlatformableMeshSequence.OnManipulationEnded
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformableMeshSequence_OnManipulationEnded()
		{
			global::PlatformableMeshSequence target = default(global::PlatformableMeshSequence);
			target.OnManipulationEnded();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::PlatformableMeshSequence));
			optimized.Invoke(default(object[]));
		}
		
		// PlatformableMeshSequence.OnManipulationEndedDestroy
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformableMeshSequence_OnManipulationEndedDestroy()
		{
			global::PlatformableMeshSequence target = default(global::PlatformableMeshSequence);
			target.OnManipulationEndedDestroy();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::PlatformableMeshSequence));
			optimized.Invoke(default(object[]));
		}
		
		// PlatformableMeshSequence.OnManipulationEndedVoid
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformableMeshSequence_OnManipulationEndedVoid()
		{
			global::PlatformableMeshSequence target = default(global::PlatformableMeshSequence);
			target.OnManipulationEndedVoid();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::PlatformableMeshSequence));
			optimized.Invoke(default(object[]));
		}
		
		// PlatformableMeshSequence.OnManipulationStarted
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformableMeshSequence_OnManipulationStarted()
		{
			global::PlatformableMeshSequence target = default(global::PlatformableMeshSequence);
			target.OnManipulationStarted();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::PlatformableMeshSequence));
			optimized.Invoke(default(object[]));
		}
		
		// PlatformableMeshSequence.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformableMeshSequence_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformableMeshSequence.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformableMeshSequence_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformableMeshSequence.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformableMeshSequence_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformDockPosition.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformDockPosition_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformDockPosition.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformDockPosition_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformDockPosition.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformDockPosition_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformDockPosition.PlatformedObject
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformDockPosition_PlatformedObject()
		{
			global::PlatformDockPosition target = default(global::PlatformDockPosition);
			global::UnityEngine.GameObject accessor = target.PlatformedObject;
			target.PlatformedObject = default(global::UnityEngine.GameObject);
			global::Ludiq.InstancePropertyAccessor<PlatformDockPosition, UnityEngine.GameObject> optimized = new global::Ludiq.InstancePropertyAccessor<PlatformDockPosition, UnityEngine.GameObject>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::PlatformDockPosition));
			optimized.SetValue(default(global::PlatformDockPosition), default(global::UnityEngine.GameObject));
		}
		
		// PlatformDockPositionTriggerEnter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformDockPositionTriggerEnter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformDockPositionTriggerEnter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformDockPositionTriggerEnter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformDockPositionTriggerEnter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformDockPositionTriggerEnter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformDockPositionTriggerExit.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformDockPositionTriggerExit_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformDockPositionTriggerExit.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformDockPositionTriggerExit_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformDockPositionTriggerExit.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformDockPositionTriggerExit_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformLocomotion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformLocomotion_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformLocomotion.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformLocomotion_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformLocomotion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformLocomotion_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformPlaceholder.InstantiatedObject
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformPlaceholder_InstantiatedObject()
		{
			global::PlatformPlaceholder target = default(global::PlatformPlaceholder);
			global::UnityEngine.GameObject accessor = target.InstantiatedObject;
			global::Ludiq.InstancePropertyAccessor<PlatformPlaceholder, UnityEngine.GameObject> optimized = new global::Ludiq.InstancePropertyAccessor<PlatformPlaceholder, UnityEngine.GameObject>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::PlatformPlaceholder));
			optimized.SetValue(default(global::PlatformPlaceholder), default(global::UnityEngine.GameObject));
		}
		
		// PlatformPlaceholder.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformPlaceholder_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformPlaceholder.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformPlaceholder_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformPlaceholder.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformPlaceholder_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformPlaceholder.RotationAngle
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformPlaceholder_RotationAngle()
		{
			global::PlatformPlaceholder target = default(global::PlatformPlaceholder);
			target.RotationAngle = default(global::UnityEngine.Quaternion);
			global::Ludiq.InstancePropertyAccessor<PlatformPlaceholder, UnityEngine.Quaternion> optimized = new global::Ludiq.InstancePropertyAccessor<PlatformPlaceholder, UnityEngine.Quaternion>(default(global::System.Reflection.PropertyInfo));
			optimized.SetValue(default(global::PlatformPlaceholder), default(global::UnityEngine.Quaternion));
		}
		
		// PlatformPlaceholderMeshSequence.InstantiatedObject
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformPlaceholderMeshSequence_InstantiatedObject()
		{
			global::PlatformPlaceholder target = default(global::PlatformPlaceholder);
			global::UnityEngine.GameObject accessor = target.InstantiatedObject;
			global::Ludiq.InstancePropertyAccessor<PlatformPlaceholder, UnityEngine.GameObject> optimized = new global::Ludiq.InstancePropertyAccessor<PlatformPlaceholder, UnityEngine.GameObject>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::PlatformPlaceholder));
			optimized.SetValue(default(global::PlatformPlaceholder), default(global::UnityEngine.GameObject));
		}
		
		// PlatformPlaceholderMeshSequence.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformPlaceholderMeshSequence_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformPlaceholderMeshSequence.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformPlaceholderMeshSequence_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PlatformPlaceholderMeshSequence.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlatformPlaceholderMeshSequence_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlayerController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlayerController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlayerController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlayerController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PlayerController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlayerController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PoseEditHelper.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PoseEditHelper_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PoseEditHelper.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PoseEditHelper_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PoseEditHelper.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PoseEditHelper_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PressableEventsForBolt.ButtonPressedForBolt
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PressableEventsForBolt_ButtonPressedForBolt()
		{
			global::PressableEventsForBolt target = default(global::PressableEventsForBolt);
			global::Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2 arg0 = default(global::Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2);
			target.ButtonPressedForBolt(arg0);
			global::Ludiq.InstanceActionInvoker<PressableEventsForBolt, Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2> optimized = new global::Ludiq.InstanceActionInvoker<PressableEventsForBolt, Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::PressableEventsForBolt), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PressableEventsForBolt.ButtonReleasedForBolt
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PressableEventsForBolt_ButtonReleasedForBolt()
		{
			global::PressableEventsForBolt target = default(global::PressableEventsForBolt);
			global::Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2 arg0 = default(global::Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2);
			target.ButtonReleasedForBolt(arg0);
			global::Ludiq.InstanceActionInvoker<PressableEventsForBolt, Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2> optimized = new global::Ludiq.InstanceActionInvoker<PressableEventsForBolt, Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::PressableEventsForBolt), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PressableEventsForBolt.OnClickForBolt
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PressableEventsForBolt_OnClickForBolt()
		{
			global::PressableEventsForBolt target = default(global::PressableEventsForBolt);
			global::Microsoft.MixedReality.Toolkit.UI.Interactable arg0 = default(global::Microsoft.MixedReality.Toolkit.UI.Interactable);
			target.OnClickForBolt(arg0);
			global::Ludiq.InstanceActionInvoker<PressableEventsForBolt, Microsoft.MixedReality.Toolkit.UI.Interactable> optimized = new global::Ludiq.InstanceActionInvoker<PressableEventsForBolt, Microsoft.MixedReality.Toolkit.UI.Interactable>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::PressableEventsForBolt), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PressableEventsForBolt.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PressableEventsForBolt_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PressableEventsForBolt.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PressableEventsForBolt_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PressableEventsForBolt.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PressableEventsForBolt_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PressableEventsForBolt.TouchBeginForBolt
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PressableEventsForBolt_TouchBeginForBolt()
		{
			global::PressableEventsForBolt target = default(global::PressableEventsForBolt);
			global::Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2 arg0 = default(global::Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2);
			target.TouchBeginForBolt(arg0);
			global::Ludiq.InstanceActionInvoker<PressableEventsForBolt, Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2> optimized = new global::Ludiq.InstanceActionInvoker<PressableEventsForBolt, Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::PressableEventsForBolt), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PressableEventsForBolt.TouchEndForBolt
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PressableEventsForBolt_TouchEndForBolt()
		{
			global::PressableEventsForBolt target = default(global::PressableEventsForBolt);
			global::Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2 arg0 = default(global::Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2);
			target.TouchEndForBolt(arg0);
			global::Ludiq.InstanceActionInvoker<PressableEventsForBolt, Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2> optimized = new global::Ludiq.InstanceActionInvoker<PressableEventsForBolt, Microsoft.MixedReality.Toolkit.UI.PressableButtonHoloLens2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::PressableEventsForBolt), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// QuitMenu.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void QuitMenu_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// QuitMenu.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void QuitMenu_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// QuitMenu.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void QuitMenu_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// QuoteManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void QuoteManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// QuoteManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void QuoteManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// QuoteManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void QuoteManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RaycastUnplatforming.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RaycastUnplatforming_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RaycastUnplatforming.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RaycastUnplatforming_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// RaycastUnplatforming.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RaycastUnplatforming_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ReadSliderValue.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ReadSliderValue_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ReadSliderValue.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ReadSliderValue_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ReadSliderValue.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ReadSliderValue_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RealtimeHandConfidence.GetConfidence
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RealtimeHandConfidence_GetConfidence()
		{
			global::RealtimeHandConfidence target = default(global::RealtimeHandConfidence);
			target.GetConfidence();
			global::Ludiq.InstanceFunctionInvoker<RealtimeHandConfidence, OVRHand.TrackingConfidence> optimized = new global::Ludiq.InstanceFunctionInvoker<RealtimeHandConfidence, OVRHand.TrackingConfidence>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::RealtimeHandConfidence));
			optimized.Invoke(default(object[]));
		}
		
		// RealtimeHandConfidence.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RealtimeHandConfidence_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RealtimeHandConfidence.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RealtimeHandConfidence_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// RealtimeHandConfidence.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RealtimeHandConfidence_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RealtimeMeshSequenceController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RealtimeMeshSequenceController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RealtimeMeshSequenceController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RealtimeMeshSequenceController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// RealtimeMeshSequenceController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RealtimeMeshSequenceController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RemoteLoopbackManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RemoteLoopbackManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RemoteLoopbackManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RemoteLoopbackManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// RemoteLoopbackManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RemoteLoopbackManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RotateAnim.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RotateAnim_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RotateAnim.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RotateAnim_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// RotateAnim.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RotateAnim_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RotationHandleBehaviour.Activation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RotationHandleBehaviour_Activation()
		{
			global::RotationHandleBehaviour target = default(global::RotationHandleBehaviour);
			target.Activation();
			global::Ludiq.InstanceActionInvoker<RotationHandleBehaviour> optimized = new global::Ludiq.InstanceActionInvoker<RotationHandleBehaviour>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::RotationHandleBehaviour));
			optimized.Invoke(default(object[]));
		}
		
		// RotationHandleBehaviour.Deactivation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RotationHandleBehaviour_Deactivation()
		{
			global::RotationHandleBehaviour target = default(global::RotationHandleBehaviour);
			target.Deactivation();
			global::Ludiq.InstanceActionInvoker<RotationHandleBehaviour> optimized = new global::Ludiq.InstanceActionInvoker<RotationHandleBehaviour>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::RotationHandleBehaviour));
			optimized.Invoke(default(object[]));
		}
		
		// RotationHandleBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RotationHandleBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RotationHandleBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RotationHandleBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// RotationHandleBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RotationHandleBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Rotator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Rotator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Rotator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Rotator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Rotator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Rotator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RotatorsManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RotatorsManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RotatorsManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RotatorsManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// RotatorsManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RotatorsManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SampleSpeechToText.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SampleSpeechToText_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SampleSpeechToText.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SampleSpeechToText_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SampleSpeechToText.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SampleSpeechToText_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SaveMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SaveMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SaveMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SaveMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SaveMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SaveMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SaveMeshInEditor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SaveMeshInEditor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SaveMeshInEditor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SaveMeshInEditor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SaveMeshInEditor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SaveMeshInEditor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ScaleHandleBehaviour.Activation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScaleHandleBehaviour_Activation()
		{
			global::ScaleHandleBehaviour target = default(global::ScaleHandleBehaviour);
			target.Activation();
			global::Ludiq.InstanceActionInvoker<ScaleHandleBehaviour> optimized = new global::Ludiq.InstanceActionInvoker<ScaleHandleBehaviour>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::ScaleHandleBehaviour));
			optimized.Invoke(default(object[]));
		}
		
		// ScaleHandleBehaviour.Deactivation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScaleHandleBehaviour_Deactivation()
		{
			global::ScaleHandleBehaviour target = default(global::ScaleHandleBehaviour);
			target.Deactivation();
			global::Ludiq.InstanceActionInvoker<ScaleHandleBehaviour> optimized = new global::Ludiq.InstanceActionInvoker<ScaleHandleBehaviour>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::ScaleHandleBehaviour));
			optimized.Invoke(default(object[]));
		}
		
		// ScaleHandleBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScaleHandleBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ScaleHandleBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScaleHandleBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ScaleHandleBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScaleHandleBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ScenesManager.LoadLevel
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScenesManager_LoadLevel()
		{
			global::ScenesManager target = default(global::ScenesManager);
			string arg0 = default(string);
			target.LoadLevel(arg0);
			global::Ludiq.InstanceActionInvoker<ScenesManager, string> optimized = new global::Ludiq.InstanceActionInvoker<ScenesManager, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::ScenesManager), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ScenesManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScenesManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ScenesManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScenesManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ScenesManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScenesManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SceneSwitching.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SceneSwitching_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SceneSwitching.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SceneSwitching_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SceneSwitching.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SceneSwitching_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SelectionDockPositionTriggerEnter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SelectionDockPositionTriggerEnter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SelectionDockPositionTriggerEnter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SelectionDockPositionTriggerEnter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SelectionDockPositionTriggerEnter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SelectionDockPositionTriggerEnter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SelectionDockPositionTriggerExit.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SelectionDockPositionTriggerExit_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SelectionDockPositionTriggerExit.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SelectionDockPositionTriggerExit_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SelectionDockPositionTriggerExit.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SelectionDockPositionTriggerExit_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SelectorDockPosition.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SelectorDockPosition_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SelectorDockPosition.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SelectorDockPosition_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SelectorDockPosition.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SelectorDockPosition_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SelectorDockPosition.savedGeometries
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SelectorDockPosition_savedGeometries()
		{
			global::SelectorDockPosition target = default(global::SelectorDockPosition);
			global::System.Collections.Generic.List<UnityEngine.GameObject> accessor = target.savedGeometries;
			target.savedGeometries = default(global::System.Collections.Generic.List<UnityEngine.GameObject>);
			global::Ludiq.InstanceFieldAccessor<SelectorDockPosition, System.Collections.Generic.List<UnityEngine.GameObject>> optimized = new global::Ludiq.InstanceFieldAccessor<SelectorDockPosition, System.Collections.Generic.List<UnityEngine.GameObject>>(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(default(global::SelectorDockPosition));
			optimized.SetValue(default(global::SelectorDockPosition), default(global::System.Collections.Generic.List<UnityEngine.GameObject>));
		}
		
		// SelectorDockPosition.VisualizeGeometryByIndex
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SelectorDockPosition_VisualizeGeometryByIndex()
		{
			global::SelectorDockPosition target = default(global::SelectorDockPosition);
			int arg0 = default(int);
			target.VisualizeGeometryByIndex(arg0);
			global::Ludiq.InstanceActionInvoker<SelectorDockPosition, int> optimized = new global::Ludiq.InstanceActionInvoker<SelectorDockPosition, int>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::SelectorDockPosition), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SelectorDockPosition.VisualizeGeometryByName
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SelectorDockPosition_VisualizeGeometryByName()
		{
			global::SelectorDockPosition target = default(global::SelectorDockPosition);
			string arg0 = default(string);
			target.VisualizeGeometryByName(arg0);
			global::Ludiq.InstanceActionInvoker<SelectorDockPosition, string> optimized = new global::Ludiq.InstanceActionInvoker<SelectorDockPosition, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::SelectorDockPosition), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.AmmoBar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_AmmoBar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.AmmoBar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_AmmoBar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.AmmoBar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_AmmoBar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.ChargeBar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_ChargeBar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.ChargeBar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_ChargeBar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.ChargeBar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_ChargeBar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Compass.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Compass_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Compass.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Compass_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Compass.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Compass_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Cone.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Cone_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Cone.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Cone_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Cone.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Cone_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Crosshair.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Crosshair_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Crosshair.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Crosshair_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Crosshair.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Crosshair_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Cuboid.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Cuboid_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Cuboid.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Cuboid_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Cuboid.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Cuboid_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Disc.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Disc_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Disc.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Disc_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Disc.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Disc_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.FpsController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_FpsController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.FpsController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_FpsController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.FpsController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_FpsController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Line.End
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Line_End()
		{
			global::Shapes.Line target = default(global::Shapes.Line);
			global::UnityEngine.Vector3 accessor = target.End;
			target.End = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<Shapes.Line, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<Shapes.Line, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Shapes.Line));
			optimized.SetValue(default(global::Shapes.Line), default(global::UnityEngine.Vector3));
		}
		
		// Shapes.Line.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Line_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Line.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Line_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Line.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Line_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Line.Start
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Line_Start()
		{
			global::Shapes.Line target = default(global::Shapes.Line);
			global::UnityEngine.Vector3 accessor = target.Start;
			target.Start = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<Shapes.Line, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<Shapes.Line, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Shapes.Line));
			optimized.SetValue(default(global::Shapes.Line), default(global::UnityEngine.Vector3));
		}
		
		// Shapes.Polygon.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Polygon_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Polygon.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Polygon_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Polygon.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Polygon_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Polyline.AddPoint
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Polyline_AddPoint()
		{
			global::Shapes.Polyline target = default(global::Shapes.Polyline);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.AddPoint(arg0);
			global::Ludiq.InstanceActionInvoker<Shapes.Polyline, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceActionInvoker<Shapes.Polyline, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::Shapes.Polyline), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Polyline.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Polyline_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Polyline.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Polyline_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Polyline.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Polyline_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Polyline.SetPointPosition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Polyline_SetPointPosition()
		{
			global::Shapes.Polyline target = default(global::Shapes.Polyline);
			int arg0 = default(int);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			target.SetPointPosition(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<Shapes.Polyline, int, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceActionInvoker<Shapes.Polyline, int, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::Shapes.Polyline), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Quad.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Quad_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Quad.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Quad_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Quad.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Quad_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Rectangle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Rectangle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Rectangle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Rectangle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Rectangle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Rectangle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.RegularPolygon.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_RegularPolygon_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.RegularPolygon.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_RegularPolygon_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.RegularPolygon.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_RegularPolygon_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.ShapeGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_ShapeGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.ShapeGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_ShapeGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.ShapeGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_ShapeGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.ShapesAssets.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_ShapesAssets_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.ShapesAssets.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_ShapesAssets_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.ShapesAssets.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_ShapesAssets_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.ShapesTextDrawer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_ShapesTextDrawer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.ShapesTextDrawer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_ShapesTextDrawer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.ShapesTextDrawer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_ShapesTextDrawer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Sphere.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Sphere_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Sphere.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Sphere_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Sphere.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Sphere_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Torus.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Torus_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Torus.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Torus_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Torus.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Torus_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Triangle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Triangle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Triangle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Triangle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Shapes.Triangle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Shapes_Triangle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleCapsuleWithStickMovement.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleCapsuleWithStickMovement_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleCapsuleWithStickMovement.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleCapsuleWithStickMovement_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleCapsuleWithStickMovement.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleCapsuleWithStickMovement_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SkyboxManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SkyboxManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SkyboxManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SkyboxManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SkyboxManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SkyboxManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SkyboxManagerForOsaka.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SkyboxManagerForOsaka_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SkyboxManagerForOsaka.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SkyboxManagerForOsaka_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SkyboxManagerForOsaka.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SkyboxManagerForOsaka_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SliderManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SliderManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SliderManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SliderManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SliderManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SliderManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SliderReset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SliderReset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SliderReset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SliderReset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SliderReset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SliderReset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SocialPlatformManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SocialPlatformManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SocialPlatformManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SocialPlatformManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SocialPlatformManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SocialPlatformManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SpeechButton.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SpeechButton_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SpeechButton.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SpeechButton_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SpeechButton.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SpeechButton_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StartMenu.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StartMenu_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StartMenu.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StartMenu_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StartMenu.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StartMenu_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.Concat
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Concat()
		{
			object arg0 = default(object);
			object arg1 = default(object);
			string.Concat(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<object, object, string> optimized = new global::Ludiq.StaticFunctionInvoker<object, object, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.Concat
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Concat_0()
		{
			string arg0 = default(string);
			string arg1 = default(string);
			string arg2 = default(string);
			string arg3 = default(string);
			string.Concat(arg0, arg1, arg2, arg3);
			global::Ludiq.StaticFunctionInvoker<string, string, string, string, string> optimized = new global::Ludiq.StaticFunctionInvoker<string, string, string, string, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2, arg3);
			optimized.Invoke(default(object[]));
		}
		
		// string.Concat
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Concat_1()
		{
			string arg0 = default(string);
			string arg1 = default(string);
			string.Concat(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<string, string, string> optimized = new global::Ludiq.StaticFunctionInvoker<string, string, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.Concat
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Concat_2()
		{
			string arg0 = default(string);
			string arg1 = default(string);
			string arg2 = default(string);
			string.Concat(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<string, string, string, string> optimized = new global::Ludiq.StaticFunctionInvoker<string, string, string, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// string.Concat
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Concat_3()
		{
			object arg0 = default(object);
			object arg1 = default(object);
			object arg2 = default(object);
			string.Concat(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<object, object, object, string> optimized = new global::Ludiq.StaticFunctionInvoker<object, object, object, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// string.Format
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Format()
		{
			string arg0 = default(string);
			object arg1 = default(object);
			object arg2 = default(object);
			string.Format(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<string, object, object, string> optimized = new global::Ludiq.StaticFunctionInvoker<string, object, object, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// string.Format
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Format_0()
		{
			string arg0 = default(string);
			object arg1 = default(object);
			string.Format(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<string, object, string> optimized = new global::Ludiq.StaticFunctionInvoker<string, object, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.Length
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Length()
		{
			string target = default(string);
			int accessor = target.Length;
			global::Ludiq.InstancePropertyAccessor<string, int> optimized = new global::Ludiq.InstancePropertyAccessor<string, int>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(string));
		}
		
		// string.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_op_Equality()
		{
			string arg0 = default(string);
			string arg1 = default(string);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<string, string, bool> optimized = new global::Ludiq.StaticFunctionInvoker<string, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_op_Inequality()
		{
			string arg0 = default(string);
			string arg1 = default(string);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<string, string, bool> optimized = new global::Ludiq.StaticFunctionInvoker<string, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.Remove
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Remove()
		{
			string target = default(string);
			int arg0 = default(int);
			target.Remove(arg0);
			global::Ludiq.InstanceFunctionInvoker<string, int, string> optimized = new global::Ludiq.InstanceFunctionInvoker<string, int, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(string), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// string.Replace
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Replace()
		{
			string target = default(string);
			string arg0 = default(string);
			string arg1 = default(string);
			target.Replace(arg0, arg1);
			global::Ludiq.InstanceFunctionInvoker<string, string, string, string> optimized = new global::Ludiq.InstanceFunctionInvoker<string, string, string, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(string), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.Split
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Split()
		{
			string target = default(string);
			string[] arg0 = default(string[]);
			global::System.StringSplitOptions arg1 = default(global::System.StringSplitOptions);
			target.Split(arg0, arg1);
			global::Ludiq.InstanceFunctionInvoker<string, string[], System.StringSplitOptions, string[]> optimized = new global::Ludiq.InstanceFunctionInvoker<string, string[], System.StringSplitOptions, string[]>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(string), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.Substring
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Substring()
		{
			string target = default(string);
			int arg0 = default(int);
			int arg1 = default(int);
			target.Substring(arg0, arg1);
			global::Ludiq.InstanceFunctionInvoker<string, int, int, string> optimized = new global::Ludiq.InstanceFunctionInvoker<string, int, int, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(string), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.Substring
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Substring_0()
		{
			string target = default(string);
			int arg0 = default(int);
			target.Substring(arg0);
			global::Ludiq.InstanceFunctionInvoker<string, int, string> optimized = new global::Ludiq.InstanceFunctionInvoker<string, int, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(string), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SyncReality.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SyncReality_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SyncReality.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SyncReality_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SyncReality.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SyncReality_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SyncSun.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SyncSun_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SyncSun.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SyncSun_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SyncSun.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SyncSun_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// System.Environment.NewLine
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void System_Environment_NewLine()
		{
			string accessor = global::System.Environment.NewLine;
			global::Ludiq.StaticPropertyAccessor<string> optimized = new global::Ludiq.StaticPropertyAccessor<string>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// TeleportAimHandlerLaser.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportAimHandlerLaser_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportAimHandlerLaser.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportAimHandlerLaser_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportAimHandlerLaser.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportAimHandlerLaser_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportAimHandlerParabolic.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportAimHandlerParabolic_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportAimHandlerParabolic.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportAimHandlerParabolic_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportAimHandlerParabolic.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportAimHandlerParabolic_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportAimVisualLaser.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportAimVisualLaser_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportAimVisualLaser.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportAimVisualLaser_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportAimVisualLaser.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportAimVisualLaser_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportDestination.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportDestination_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportDestination.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportDestination_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportDestination.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportDestination_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportImprovements.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportImprovements_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportImprovements.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportImprovements_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportImprovements.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportImprovements_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportInputHandlerHMD.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportInputHandlerHMD_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportInputHandlerHMD.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportInputHandlerHMD_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportInputHandlerHMD.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportInputHandlerHMD_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportInputHandlerTouch.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportInputHandlerTouch_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportInputHandlerTouch.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportInputHandlerTouch_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportInputHandlerTouch.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportInputHandlerTouch_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportOrientationHandler360.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportOrientationHandler360_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportOrientationHandler360.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportOrientationHandler360_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportOrientationHandler360.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportOrientationHandler360_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportOrientationHandlerHMD.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportOrientationHandlerHMD_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportOrientationHandlerHMD.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportOrientationHandlerHMD_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportOrientationHandlerHMD.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportOrientationHandlerHMD_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportOrientationHandlerThumbstick.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportOrientationHandlerThumbstick_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportOrientationHandlerThumbstick.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportOrientationHandlerThumbstick_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportOrientationHandlerThumbstick.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportOrientationHandlerThumbstick_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportPoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportPoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportPoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportPoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportPoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportPoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportSync.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportSync_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportSync.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportSync_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportSync.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportSync_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportSync.SetTeleportOut
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportSync_SetTeleportOut()
		{
			global::TeleportSync target = default(global::TeleportSync);
			bool arg0 = default(bool);
			target.SetTeleportOut(arg0);
			global::Ludiq.InstanceActionInvoker<TeleportSync, bool> optimized = new global::Ludiq.InstanceActionInvoker<TeleportSync, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::TeleportSync), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTargetHandlerNavMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTargetHandlerNavMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTargetHandlerNavMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTargetHandlerNavMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTargetHandlerNavMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTargetHandlerNavMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTargetHandlerNode.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTargetHandlerNode_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTargetHandlerNode.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTargetHandlerNode_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTargetHandlerNode.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTargetHandlerNode_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTargetHandlerPhysical.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTargetHandlerPhysical_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTargetHandlerPhysical.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTargetHandlerPhysical_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTargetHandlerPhysical.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTargetHandlerPhysical_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTransitionBlink.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTransitionBlink_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTransitionBlink.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTransitionBlink_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTransitionBlink.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTransitionBlink_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTransitionInstant.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTransitionInstant_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTransitionInstant.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTransitionInstant_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTransitionInstant.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTransitionInstant_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTransitionWarp.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTransitionWarp_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTransitionWarp.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTransitionWarp_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TeleportTransitionWarp.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TeleportTransitionWarp_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// testtypewriter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void testtypewriter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// testtypewriter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void testtypewriter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// testtypewriter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void testtypewriter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TextSpeech.SpeechToText.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TextSpeech_SpeechToText_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TextSpeech.SpeechToText.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TextSpeech_SpeechToText_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TextSpeech.SpeechToText.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TextSpeech_SpeechToText_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TextSpeech.TextToSpeech.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TextSpeech_TextToSpeech_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TextSpeech.TextToSpeech.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TextSpeech_TextToSpeech_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TextSpeech.TextToSpeech.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TextSpeech_TextToSpeech_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TimeMultiplierSlider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TimeMultiplierSlider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TimeMultiplierSlider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TimeMultiplierSlider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TimeMultiplierSlider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TimeMultiplierSlider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark01.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark01_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark01.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark01_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark01.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark01_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark01_UGUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark01_UGUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark01_UGUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark01_UGUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark01_UGUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark01_UGUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark02.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark02_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark02.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark02_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark02.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark02_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark03.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark03_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark03.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark03_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark03.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark03_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark04.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark04_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark04.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark04_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.Benchmark04.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_Benchmark04_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.CameraController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_CameraController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.CameraController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_CameraController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.CameraController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_CameraController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.ObjectSpin.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_ObjectSpin_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.ObjectSpin.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_ObjectSpin_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.ObjectSpin.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_ObjectSpin_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.ShaderPropAnimator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_ShaderPropAnimator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.ShaderPropAnimator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_ShaderPropAnimator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.ShaderPropAnimator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_ShaderPropAnimator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.SimpleScript.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_SimpleScript_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.SimpleScript.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_SimpleScript_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.SimpleScript.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_SimpleScript_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.SkewTextExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_SkewTextExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.SkewTextExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_SkewTextExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.SkewTextExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_SkewTextExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TeleType.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TeleType_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TeleType.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TeleType_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TeleType.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TeleType_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TextConsoleSimulator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TextConsoleSimulator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TextConsoleSimulator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TextConsoleSimulator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TextConsoleSimulator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TextConsoleSimulator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TextMeshProFloatingText.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TextMeshProFloatingText_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TextMeshProFloatingText.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TextMeshProFloatingText_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TextMeshProFloatingText.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TextMeshProFloatingText_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TextMeshSpawner.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TextMeshSpawner_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TextMeshSpawner.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TextMeshSpawner_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TextMeshSpawner.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TextMeshSpawner_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_ExampleScript_01.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_ExampleScript_01_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_ExampleScript_01.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_ExampleScript_01_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_ExampleScript_01.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_ExampleScript_01_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_FrameRateCounter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_FrameRateCounter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_FrameRateCounter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_FrameRateCounter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_FrameRateCounter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_FrameRateCounter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_TextEventCheck.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_TextEventCheck_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_TextEventCheck.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_TextEventCheck_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_TextEventCheck.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_TextEventCheck_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_TextInfoDebugTool.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_TextInfoDebugTool_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_TextInfoDebugTool.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_TextInfoDebugTool_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_TextInfoDebugTool.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_TextInfoDebugTool_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_TextSelector_A.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_TextSelector_A_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_TextSelector_A.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_TextSelector_A_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_TextSelector_A.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_TextSelector_A_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_TextSelector_B.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_TextSelector_B_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_TextSelector_B.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_TextSelector_B_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_TextSelector_B.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_TextSelector_B_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_UiFrameRateCounter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_UiFrameRateCounter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_UiFrameRateCounter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_UiFrameRateCounter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMP_UiFrameRateCounter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMP_UiFrameRateCounter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMPro_InstructionOverlay.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMPro_InstructionOverlay_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMPro_InstructionOverlay.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMPro_InstructionOverlay_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.TMPro_InstructionOverlay.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_TMPro_InstructionOverlay_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexColorCycler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexColorCycler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexColorCycler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexColorCycler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexColorCycler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexColorCycler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexJitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexJitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexJitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexJitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexJitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexJitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexShakeA.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexShakeA_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexShakeA.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexShakeA_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexShakeA.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexShakeA_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexShakeB.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexShakeB_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexShakeB.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexShakeB_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexShakeB.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexShakeB_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexZoom.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexZoom_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexZoom.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexZoom_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.VertexZoom.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_VertexZoom_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.WarpTextExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_WarpTextExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.WarpTextExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_WarpTextExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.Examples.WarpTextExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_Examples_WarpTextExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextContainer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextContainer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextContainer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.alpha
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_alpha()
		{
			global::TMPro.TMP_Text target = default(global::TMPro.TMP_Text);
			float accessor = target.alpha;
			target.alpha = default(float);
			global::Ludiq.InstancePropertyAccessor<TMPro.TMP_Text, float> optimized = new global::Ludiq.InstancePropertyAccessor<TMPro.TMP_Text, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::TMPro.TMP_Text));
			optimized.SetValue(default(global::TMPro.TMP_Text), default(float));
		}
		
		// TMPro.TextMeshPro.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_DigitValidator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_DigitValidator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_DigitValidator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_DigitValidator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_DigitValidator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_DigitValidator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_FontAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_FontAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_FontAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PhoneNumberValidator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PhoneNumberValidator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PhoneNumberValidator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PhoneNumberValidator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PhoneNumberValidator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PhoneNumberValidator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_TextEventHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_TextEventHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_TextEventHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_TextEventHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_TextEventHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_TextEventHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TPEventsListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TPEventsListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TPEventsListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TPEventsListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TPEventsListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TPEventsListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TranslateHandleBehaviour.Activation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TranslateHandleBehaviour_Activation()
		{
			global::TranslateHandleBehaviour target = default(global::TranslateHandleBehaviour);
			target.Activation();
			global::Ludiq.InstanceActionInvoker<TranslateHandleBehaviour> optimized = new global::Ludiq.InstanceActionInvoker<TranslateHandleBehaviour>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::TranslateHandleBehaviour));
			optimized.Invoke(default(object[]));
		}
		
		// TranslateHandleBehaviour.Deactivation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TranslateHandleBehaviour_Deactivation()
		{
			global::TranslateHandleBehaviour target = default(global::TranslateHandleBehaviour);
			target.Deactivation();
			global::Ludiq.InstanceActionInvoker<TranslateHandleBehaviour> optimized = new global::Ludiq.InstanceActionInvoker<TranslateHandleBehaviour>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::TranslateHandleBehaviour));
			optimized.Invoke(default(object[]));
		}
		
		// TranslateHandleBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TranslateHandleBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TranslateHandleBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TranslateHandleBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TranslateHandleBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TranslateHandleBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TrashBinDockPositionTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TrashBinDockPositionTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TrashBinDockPositionTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TrashBinDockPositionTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TrashBinDockPositionTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TrashBinDockPositionTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Triggers.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Triggers_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Triggers.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Triggers_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Triggers.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Triggers_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UIManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenu.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenu_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenu.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenu_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenu.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenu_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenuMRTK.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenuMRTK_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenuMRTK.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenuMRTK_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenuMRTK.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenuMRTK_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenuMRTKLoadingScene.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenuMRTKLoadingScene_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenuMRTKLoadingScene.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenuMRTKLoadingScene_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenuMRTKLoadingScene.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenuMRTKLoadingScene_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenuMRTKWithoutButtons.FreezeGeometry
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenuMRTKWithoutButtons_FreezeGeometry()
		{
			global::UIManagerForUserMenuMRTKWithoutButtons target = default(global::UIManagerForUserMenuMRTKWithoutButtons);
			target.FreezeGeometry();
			global::Ludiq.InstanceActionInvoker<UIManagerForUserMenuMRTKWithoutButtons> optimized = new global::Ludiq.InstanceActionInvoker<UIManagerForUserMenuMRTKWithoutButtons>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UIManagerForUserMenuMRTKWithoutButtons));
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenuMRTKWithoutButtons.Instance
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenuMRTKWithoutButtons_Instance()
		{
			global::UIManagerForUserMenuMRTKWithoutButtons accessor = global::Singleton<UIManagerForUserMenuMRTKWithoutButtons>.Instance;
			global::Ludiq.StaticPropertyAccessor<UIManagerForUserMenuMRTKWithoutButtons> optimized = new global::Ludiq.StaticPropertyAccessor<UIManagerForUserMenuMRTKWithoutButtons>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// UIManagerForUserMenuMRTKWithoutButtons.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenuMRTKWithoutButtons_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenuMRTKWithoutButtons.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenuMRTKWithoutButtons_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenuMRTKWithoutButtons.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenuMRTKWithoutButtons_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenuMRTKWithoutButtonsOsaka.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenuMRTKWithoutButtonsOsaka_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenuMRTKWithoutButtonsOsaka.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenuMRTKWithoutButtonsOsaka_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UIManagerForUserMenuMRTKWithoutButtonsOsaka.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIManagerForUserMenuMRTKWithoutButtonsOsaka_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshData.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshData_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshData.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshData_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshData.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshData_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshObstacle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshObstacle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshObstacle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshObstacle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshObstacle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshObstacle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.OffMeshLink.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_OffMeshLink_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.OffMeshLink.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_OffMeshLink_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.OffMeshLink.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_OffMeshLink_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnchoredJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnchoredJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnchoredJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnchoredJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnchoredJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnchoredJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.aimVector
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_aimVector()
		{
			global::UnityEngine.Animations.AimConstraint target = default(global::UnityEngine.Animations.AimConstraint);
			global::UnityEngine.Vector3 accessor = target.aimVector;
			target.aimVector = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Animations.AimConstraint, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Animations.AimConstraint, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Animations.AimConstraint));
			optimized.SetValue(default(global::UnityEngine.Animations.AimConstraint), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Animations.AimConstraint.constraintActive
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_constraintActive()
		{
			global::UnityEngine.Animations.AimConstraint target = default(global::UnityEngine.Animations.AimConstraint);
			bool accessor = target.constraintActive;
			target.constraintActive = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Animations.AimConstraint, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Animations.AimConstraint, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Animations.AimConstraint));
			optimized.SetValue(default(global::UnityEngine.Animations.AimConstraint), default(bool));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.SetSource
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_SetSource()
		{
			global::UnityEngine.Animations.AimConstraint target = default(global::UnityEngine.Animations.AimConstraint);
			int arg0 = default(int);
			global::UnityEngine.Animations.ConstraintSource arg1 = default(global::UnityEngine.Animations.ConstraintSource);
			target.SetSource(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Animations.AimConstraint, int, UnityEngine.Animations.ConstraintSource> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Animations.AimConstraint, int, UnityEngine.Animations.ConstraintSource>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animations.AimConstraint), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ConstraintSource.sourceTransform
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ConstraintSource_sourceTransform()
		{
			global::UnityEngine.Animations.ConstraintSource target = default(global::UnityEngine.Animations.ConstraintSource);
			global::UnityEngine.Transform accessor = target.sourceTransform;
			target.sourceTransform = default(global::UnityEngine.Transform);
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Animations.ConstraintSource));
			optimized.SetValue(default(global::UnityEngine.Animations.ConstraintSource), default(global::UnityEngine.Transform));
		}
		
		// UnityEngine.Animations.ConstraintSource.weight
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ConstraintSource_weight()
		{
			global::UnityEngine.Animations.ConstraintSource target = default(global::UnityEngine.Animations.ConstraintSource);
			float accessor = target.weight;
			target.weight = default(float);
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Animations.ConstraintSource));
			optimized.SetValue(default(global::UnityEngine.Animations.ConstraintSource), default(float));
		}
		
		// UnityEngine.Animations.LookAtConstraint.constraintActive
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_constraintActive()
		{
			global::UnityEngine.Animations.LookAtConstraint target = default(global::UnityEngine.Animations.LookAtConstraint);
			bool accessor = target.constraintActive;
			target.constraintActive = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Animations.LookAtConstraint, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Animations.LookAtConstraint, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Animations.LookAtConstraint));
			optimized.SetValue(default(global::UnityEngine.Animations.LookAtConstraint), default(bool));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.SetSource
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_SetSource()
		{
			global::UnityEngine.Animations.LookAtConstraint target = default(global::UnityEngine.Animations.LookAtConstraint);
			int arg0 = default(int);
			global::UnityEngine.Animations.ConstraintSource arg1 = default(global::UnityEngine.Animations.ConstraintSource);
			target.SetSource(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Animations.LookAtConstraint, int, UnityEngine.Animations.ConstraintSource> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Animations.LookAtConstraint, int, UnityEngine.Animations.ConstraintSource>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animations.LookAtConstraint), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.constraintActive
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_constraintActive()
		{
			global::UnityEngine.Animations.ParentConstraint target = default(global::UnityEngine.Animations.ParentConstraint);
			bool accessor = target.constraintActive;
			target.constraintActive = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Animations.ParentConstraint, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Animations.ParentConstraint, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Animations.ParentConstraint));
			optimized.SetValue(default(global::UnityEngine.Animations.ParentConstraint), default(bool));
		}
		
		// UnityEngine.Animations.ParentConstraint.locked
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_locked()
		{
			global::UnityEngine.Animations.ParentConstraint target = default(global::UnityEngine.Animations.ParentConstraint);
			bool accessor = target.locked;
			target.locked = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Animations.ParentConstraint, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Animations.ParentConstraint, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Animations.ParentConstraint));
			optimized.SetValue(default(global::UnityEngine.Animations.ParentConstraint), default(bool));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.SetSource
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_SetSource()
		{
			global::UnityEngine.Animations.ParentConstraint target = default(global::UnityEngine.Animations.ParentConstraint);
			int arg0 = default(int);
			global::UnityEngine.Animations.ConstraintSource arg1 = default(global::UnityEngine.Animations.ConstraintSource);
			target.SetSource(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Animations.ParentConstraint, int, UnityEngine.Animations.ConstraintSource> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Animations.ParentConstraint, int, UnityEngine.Animations.ConstraintSource>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animations.ParentConstraint), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.constraintActive
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_constraintActive()
		{
			global::UnityEngine.Animations.PositionConstraint target = default(global::UnityEngine.Animations.PositionConstraint);
			bool accessor = target.constraintActive;
			target.constraintActive = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Animations.PositionConstraint, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Animations.PositionConstraint, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Animations.PositionConstraint));
			optimized.SetValue(default(global::UnityEngine.Animations.PositionConstraint), default(bool));
		}
		
		// UnityEngine.Animations.PositionConstraint.locked
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_locked()
		{
			global::UnityEngine.Animations.PositionConstraint target = default(global::UnityEngine.Animations.PositionConstraint);
			bool accessor = target.locked;
			target.locked = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Animations.PositionConstraint, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Animations.PositionConstraint, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Animations.PositionConstraint));
			optimized.SetValue(default(global::UnityEngine.Animations.PositionConstraint), default(bool));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.SetSource
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_SetSource()
		{
			global::UnityEngine.Animations.PositionConstraint target = default(global::UnityEngine.Animations.PositionConstraint);
			int arg0 = default(int);
			global::UnityEngine.Animations.ConstraintSource arg1 = default(global::UnityEngine.Animations.ConstraintSource);
			target.SetSource(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Animations.PositionConstraint, int, UnityEngine.Animations.ConstraintSource> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Animations.PositionConstraint, int, UnityEngine.Animations.ConstraintSource>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animations.PositionConstraint), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.BlendConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_BlendConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.BlendConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_BlendConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.BlendConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_BlendConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.BoneRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_BoneRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.BoneRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_BoneRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.BoneRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_BoneRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.ChainIKConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_ChainIKConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.ChainIKConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_ChainIKConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.ChainIKConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_ChainIKConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.DampedTransform.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_DampedTransform_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.DampedTransform.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_DampedTransform_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.DampedTransform.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_DampedTransform_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiAimConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiAimConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiAimConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiAimConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiAimConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiAimConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiParentConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiParentConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiParentConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiParentConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiParentConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiParentConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiPositionConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiPositionConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiPositionConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiPositionConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiPositionConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiPositionConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiReferentialConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiReferentialConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiReferentialConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiReferentialConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiReferentialConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiReferentialConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiRotationConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiRotationConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiRotationConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiRotationConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.MultiRotationConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_MultiRotationConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.OverrideTransform.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_OverrideTransform_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.OverrideTransform.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_OverrideTransform_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.OverrideTransform.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_OverrideTransform_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.Rig.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_Rig_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.Rig.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_Rig_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.Rig.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_Rig_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.RigBuilder.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_RigBuilder_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.RigBuilder.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_RigBuilder_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.RigBuilder.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_RigBuilder_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.RigTransform.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_RigTransform_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.RigTransform.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_RigTransform_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.RigTransform.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_RigTransform_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.TwistChainConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_TwistChainConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.TwistChainConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_TwistChainConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.TwistChainConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_TwistChainConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.TwistCorrection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_TwistCorrection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.TwistCorrection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_TwistCorrection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.TwistCorrection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_TwistCorrection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.TwoBoneIKConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_TwoBoneIKConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.TwoBoneIKConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_TwoBoneIKConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.Rigging.TwoBoneIKConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_Rigging_TwoBoneIKConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.GetCurrentAnimatorStateInfo
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_GetCurrentAnimatorStateInfo()
		{
			global::UnityEngine.Animator target = default(global::UnityEngine.Animator);
			int arg0 = default(int);
			target.GetCurrentAnimatorStateInfo(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Animator, int, UnityEngine.AnimatorStateInfo> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Animator, int, UnityEngine.AnimatorStateInfo>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animator), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.Play
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_Play()
		{
			global::UnityEngine.Animator target = default(global::UnityEngine.Animator);
			string arg0 = default(string);
			target.Play(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animator), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.SetBool
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_SetBool()
		{
			global::UnityEngine.Animator target = default(global::UnityEngine.Animator);
			string arg0 = default(string);
			bool arg1 = default(bool);
			target.SetBool(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string, bool> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animator), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.SetTrigger
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_SetTrigger()
		{
			global::UnityEngine.Animator target = default(global::UnityEngine.Animator);
			string arg0 = default(string);
			target.SetTrigger(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animator), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.speed
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_speed()
		{
			global::UnityEngine.Animator target = default(global::UnityEngine.Animator);
			float accessor = target.speed;
			target.speed = default(float);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Animator, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Animator, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Animator));
			optimized.SetValue(default(global::UnityEngine.Animator), default(float));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorStateInfo.speed
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorStateInfo_speed()
		{
			global::UnityEngine.AnimatorStateInfo target = default(global::UnityEngine.AnimatorStateInfo);
			float accessor = target.speed;
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.AnimatorStateInfo));
		}
		
		// UnityEngine.AreaEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AreaEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AreaEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AreaEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AreaEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AreaEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ArticulationBody.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ArticulationBody_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ArticulationBody.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ArticulationBody_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ArticulationBody.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ArticulationBody_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundleManifest.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundleManifest_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundleManifest.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundleManifest_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundleManifest.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundleManifest_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.TransitionTo
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_TransitionTo()
		{
			global::UnityEngine.Audio.AudioMixerSnapshot target = default(global::UnityEngine.Audio.AudioMixerSnapshot);
			float arg0 = default(float);
			target.TransitionTo(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Audio.AudioMixerSnapshot, float> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Audio.AudioMixerSnapshot, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Audio.AudioMixerSnapshot), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_enabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
			optimized.SetValue(default(global::UnityEngine.Behaviour), default(bool));
		}
		
		// UnityEngine.AudioSource.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.Play
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_Play()
		{
			global::UnityEngine.AudioSource target = default(global::UnityEngine.AudioSource);
			target.Play();
			global::Ludiq.InstanceActionInvoker<UnityEngine.AudioSource> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.AudioSource>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.AudioSource));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.PlayOneShot
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_PlayOneShot()
		{
			global::UnityEngine.AudioSource target = default(global::UnityEngine.AudioSource);
			global::UnityEngine.AudioClip arg0 = default(global::UnityEngine.AudioClip);
			target.PlayOneShot(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.AudioSource, UnityEngine.AudioClip> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.AudioSource, UnityEngine.AudioClip>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.AudioSource), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.volume
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_volume()
		{
			global::UnityEngine.AudioSource target = default(global::UnityEngine.AudioSource);
			float accessor = target.volume;
			target.volume = default(float);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.AudioSource, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.AudioSource, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.AudioSource));
			optimized.SetValue(default(global::UnityEngine.AudioSource), default(float));
		}
		
		// UnityEngine.Avatar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Avatar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Avatar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Bounds.Contains
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Bounds_Contains()
		{
			global::UnityEngine.Bounds target = default(global::UnityEngine.Bounds);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.Contains(arg0);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Bounds), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Bounds.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Bounds_op_Equality()
		{
			global::UnityEngine.Bounds arg0 = default(global::UnityEngine.Bounds);
			global::UnityEngine.Bounds arg1 = default(global::UnityEngine.Bounds);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Bounds.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Bounds_op_Inequality()
		{
			global::UnityEngine.Bounds arg0 = default(global::UnityEngine.Bounds);
			global::UnityEngine.Bounds arg1 = default(global::UnityEngine.Bounds);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider.center
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_center()
		{
			global::UnityEngine.BoxCollider target = default(global::UnityEngine.BoxCollider);
			global::UnityEngine.Vector3 accessor = target.center;
			target.center = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.BoxCollider, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.BoxCollider, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.BoxCollider));
			optimized.SetValue(default(global::UnityEngine.BoxCollider), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.BoxCollider.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_enabled()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
			optimized.SetValue(default(global::UnityEngine.Collider), default(bool));
		}
		
		// UnityEngine.BoxCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider.size
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_size()
		{
			global::UnityEngine.BoxCollider target = default(global::UnityEngine.BoxCollider);
			global::UnityEngine.Vector3 accessor = target.size;
			target.size = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.BoxCollider, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.BoxCollider, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.BoxCollider));
			optimized.SetValue(default(global::UnityEngine.BoxCollider), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.BoxCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BuoyancyEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BuoyancyEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BuoyancyEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BuoyancyEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BuoyancyEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BuoyancyEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.backgroundColor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_backgroundColor()
		{
			global::UnityEngine.Camera target = default(global::UnityEngine.Camera);
			global::UnityEngine.Color accessor = target.backgroundColor;
			target.backgroundColor = default(global::UnityEngine.Color);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Camera, UnityEngine.Color> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Camera, UnityEngine.Color>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Camera));
			optimized.SetValue(default(global::UnityEngine.Camera), default(global::UnityEngine.Color));
		}
		
		// UnityEngine.Camera.clearFlags
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_clearFlags()
		{
			global::UnityEngine.Camera target = default(global::UnityEngine.Camera);
			global::UnityEngine.CameraClearFlags accessor = target.clearFlags;
			target.clearFlags = default(global::UnityEngine.CameraClearFlags);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Camera, UnityEngine.CameraClearFlags> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Camera, UnityEngine.CameraClearFlags>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Camera));
			optimized.SetValue(default(global::UnityEngine.Camera), default(global::UnityEngine.CameraClearFlags));
		}
		
		// UnityEngine.Camera.cullingMask
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_cullingMask()
		{
			global::UnityEngine.Camera target = default(global::UnityEngine.Camera);
			int accessor = target.cullingMask;
			target.cullingMask = default(int);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Camera, int> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Camera, int>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Camera));
			optimized.SetValue(default(global::UnityEngine.Camera), default(int));
		}
		
		// UnityEngine.Camera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Canvas.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Canvas_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Canvas.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Canvas_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Canvas.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Canvas_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider_enabled()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
			optimized.SetValue(default(global::UnityEngine.Collider), default(bool));
		}
		
		// UnityEngine.CapsuleCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CircleCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CircleCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CircleCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CircleCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CircleCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CircleCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cloth.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cloth_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cloth.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cloth_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cloth.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cloth_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider.CompareTag
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_CompareTag()
		{
			global::UnityEngine.Component target = default(global::UnityEngine.Component);
			string arg0 = default(string);
			target.CompareTag(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Component, string, bool> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Component, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Component), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.Lerp
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_Lerp()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			float arg2 = default(float);
			global::UnityEngine.Color.Lerp(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, float, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, float, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Addition()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 + arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Division()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			float arg1 = default(float);
			UnityEngine.Color @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Equality()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Implicit()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Implicit_0()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			UnityEngine.Color conversion = ((UnityEngine.Color)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Inequality()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply_0()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			float arg1 = default(float);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply_1()
		{
			float arg0 = default(float);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Color, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Subtraction()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 - arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.CompareTag
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_CompareTag()
		{
			global::UnityEngine.Component target = default(global::UnityEngine.Component);
			string arg0 = default(string);
			target.CompareTag(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Component, string, bool> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Component, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Component), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.Destroy
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_Destroy()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object.Destroy(arg0);
			global::Ludiq.StaticActionInvoker<UnityEngine.Object> optimized = new global::Ludiq.StaticActionInvoker<UnityEngine.Object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.gameObject
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_gameObject()
		{
			global::UnityEngine.Component target = default(global::UnityEngine.Component);
			global::UnityEngine.GameObject accessor = target.gameObject;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Component, UnityEngine.GameObject> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Component, UnityEngine.GameObject>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Component));
		}
		
		// UnityEngine.Component.GetComponent
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_GetComponent()
		{
			global::UnityEngine.Component target = default(global::UnityEngine.Component);
			global::System.Type arg0 = default(global::System.Type);
			target.GetComponent(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Component, System.Type, UnityEngine.Component> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Component, System.Type, UnityEngine.Component>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Component), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.Instantiate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_Instantiate()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Transform arg1 = default(global::UnityEngine.Transform);
			global::UnityEngine.Object.Instantiate(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Transform, UnityEngine.Object> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Transform, UnityEngine.Object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.name
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_name()
		{
			global::UnityEngine.Object target = default(global::UnityEngine.Object);
			string accessor = target.name;
			target.name = default(string);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Object, string> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Object, string>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Object));
			optimized.SetValue(default(global::UnityEngine.Object), default(string));
		}
		
		// UnityEngine.Component.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.tag
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_tag()
		{
			global::UnityEngine.Component target = default(global::UnityEngine.Component);
			string accessor = target.tag;
			target.tag = default(string);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Component, string> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Component, string>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Component));
			optimized.SetValue(default(global::UnityEngine.Component), default(string));
		}
		
		// UnityEngine.CompositeCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CompositeCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CompositeCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CompositeCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CompositeCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CompositeCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConfigurableJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConfigurableJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConfigurableJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConfigurableJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConfigurableJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConfigurableJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ContactPoint.normal
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ContactPoint_normal()
		{
			global::UnityEngine.ContactPoint target = default(global::UnityEngine.ContactPoint);
			global::UnityEngine.Vector3 accessor = target.normal;
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.ContactPoint));
		}
		
		// UnityEngine.Cubemap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cubemap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cubemap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Debug.Log
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Debug_Log()
		{
			object arg0 = default(object);
			global::UnityEngine.Debug.Log(arg0);
			global::Ludiq.StaticActionInvoker<object> optimized = new global::Ludiq.StaticActionInvoker<object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.DistanceJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_DistanceJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.DistanceJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_DistanceJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.DistanceJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_DistanceJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EdgeCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EdgeCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EdgeCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EdgeCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EdgeCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EdgeCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Effector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Effector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Effector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Effector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Effector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Effector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.OVRInputModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_OVRInputModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.OVRInputModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_OVRInputModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.OVRInputModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_OVRInputModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.OVRPhysicsRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_OVRPhysicsRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.OVRPhysicsRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_OVRPhysicsRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.OVRPhysicsRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_OVRPhysicsRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FrictionJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FrictionJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FrictionJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FrictionJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FrictionJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FrictionJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_ctor()
		{
			string arg0 = default(string);
			new UnityEngine.GameObject(arg0);
		}
		
		// UnityEngine.GameObject..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_ctor_0()
		{
			new UnityEngine.GameObject();
		}
		
		// UnityEngine.GameObject.activeSelf
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_activeSelf()
		{
			global::UnityEngine.GameObject target = default(global::UnityEngine.GameObject);
			bool accessor = target.activeSelf;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.GameObject, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.GameObject, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.GameObject));
		}
		
		// UnityEngine.GameObject.AddComponent
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_AddComponent()
		{
			global::UnityEngine.GameObject target = default(global::UnityEngine.GameObject);
			global::System.Type arg0 = default(global::System.Type);
			target.AddComponent(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.GameObject, System.Type, UnityEngine.Component> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.GameObject, System.Type, UnityEngine.Component>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.GameObject), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.CompareTag
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_CompareTag()
		{
			global::UnityEngine.GameObject target = default(global::UnityEngine.GameObject);
			string arg0 = default(string);
			target.CompareTag(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.GameObject, string, bool> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.GameObject, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.GameObject), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.Destroy
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_Destroy()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object.Destroy(arg0);
			global::Ludiq.StaticActionInvoker<UnityEngine.Object> optimized = new global::Ludiq.StaticActionInvoker<UnityEngine.Object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.Find
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_Find()
		{
			string arg0 = default(string);
			global::UnityEngine.GameObject.Find(arg0);
			global::Ludiq.StaticFunctionInvoker<string, UnityEngine.GameObject> optimized = new global::Ludiq.StaticFunctionInvoker<string, UnityEngine.GameObject>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.Instantiate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_Instantiate()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Transform arg1 = default(global::UnityEngine.Transform);
			global::UnityEngine.Object.Instantiate(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Transform, UnityEngine.Object> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Transform, UnityEngine.Object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.Instantiate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_Instantiate_0()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Quaternion arg2 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Transform arg3 = default(global::UnityEngine.Transform);
			global::UnityEngine.Object.Instantiate(arg0, arg1, arg2, arg3);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform, UnityEngine.Object> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform, UnityEngine.Object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2, arg3);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.Instantiate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_Instantiate_1()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object.Instantiate(arg0);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.Instantiate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_Instantiate_2()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Transform arg1 = default(global::UnityEngine.Transform);
			bool arg2 = default(bool);
			global::UnityEngine.Object.Instantiate(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Transform, bool, UnityEngine.Object> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Transform, bool, UnityEngine.Object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.name
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_name()
		{
			global::UnityEngine.Object target = default(global::UnityEngine.Object);
			string accessor = target.name;
			target.name = default(string);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Object, string> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Object, string>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Object));
			optimized.SetValue(default(global::UnityEngine.Object), default(string));
		}
		
		// UnityEngine.GameObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.SetActive
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_SetActive()
		{
			global::UnityEngine.GameObject target = default(global::UnityEngine.GameObject);
			bool arg0 = default(bool);
			target.SetActive(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.GameObject, bool> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.GameObject, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.GameObject), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.transform
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_transform()
		{
			global::UnityEngine.GameObject target = default(global::UnityEngine.GameObject);
			global::UnityEngine.Transform accessor = target.transform;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.GameObject, UnityEngine.Transform> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.GameObject, UnityEngine.Transform>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.GameObject));
		}
		
		// UnityEngine.GUISkin.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GUISkin_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GUISkin.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GUISkin_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GUISkin.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GUISkin_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LayerMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LayerMask_op_Implicit()
		{
			global::UnityEngine.LayerMask arg0 = default(global::UnityEngine.LayerMask);
			int conversion = ((int)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.LayerMask, int> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.LayerMask, int>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LayerMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LayerMask_op_Implicit_0()
		{
			int arg0 = default(int);
			UnityEngine.LayerMask conversion = ((UnityEngine.LayerMask)(arg0));
			global::Ludiq.StaticFunctionInvoker<int, UnityEngine.LayerMask> optimized = new global::Ludiq.StaticFunctionInvoker<int, UnityEngine.LayerMask>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightingSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightingSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightingSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightingSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightingSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightingSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_ctor()
		{
			global::UnityEngine.Material arg0 = default(global::UnityEngine.Material);
			new UnityEngine.Material(arg0);
		}
		
		// UnityEngine.Material.color
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_color()
		{
			global::UnityEngine.Material target = default(global::UnityEngine.Material);
			global::UnityEngine.Color accessor = target.color;
			target.color = default(global::UnityEngine.Color);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Material, UnityEngine.Color> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Material, UnityEngine.Color>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Material));
			optimized.SetValue(default(global::UnityEngine.Material), default(global::UnityEngine.Color));
		}
		
		// UnityEngine.Material.mainTextureOffset
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_mainTextureOffset()
		{
			global::UnityEngine.Material target = default(global::UnityEngine.Material);
			global::UnityEngine.Vector2 accessor = target.mainTextureOffset;
			target.mainTextureOffset = default(global::UnityEngine.Vector2);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Material, UnityEngine.Vector2> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Material, UnityEngine.Vector2>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Material));
			optimized.SetValue(default(global::UnityEngine.Material), default(global::UnityEngine.Vector2));
		}
		
		// UnityEngine.Material.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.SetColor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_SetColor()
		{
			global::UnityEngine.Material target = default(global::UnityEngine.Material);
			string arg0 = default(string);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			target.SetColor(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Material, string, UnityEngine.Color> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Material, string, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Material), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MaterialPropertyBlock..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MaterialPropertyBlock_ctor()
		{
			new UnityEngine.MaterialPropertyBlock();
		}
		
		// UnityEngine.MaterialPropertyBlock.SetColor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MaterialPropertyBlock_SetColor()
		{
			global::UnityEngine.MaterialPropertyBlock target = default(global::UnityEngine.MaterialPropertyBlock);
			string arg0 = default(string);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			target.SetColor(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.MaterialPropertyBlock, string, UnityEngine.Color> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.MaterialPropertyBlock, string, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.MaterialPropertyBlock), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mathf.Clamp
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mathf_Clamp()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			global::UnityEngine.Mathf.Clamp(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<float, float, float, float> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, float, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mathf.Pow
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mathf_Pow()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			global::UnityEngine.Mathf.Pow(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, float> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Equality()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Inequality()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Multiply()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			UnityEngine.Matrix4x4 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, UnityEngine.Matrix4x4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, UnityEngine.Matrix4x4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Multiply_0()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshCollider.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_enabled()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
			optimized.SetValue(default(global::UnityEngine.Collider), default(bool));
		}
		
		// UnityEngine.MeshCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_enabled()
		{
			global::UnityEngine.Renderer target = default(global::UnityEngine.Renderer);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Renderer));
			optimized.SetValue(default(global::UnityEngine.Renderer), default(bool));
		}
		
		// UnityEngine.MeshRenderer.material
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_material()
		{
			global::UnityEngine.Renderer target = default(global::UnityEngine.Renderer);
			global::UnityEngine.Material accessor = target.material;
			target.material = default(global::UnityEngine.Material);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, UnityEngine.Material> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, UnityEngine.Material>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Renderer));
			optimized.SetValue(default(global::UnityEngine.Renderer), default(global::UnityEngine.Material));
		}
		
		// UnityEngine.MeshRenderer.materials
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_materials()
		{
			global::UnityEngine.Renderer target = default(global::UnityEngine.Renderer);
			UnityEngine.Material[] accessor = target.materials;
			target.materials = default(UnityEngine.Material[]);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, UnityEngine.Material[]> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, UnityEngine.Material[]>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Renderer));
			optimized.SetValue(default(global::UnityEngine.Renderer), default(UnityEngine.Material[]));
		}
		
		// UnityEngine.MeshRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.SetPropertyBlock
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_SetPropertyBlock()
		{
			global::UnityEngine.Renderer target = default(global::UnityEngine.Renderer);
			global::UnityEngine.MaterialPropertyBlock arg0 = default(global::UnityEngine.MaterialPropertyBlock);
			target.SetPropertyBlock(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Renderer, UnityEngine.MaterialPropertyBlock> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Renderer, UnityEngine.MaterialPropertyBlock>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Renderer), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_ctor()
		{
			new UnityEngine.Object();
		}
		
		// UnityEngine.Object.name
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_name()
		{
			global::UnityEngine.Object target = default(global::UnityEngine.Object);
			string accessor = target.name;
			target.name = default(string);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Object, string> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Object, string>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Object));
			optimized.SetValue(default(global::UnityEngine.Object), default(string));
		}
		
		// UnityEngine.Object.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.isPlaying
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_isPlaying()
		{
			global::UnityEngine.ParticleSystem target = default(global::UnityEngine.ParticleSystem);
			bool accessor = target.isPlaying;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.ParticleSystem, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.ParticleSystem, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.ParticleSystem));
		}
		
		// UnityEngine.ParticleSystem.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.Play
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_Play()
		{
			global::UnityEngine.ParticleSystem target = default(global::UnityEngine.ParticleSystem);
			target.Play();
			global::Ludiq.InstanceActionInvoker<UnityEngine.ParticleSystem> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.ParticleSystem>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.ParticleSystem));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.Stop
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_Stop()
		{
			global::UnityEngine.ParticleSystem target = default(global::UnityEngine.ParticleSystem);
			target.Stop();
			global::Ludiq.InstanceActionInvoker<UnityEngine.ParticleSystem> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.ParticleSystem>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.ParticleSystem));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemForceField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemForceField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemForceField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemForceField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemForceField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemForceField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicMaterial.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicMaterial_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicMaterial.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicMaterial_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicMaterial.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicMaterial_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsMaterial2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsMaterial2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsMaterial2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsMaterial2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsMaterial2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsMaterial2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsUpdateBehaviour2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsUpdateBehaviour2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsUpdateBehaviour2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PlatformEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PlatformEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PlatformEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PlatformEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PlatformEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PlatformEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PointEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PointEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PointEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PointEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PointEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PointEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PolygonCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PolygonCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PolygonCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PolygonCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PolygonCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PolygonCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.antiAliasing
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_antiAliasing()
		{
			int accessor = global::UnityEngine.QualitySettings.antiAliasing;
			global::UnityEngine.QualitySettings.antiAliasing = default(int);
			global::Ludiq.StaticPropertyAccessor<int> optimized = new global::Ludiq.StaticPropertyAccessor<int>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
			optimized.SetValue(null, default(int));
		}
		
		// UnityEngine.QualitySettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.shadowDistance
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_shadowDistance()
		{
			float accessor = global::UnityEngine.QualitySettings.shadowDistance;
			global::UnityEngine.QualitySettings.shadowDistance = default(float);
			global::Ludiq.StaticPropertyAccessor<float> optimized = new global::Ludiq.StaticPropertyAccessor<float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
			optimized.SetValue(null, default(float));
		}
		
		// UnityEngine.Quaternion.Angle
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_Angle()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion.Angle(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, float> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.AngleAxis
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_AngleAxis()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Quaternion.AngleAxis(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector3, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector3, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.Euler
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_Euler()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Quaternion.Euler(arg0);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.Euler
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_Euler_0()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			global::UnityEngine.Quaternion.Euler(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<float, float, float, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, float, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.eulerAngles
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_eulerAngles()
		{
			global::UnityEngine.Quaternion target = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Vector3 accessor = target.eulerAngles;
			target.eulerAngles = default(global::UnityEngine.Vector3);
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Quaternion));
			optimized.SetValue(default(global::UnityEngine.Quaternion), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Quaternion.FromToRotation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_FromToRotation()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Quaternion.FromToRotation(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.identity
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_identity()
		{
			global::UnityEngine.Quaternion accessor = global::UnityEngine.Quaternion.identity;
			global::Ludiq.StaticPropertyAccessor<UnityEngine.Quaternion> optimized = new global::Ludiq.StaticPropertyAccessor<UnityEngine.Quaternion>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// UnityEngine.Quaternion.Inverse
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_Inverse()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion.Inverse(arg0);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.Lerp
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_Lerp()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			float arg2 = default(float);
			global::UnityEngine.Quaternion.Lerp(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, float, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, float, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Equality()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Inequality()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Multiply()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			UnityEngine.Quaternion @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Multiply_0()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Random.Range
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Random_Range()
		{
			int arg0 = default(int);
			int arg1 = default(int);
			global::UnityEngine.Random.Range(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<int, int, int> optimized = new global::Ludiq.StaticFunctionInvoker<int, int, int>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Random.Range
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Random_Range_0()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			global::UnityEngine.Random.Range(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, float> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RaycastHit2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit2D_op_Implicit()
		{
			global::UnityEngine.RaycastHit2D arg0 = default(global::UnityEngine.RaycastHit2D);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.RaycastHit2D, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.RaycastHit2D, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rect_op_Equality()
		{
			global::UnityEngine.Rect arg0 = default(global::UnityEngine.Rect);
			global::UnityEngine.Rect arg1 = default(global::UnityEngine.Rect);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rect_op_Inequality()
		{
			global::UnityEngine.Rect arg0 = default(global::UnityEngine.Rect);
			global::UnityEngine.Rect arg1 = default(global::UnityEngine.Rect);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.localPosition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_localPosition()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 accessor = target.localPosition;
			target.localPosition = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.RectTransform.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RelativeJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RelativeJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RelativeJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RelativeJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RelativeJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RelativeJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_enabled()
		{
			global::UnityEngine.Renderer target = default(global::UnityEngine.Renderer);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Renderer));
			optimized.SetValue(default(global::UnityEngine.Renderer), default(bool));
		}
		
		// UnityEngine.Renderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.centerOfMass
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_centerOfMass()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			global::UnityEngine.Vector3 accessor = target.centerOfMass;
			target.centerOfMass = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Rigidbody));
			optimized.SetValue(default(global::UnityEngine.Rigidbody), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Rigidbody.constraints
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_constraints()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			global::UnityEngine.RigidbodyConstraints accessor = target.constraints;
			target.constraints = default(global::UnityEngine.RigidbodyConstraints);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.RigidbodyConstraints> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.RigidbodyConstraints>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Rigidbody));
			optimized.SetValue(default(global::UnityEngine.Rigidbody), default(global::UnityEngine.RigidbodyConstraints));
		}
		
		// UnityEngine.Rigidbody.freezeRotation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_freezeRotation()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			bool accessor = target.freezeRotation;
			target.freezeRotation = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Rigidbody));
			optimized.SetValue(default(global::UnityEngine.Rigidbody), default(bool));
		}
		
		// UnityEngine.Rigidbody.isKinematic
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_isKinematic()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			bool accessor = target.isKinematic;
			target.isKinematic = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Rigidbody));
			optimized.SetValue(default(global::UnityEngine.Rigidbody), default(bool));
		}
		
		// UnityEngine.Rigidbody.MovePosition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_MovePosition()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.MovePosition(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Rigidbody, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Rigidbody, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Rigidbody), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.velocity
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_velocity()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			global::UnityEngine.Vector3 accessor = target.velocity;
			target.velocity = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Rigidbody));
			optimized.SetValue(default(global::UnityEngine.Rigidbody), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Rigidbody2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SceneManagement.Scene.name
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SceneManagement_Scene_name()
		{
			global::UnityEngine.SceneManagement.Scene target = default(global::UnityEngine.SceneManagement.Scene);
			string accessor = target.name;
			target.name = default(string);
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.SceneManagement.Scene));
			optimized.SetValue(default(global::UnityEngine.SceneManagement.Scene), default(string));
		}
		
		// UnityEngine.SceneManagement.Scene.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SceneManagement_Scene_op_Equality()
		{
			global::UnityEngine.SceneManagement.Scene arg0 = default(global::UnityEngine.SceneManagement.Scene);
			global::UnityEngine.SceneManagement.Scene arg1 = default(global::UnityEngine.SceneManagement.Scene);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SceneManagement.Scene.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SceneManagement_Scene_op_Inequality()
		{
			global::UnityEngine.SceneManagement.Scene arg0 = default(global::UnityEngine.SceneManagement.Scene);
			global::UnityEngine.SceneManagement.Scene arg1 = default(global::UnityEngine.SceneManagement.Scene);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SceneManagement.SceneManager.GetActiveScene
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SceneManagement_SceneManager_GetActiveScene()
		{
			global::UnityEngine.SceneManagement.SceneManager.GetActiveScene();
			global::Ludiq.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_enabled()
		{
			global::UnityEngine.Renderer target = default(global::UnityEngine.Renderer);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Renderer));
			optimized.SetValue(default(global::UnityEngine.Renderer), default(bool));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.SetPropertyBlock
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_SetPropertyBlock()
		{
			global::UnityEngine.Renderer target = default(global::UnityEngine.Renderer);
			global::UnityEngine.MaterialPropertyBlock arg0 = default(global::UnityEngine.MaterialPropertyBlock);
			target.SetPropertyBlock(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Renderer, UnityEngine.MaterialPropertyBlock> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Renderer, UnityEngine.MaterialPropertyBlock>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Renderer), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SliderJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SliderJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SliderJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SliderJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SliderJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SliderJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpatialTracking.TrackedPoseDriver.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpatialTracking_TrackedPoseDriver_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpatialTracking.TrackedPoseDriver.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpatialTracking_TrackedPoseDriver_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpatialTracking.TrackedPoseDriver.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpatialTracking_TrackedPoseDriver_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SphereCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SphereCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SphereCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SphereCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SphereCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SphereCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteMask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteMask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteMask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteMask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteMask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.color
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_color()
		{
			global::UnityEngine.SpriteRenderer target = default(global::UnityEngine.SpriteRenderer);
			global::UnityEngine.Color accessor = target.color;
			target.color = default(global::UnityEngine.Color);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.SpriteRenderer, UnityEngine.Color> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.SpriteRenderer, UnityEngine.Color>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.SpriteRenderer));
			optimized.SetValue(default(global::UnityEngine.SpriteRenderer), default(global::UnityEngine.Color));
		}
		
		// UnityEngine.SpriteRenderer.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_enabled()
		{
			global::UnityEngine.Renderer target = default(global::UnityEngine.Renderer);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Renderer));
			optimized.SetValue(default(global::UnityEngine.Renderer), default(bool));
		}
		
		// UnityEngine.SpriteRenderer.material
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_material()
		{
			global::UnityEngine.Renderer target = default(global::UnityEngine.Renderer);
			global::UnityEngine.Material accessor = target.material;
			target.material = default(global::UnityEngine.Material);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, UnityEngine.Material> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, UnityEngine.Material>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Renderer));
			optimized.SetValue(default(global::UnityEngine.Renderer), default(global::UnityEngine.Material));
		}
		
		// UnityEngine.SpriteRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SurfaceEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SurfaceEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SurfaceEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SurfaceEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SurfaceEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SurfaceEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TargetJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TargetJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TargetJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TargetJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TargetJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TargetJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Terrain.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Terrain_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Terrain.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Terrain_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Terrain.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Terrain_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainData.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainData_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainData.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainData_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainData.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainData_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainLayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainLayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainLayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainLayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainLayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainLayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_ctor()
		{
			new UnityEngine.TextAsset();
		}
		
		// UnityEngine.TextAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.text
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_text()
		{
			global::UnityEngine.TextAsset target = default(global::UnityEngine.TextAsset);
			string accessor = target.text;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.TextAsset, string> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.TextAsset, string>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.TextAsset));
		}
		
		// UnityEngine.TextMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tilemap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tilemap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tilemap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tilemap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tilemap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tilemap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Time.deltaTime
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Time_deltaTime()
		{
			float accessor = global::UnityEngine.Time.deltaTime;
			global::Ludiq.StaticPropertyAccessor<float> optimized = new global::Ludiq.StaticPropertyAccessor<float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// UnityEngine.TrailRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TrailRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TrailRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.childCount
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_childCount()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			int accessor = target.childCount;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, int> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, int>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
		}
		
		// UnityEngine.Transform.DetachChildren
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_DetachChildren()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			target.DetachChildren();
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.eulerAngles
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_eulerAngles()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 accessor = target.eulerAngles;
			target.eulerAngles = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Transform.Find
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_Find()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			string arg0 = default(string);
			target.Find(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, string, UnityEngine.Transform> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, string, UnityEngine.Transform>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.forward
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_forward()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 accessor = target.forward;
			target.forward = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Transform.GetChild
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_GetChild()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			int arg0 = default(int);
			target.GetChild(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, int, UnityEngine.Transform> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, int, UnityEngine.Transform>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.InverseTransformPoint
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_InverseTransformPoint()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.InverseTransformPoint(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.localPosition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_localPosition()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 accessor = target.localPosition;
			target.localPosition = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Transform.localRotation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_localRotation()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Quaternion accessor = target.localRotation;
			target.localRotation = default(global::UnityEngine.Quaternion);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Quaternion> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Quaternion>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Quaternion));
		}
		
		// UnityEngine.Transform.localScale
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_localScale()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 accessor = target.localScale;
			target.localScale = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Transform.LookAt
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_LookAt()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.LookAt(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.LookAt
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_LookAt_0()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Transform arg0 = default(global::UnityEngine.Transform);
			target.LookAt(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Transform> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Transform>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.lossyScale
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_lossyScale()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 accessor = target.lossyScale;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
		}
		
		// UnityEngine.Transform.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.parent
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_parent()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Transform accessor = target.parent;
			target.parent = default(global::UnityEngine.Transform);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Transform> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Transform>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Transform));
		}
		
		// UnityEngine.Transform.position
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_position()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 accessor = target.position;
			target.position = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Transform.right
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_right()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 accessor = target.right;
			target.right = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Transform.Rotate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_Rotate()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.Rotate(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.Rotate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_Rotate_0()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Space arg1 = default(global::UnityEngine.Space);
			target.Rotate(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Space> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Space>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.rotation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_rotation()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Quaternion accessor = target.rotation;
			target.rotation = default(global::UnityEngine.Quaternion);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Quaternion> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Quaternion>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Quaternion));
		}
		
		// UnityEngine.Transform.SetParent
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_SetParent()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Transform arg0 = default(global::UnityEngine.Transform);
			target.SetParent(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Transform> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Transform>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.SetParent
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_SetParent_0()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Transform arg0 = default(global::UnityEngine.Transform);
			bool arg1 = default(bool);
			target.SetParent(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Transform, bool> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Transform, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.TransformDirection
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_TransformDirection()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.TransformDirection(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.TransformPoint
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_TransformPoint()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			target.TransformPoint(arg0, arg1, arg2);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, float, float, float, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, float, float, float, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.TransformPoint
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_TransformPoint_0()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.TransformPoint(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.Translate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_Translate()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Space arg1 = default(global::UnityEngine.Space);
			target.Translate(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Space> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Space>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.up
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_up()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 accessor = target.up;
			target.up = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Tree.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tree_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tree.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tree_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tree.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tree_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.InputField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.InputField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.InputField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutElement.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutElement.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutElement.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.StyleSheet.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_StyleSheet_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.StyleSheet.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_StyleSheet_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.StyleSheet.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_StyleSheet_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.ThemeStyleSheet.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.ThemeStyleSheet.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.ThemeStyleSheet.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VectorImage.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VectorImage_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VectorImage.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VectorImage_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VectorImage.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VectorImage_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VisualTreeAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VisualTreeAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VisualTreeAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Addition()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 + arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Division()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Division_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			float arg1 = default(float);
			UnityEngine.Vector2 @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Equality()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Implicit()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector2 conversion = ((UnityEngine.Vector2)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Implicit_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector3 conversion = ((UnityEngine.Vector3)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Inequality()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			float arg1 = default(float);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply_1()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Subtraction()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 - arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_UnaryNegation()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.Set
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_Set()
		{
			global::UnityEngine.Vector2 target = default(global::UnityEngine.Vector2);
			float arg0 = default(float);
			float arg1 = default(float);
			target.Set(arg0, arg1);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Vector2), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_ctor()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			new UnityEngine.Vector3(arg0, arg1, arg2);
		}
		
		// UnityEngine.Vector3.forward
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_forward()
		{
			global::UnityEngine.Vector3 accessor = global::UnityEngine.Vector3.forward;
			global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector3> optimized = new global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// UnityEngine.Vector3.Lerp
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_Lerp()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			float arg2 = default(float);
			global::UnityEngine.Vector3.Lerp(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, float, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, float, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.magnitude
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_magnitude()
		{
			global::UnityEngine.Vector3 target = default(global::UnityEngine.Vector3);
			float accessor = target.magnitude;
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Vector3.Magnitude
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_Magnitude()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3.Magnitude(arg0);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.Normalize
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_Normalize()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3.Normalize(arg0);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.normalized
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_normalized()
		{
			global::UnityEngine.Vector3 target = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 accessor = target.normalized;
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Vector3.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Addition()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 + arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Division()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			float arg1 = default(float);
			UnityEngine.Vector3 @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Equality()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Inequality()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Multiply()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			float arg1 = default(float);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Multiply_0()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Subtraction()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 - arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_UnaryNegation()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.ProjectOnPlane
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_ProjectOnPlane()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3.ProjectOnPlane(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.right
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_right()
		{
			global::UnityEngine.Vector3 accessor = global::UnityEngine.Vector3.right;
			global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector3> optimized = new global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// UnityEngine.Vector3.Set
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_Set()
		{
			global::UnityEngine.Vector3 target = default(global::UnityEngine.Vector3);
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			target.Set(arg0, arg1, arg2);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Vector3), arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.SignedAngle
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_SignedAngle()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg2 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3.SignedAngle(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, float> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.sqrMagnitude
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_sqrMagnitude()
		{
			global::UnityEngine.Vector3 target = default(global::UnityEngine.Vector3);
			float accessor = target.sqrMagnitude;
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Vector3.up
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_up()
		{
			global::UnityEngine.Vector3 accessor = global::UnityEngine.Vector3.up;
			global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector3> optimized = new global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// UnityEngine.Vector3.x
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_x()
		{
			global::UnityEngine.Vector3 target = default(global::UnityEngine.Vector3);
			float accessor = target.x;
			target.x = default(float);
			global::Ludiq.ReflectionFieldAccessor optimized = new global::Ludiq.ReflectionFieldAccessor(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(default(global::UnityEngine.Vector3));
			optimized.SetValue(default(global::UnityEngine.Vector3), default(float));
		}
		
		// UnityEngine.Vector3.y
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_y()
		{
			global::UnityEngine.Vector3 target = default(global::UnityEngine.Vector3);
			float accessor = target.y;
			target.y = default(float);
			global::Ludiq.ReflectionFieldAccessor optimized = new global::Ludiq.ReflectionFieldAccessor(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(default(global::UnityEngine.Vector3));
			optimized.SetValue(default(global::UnityEngine.Vector3), default(float));
		}
		
		// UnityEngine.Vector3.z
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_z()
		{
			global::UnityEngine.Vector3 target = default(global::UnityEngine.Vector3);
			float accessor = target.z;
			target.z = default(float);
			global::Ludiq.ReflectionFieldAccessor optimized = new global::Ludiq.ReflectionFieldAccessor(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(default(global::UnityEngine.Vector3));
			optimized.SetValue(default(global::UnityEngine.Vector3), default(float));
		}
		
		// UnityEngine.Vector3.zero
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_zero()
		{
			global::UnityEngine.Vector3 accessor = global::UnityEngine.Vector3.zero;
			global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector3> optimized = new global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// UnityEngine.Vector4.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Addition()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 + arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Division()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			float arg1 = default(float);
			UnityEngine.Vector4 @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Equality()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit_0()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector3 conversion = ((UnityEngine.Vector3)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit_1()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Inequality()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Multiply()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			float arg1 = default(float);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Multiply_0()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Subtraction()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 - arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_UnaryNegation()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoPlayer.clip
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_clip()
		{
			global::UnityEngine.Video.VideoPlayer target = default(global::UnityEngine.Video.VideoPlayer);
			global::UnityEngine.Video.VideoClip accessor = target.clip;
			target.clip = default(global::UnityEngine.Video.VideoClip);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Video.VideoPlayer, UnityEngine.Video.VideoClip> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Video.VideoPlayer, UnityEngine.Video.VideoClip>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Video.VideoPlayer));
			optimized.SetValue(default(global::UnityEngine.Video.VideoPlayer), default(global::UnityEngine.Video.VideoClip));
		}
		
		// UnityEngine.Video.VideoPlayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoPlayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoPlayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoPlayer.Play
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_Play()
		{
			global::UnityEngine.Video.VideoPlayer target = default(global::UnityEngine.Video.VideoPlayer);
			target.Play();
			global::Ludiq.InstanceActionInvoker<UnityEngine.Video.VideoPlayer> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Video.VideoPlayer>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Video.VideoPlayer));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoPlayer.Prepare
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_Prepare()
		{
			global::UnityEngine.Video.VideoPlayer target = default(global::UnityEngine.Video.VideoPlayer);
			target.Prepare();
			global::Ludiq.InstanceActionInvoker<UnityEngine.Video.VideoPlayer> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Video.VideoPlayer>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Video.VideoPlayer));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WindZone.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WindZone_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WindZone.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WindZone_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WindZone.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WindZone_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityTemplateProjects.SimpleCameraController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityTemplateProjects_SimpleCameraController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityTemplateProjects.SimpleCameraController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityTemplateProjects_SimpleCameraController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityTemplateProjects.SimpleCameraController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityTemplateProjects_SimpleCameraController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UserMenuManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UserMenuManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UserMenuManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UserMenuManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UserMenuManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UserMenuManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ValueLabelsVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ValueLabelsVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ValueLabelsVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ValueLabelsVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ValueLabelsVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ValueLabelsVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ValueLabelsVisualizer.Xdisplacement
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ValueLabelsVisualizer_Xdisplacement()
		{
			global::ValueLabelsVisualizer target = default(global::ValueLabelsVisualizer);
			target.Xdisplacement = default(float);
			global::Ludiq.InstancePropertyAccessor<ValueLabelsVisualizer, float> optimized = new global::Ludiq.InstancePropertyAccessor<ValueLabelsVisualizer, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::ValueLabelsVisualizer));
			optimized.SetValue(default(global::ValueLabelsVisualizer), default(float));
		}
		
		// ValueLabelsVisualizer.Ydisplacement
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ValueLabelsVisualizer_Ydisplacement()
		{
			global::ValueLabelsVisualizer target = default(global::ValueLabelsVisualizer);
			target.Ydisplacement = default(float);
			global::Ludiq.InstancePropertyAccessor<ValueLabelsVisualizer, float> optimized = new global::Ludiq.InstancePropertyAccessor<ValueLabelsVisualizer, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::ValueLabelsVisualizer));
			optimized.SetValue(default(global::ValueLabelsVisualizer), default(float));
		}
		
		// ValueLabelsVisualizer.Zdisplacement
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ValueLabelsVisualizer_Zdisplacement()
		{
			global::ValueLabelsVisualizer target = default(global::ValueLabelsVisualizer);
			target.Zdisplacement = default(float);
			global::Ludiq.InstancePropertyAccessor<ValueLabelsVisualizer, float> optimized = new global::Ludiq.InstancePropertyAccessor<ValueLabelsVisualizer, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::ValueLabelsVisualizer));
			optimized.SetValue(default(global::ValueLabelsVisualizer), default(float));
		}
		
		// ValuesAnimationController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ValuesAnimationController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ValuesAnimationController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ValuesAnimationController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ValuesAnimationController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ValuesAnimationController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VertexExtrusionScript.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VertexExtrusionScript_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VertexExtrusionScript.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VertexExtrusionScript_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// VertexExtrusionScript.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VertexExtrusionScript_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VRAnimatorController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VRAnimatorController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VRAnimatorController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VRAnimatorController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// VRAnimatorController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VRAnimatorController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VRLegsIK.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VRLegsIK_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VRLegsIK.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VRLegsIK_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// VRLegsIK.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VRLegsIK_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VRLink.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VRLink_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VRLink.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VRLink_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// VRLink.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VRLink_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// WaterAudioTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void WaterAudioTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// WaterAudioTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void WaterAudioTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// WaterAudioTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void WaterAudioTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ZoomController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ZoomController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ZoomController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ZoomController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ZoomController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ZoomController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
	}
}
